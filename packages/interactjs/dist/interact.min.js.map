{"version":3,"file":"interact.min.js","sources":["../../@interactjs/utils/isWindow.ts","../../@interactjs/utils/window.ts","../../@interactjs/utils/is.ts","../../@interactjs/actions/drag/plugin.ts","../../@interactjs/utils/domObjects.ts","../../@interactjs/utils/browser.ts","../../@interactjs/utils/domUtils.ts","../../@interactjs/utils/extend.ts","../../@interactjs/utils/rect.ts","../../@interactjs/utils/getOriginXY.ts","../../@interactjs/utils/normalizeListeners.ts","../../@interactjs/utils/hypot.ts","../../@interactjs/utils/pointerExtend.ts","../../@interactjs/utils/pointerUtils.ts","../../@interactjs/core/BaseEvent.ts","../../@interactjs/utils/arr.ts","../../@interactjs/actions/drop/DropEvent.ts","../../@interactjs/actions/drop/plugin.ts","../../@interactjs/actions/gesture/plugin.ts","../../@interactjs/actions/resize/plugin.ts","../../@interactjs/actions/plugin.ts","../../@interactjs/utils/raf.ts","../../@interactjs/auto-scroll/plugin.ts","../../@interactjs/utils/misc.ts","../../@interactjs/auto-start/InteractableMethods.ts","../../@interactjs/auto-start/base.ts","../../@interactjs/auto-start/dragAxis.ts","../../@interactjs/auto-start/hold.ts","../../@interactjs/auto-start/plugin.ts","../../@interactjs/core/interactablePreventDefault.ts","../../@interactjs/utils/isNonNativeEvent.ts","../../@interactjs/utils/clone.ts","../../@interactjs/modifiers/Modification.ts","../../@interactjs/modifiers/base.ts","../../@interactjs/core/options.ts","../../@interactjs/core/InteractEvent.ts","../../@interactjs/core/PointerInfo.ts","../../@interactjs/core/Interaction.ts","../../@interactjs/offset/plugin.ts","../../@interactjs/inertia/plugin.ts","../../@interactjs/core/Eventable.ts","../../@interactjs/core/events.ts","../../@interactjs/core/interactionFinder.ts","../../@interactjs/core/interactions.ts","../../@interactjs/core/Interactable.ts","../../@interactjs/core/InteractableSet.ts","../../@interactjs/core/scope.ts","../../@interactjs/interact/index.ts","../../@interactjs/core/InteractStatic.ts","../../@interactjs/snappers/edgeTarget.ts","../../@interactjs/snappers/elements.ts","../../@interactjs/snappers/grid.ts","../../@interactjs/snappers/plugin.ts","../../@interactjs/modifiers/aspectRatio.ts","../../@interactjs/modifiers/noop.ts","../../@interactjs/modifiers/restrict/pointer.ts","../../@interactjs/modifiers/restrict/edges.ts","../../@interactjs/modifiers/restrict/rect.ts","../../@interactjs/modifiers/restrict/size.ts","../../@interactjs/modifiers/snap/pointer.ts","../../@interactjs/modifiers/snap/size.ts","../../@interactjs/modifiers/snap/edges.ts","../../@interactjs/modifiers/all.ts","../../@interactjs/modifiers/plugin.ts","../../@interactjs/pointer-events/PointerEvent.ts","../../@interactjs/pointer-events/base.ts","../../@interactjs/pointer-events/holdRepeat.ts","../../@interactjs/pointer-events/interactableTargets.ts","../../@interactjs/pointer-events/plugin.ts","../../@interactjs/reflow/plugin.ts","../index.ts","../../@interactjs/interactjs/index.ts"],"sourcesContent":["export default (thing: any) => !!(thing && thing.Window) && thing instanceof thing.Window\n","import isWindow from './isWindow'\n\nexport let realWindow = undefined as Window\n\nlet win = undefined as Window\nexport { win as window }\n\nexport function init(window: Window & { wrap?: (...args: any[]) => any }) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  realWindow = window\n\n  // create a TextNode\n  const el = window.document.createTextNode('')\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document && typeof window.wrap === 'function' && window.wrap(el) === el) {\n    // use wrapped window\n    window = window.wrap(window)\n  }\n\n  win = window\n}\n\nif (typeof window !== 'undefined' && !!window) {\n  init(window)\n}\n\nexport function getWindow(node: any) {\n  if (isWindow(node)) {\n    return node\n  }\n\n  const rootNode = node.ownerDocument || node\n\n  return rootNode.defaultView || win.window\n}\n","import isWindow from './isWindow'\nimport * as win from './window'\n\nconst window = (thing: any): thing is Window => thing === win.window || isWindow(thing)\n\nconst docFrag = (thing: any): thing is DocumentFragment => object(thing) && thing.nodeType === 11\n\nconst object = (thing: any): thing is { [index: string]: any } => !!thing && typeof thing === 'object'\n\nconst func = (thing: any): thing is (...args: any[]) => any => typeof thing === 'function'\n\nconst number = (thing: any): thing is number => typeof thing === 'number'\n\nconst bool = (thing: any): thing is boolean => typeof thing === 'boolean'\n\nconst string = (thing: any): thing is string => typeof thing === 'string'\n\nconst element = (thing: any): thing is HTMLElement | SVGElement => {\n  if (!thing || typeof thing !== 'object') {\n    return false\n  }\n\n  const _window = win.getWindow(thing) || win.window\n\n  return /object|function/.test(typeof Element)\n    ? thing instanceof Element || thing instanceof _window.Element\n    : thing.nodeType === 1 && typeof thing.nodeName === 'string'\n}\n\nconst plainObject: typeof object = (thing: any): thing is { [index: string]: any } =>\n  object(thing) && !!thing.constructor && /function Object\\b/.test(thing.constructor.toString())\n\nconst array = <T extends unknown>(thing: any): thing is T[] =>\n  object(thing) && typeof thing.length !== 'undefined' && func(thing.splice)\n\nexport default {\n  window,\n  docFrag,\n  object,\n  func,\n  number,\n  bool,\n  string,\n  element,\n  plainObject,\n  array,\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ListenersArg, OrBoolean } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    draggable(options: Partial<OrBoolean<DraggableOptions>> | boolean): this\n    draggable(): DraggableOptions\n    /**\n     * ```js\n     * interact(element).draggable({\n     *     onstart: function (event) {},\n     *     onmove : function (event) {},\n     *     onend  : function (event) {},\n     *\n     *     // the axis in which the first movement must be\n     *     // for the drag sequence to start\n     *     // 'xy' by default - any direction\n     *     startAxis: 'x' || 'y' || 'xy',\n     *\n     *     // 'xy' by default - don't restrict to one axis (move in any direction)\n     *     // 'x' or 'y' to restrict movement to either axis\n     *     // 'start' to restrict movement to the axis the drag started in\n     *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n     *\n     *     // max number of drags that can happen concurrently\n     *     // with elements of this Interactable. Infinity by default\n     *     max: Infinity,\n     *\n     *     // max number of drags that can target the same element+Interactable\n     *     // 1 by default\n     *     maxPerElement: 2\n     * })\n     *\n     * var isDraggable = interact('element').draggable(); // true\n     * ```\n     *\n     * Get or set whether drag actions can be performed on the target\n     *\n     * @param options - true/false or An object with event\n     * listeners to be fired on drag events (object makes the Interactable\n     * draggable)\n     */\n    draggable(options?: Partial<OrBoolean<DraggableOptions>> | boolean): this | DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drag: DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drag?: typeof drag\n  }\n}\n\nexport type DragEvent = InteractEvent<'drag'>\n\nexport interface DraggableOptions extends PerActionDefaults {\n  startAxis?: 'x' | 'y' | 'xy'\n  lockAxis?: 'x' | 'y' | 'xy' | 'start'\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nfunction install(scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  Interactable.prototype.draggable = drag.draggable\n\n  actions.map.drag = drag\n  actions.methodDict.drag = 'draggable'\n\n  defaults.actions.drag = drag.defaults\n}\n\nfunction beforeMove({ interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y = interaction.coords.start.page.y\n    interaction.coords.cur.client.y = interaction.coords.start.client.y\n\n    interaction.coords.velocity.client.y = 0\n    interaction.coords.velocity.page.y = 0\n  } else if (axis === 'y') {\n    interaction.coords.cur.page.x = interaction.coords.start.page.x\n    interaction.coords.cur.client.x = interaction.coords.start.client.x\n\n    interaction.coords.velocity.client.x = 0\n    interaction.coords.velocity.page.x = 0\n  }\n}\n\nfunction move({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x'\n\n    iEvent.page[opposite] = interaction.coords.start.page[opposite]\n    iEvent.client[opposite] = interaction.coords.start.client[opposite]\n    iEvent.delta[opposite] = 0\n  }\n}\n\nconst draggable: Interactable['draggable'] = function draggable(\n  this: Interactable,\n  options?: DraggableOptions | boolean,\n): any {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled !== false\n    this.setPerAction('drag', options)\n    this.setOnEvents('drag', options)\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis\n    }\n\n    return this\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options\n\n    return this\n  }\n\n  return this.options.drag as DraggableOptions\n}\n\nconst drag: Plugin = {\n  id: 'actions/drag',\n  install,\n  listeners: {\n    'interactions:before-action-move': beforeMove,\n    'interactions:action-resume': beforeMove,\n\n    // dragmove\n    'interactions:action-move': move,\n    'auto-start:check': (arg) => {\n      const { interaction, interactable, buttons } = arg\n      const dragOptions = interactable.options.drag\n\n      if (\n        !(dragOptions && dragOptions.enabled) ||\n        // check mouseButton setting if the pointer is down\n        (interaction.pointerIsDown &&\n          /mouse|pointer/.test(interaction.pointerType) &&\n          (buttons & interactable.options.drag.mouseButtons) === 0)\n      ) {\n        return undefined\n      }\n\n      arg.action = {\n        name: 'drag',\n        axis: dragOptions.lockAxis === 'start' ? dragOptions.startAxis : dragOptions.lockAxis,\n      }\n\n      return false\n    },\n  },\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis: 'xy',\n    lockAxis: 'xy',\n  } as DraggableOptions,\n\n  getCursor() {\n    return 'move'\n  },\n\n  filterEventType: (type: string) => type.search('drag') === 0,\n}\n\nexport default drag\n","const domObjects: {\n  init: any\n  document: Document\n  DocumentFragment: typeof DocumentFragment\n  SVGElement: typeof SVGElement\n  SVGSVGElement: typeof SVGSVGElement\n  SVGElementInstance: any\n  Element: typeof Element\n  HTMLElement: typeof HTMLElement\n  Event: typeof Event\n  Touch: typeof Touch\n  PointerEvent: typeof PointerEvent\n} = {\n  init,\n  document: null,\n  DocumentFragment: null,\n  SVGElement: null,\n  SVGSVGElement: null,\n  SVGElementInstance: null,\n  Element: null,\n  HTMLElement: null,\n  Event: null,\n  Touch: null,\n  PointerEvent: null,\n}\n\nfunction blank() {}\n\nexport default domObjects\n\nfunction init(window: Window) {\n  const win = window as any\n\n  domObjects.document = win.document\n  domObjects.DocumentFragment = win.DocumentFragment || blank\n  domObjects.SVGElement = win.SVGElement || blank\n  domObjects.SVGSVGElement = win.SVGSVGElement || blank\n  domObjects.SVGElementInstance = win.SVGElementInstance || blank\n  domObjects.Element = win.Element || blank\n  domObjects.HTMLElement = win.HTMLElement || domObjects.Element\n\n  domObjects.Event = win.Event\n  domObjects.Touch = win.Touch || blank\n  domObjects.PointerEvent = win.PointerEvent || win.MSPointerEvent\n}\n","import domObjects from './domObjects'\nimport is from './is'\n\nconst browser = {\n  init,\n  supportsTouch: null as boolean,\n  supportsPointerEvent: null as boolean,\n  isIOS7: null as boolean,\n  isIOS: null as boolean,\n  isIe9: null as boolean,\n  isOperaMobile: null as boolean,\n  prefixedMatchesSelector: null as 'matches',\n  pEventTypes: null as {\n    up: string\n    down: string\n    over: string\n    out: string\n    move: string\n    cancel: string\n  },\n  wheelEvent: null as string,\n}\n\nfunction init(window: any) {\n  const Element = domObjects.Element\n  const navigator: Partial<Navigator> = window.navigator || {}\n\n  // Does the browser support touch input?\n  browser.supportsTouch =\n    'ontouchstart' in window ||\n    (is.func(window.DocumentTouch) && domObjects.document instanceof window.DocumentTouch)\n\n  // Does the browser support PointerEvents\n  // https://github.com/taye/interact.js/issues/703#issuecomment-471570492\n  browser.supportsPointerEvent = (navigator as any).pointerEnabled !== false && !!domObjects.PointerEvent\n\n  browser.isIOS = /iP(hone|od|ad)/.test(navigator.platform)\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  browser.isIOS7 = /iP(hone|od|ad)/.test(navigator.platform) && /OS 7[^\\d]/.test(navigator.appVersion)\n\n  browser.isIe9 = /MSIE 9/.test(navigator.userAgent)\n\n  // Opera Mobile must be handled differently\n  browser.isOperaMobile =\n    navigator.appName === 'Opera' && browser.supportsTouch && /Presto/.test(navigator.userAgent)\n\n  // prefix matchesSelector\n  browser.prefixedMatchesSelector = (\n    'matches' in Element.prototype\n      ? 'matches'\n      : 'webkitMatchesSelector' in Element.prototype\n        ? 'webkitMatchesSelector'\n        : 'mozMatchesSelector' in Element.prototype\n          ? 'mozMatchesSelector'\n          : 'oMatchesSelector' in Element.prototype\n            ? 'oMatchesSelector'\n            : 'msMatchesSelector'\n  ) as 'matches'\n\n  browser.pEventTypes = browser.supportsPointerEvent\n    ? domObjects.PointerEvent === window.MSPointerEvent\n      ? {\n          up: 'MSPointerUp',\n          down: 'MSPointerDown',\n          over: 'mouseover',\n          out: 'mouseout',\n          move: 'MSPointerMove',\n          cancel: 'MSPointerCancel',\n        }\n      : {\n          up: 'pointerup',\n          down: 'pointerdown',\n          over: 'pointerover',\n          out: 'pointerout',\n          move: 'pointermove',\n          cancel: 'pointercancel',\n        }\n    : null\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  browser.wheelEvent = domObjects.document && 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n}\n\nexport default browser\n","import type { Rect, Target, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport domObjects from './domObjects'\nimport is from './is'\nimport * as win from './window'\n\nexport function nodeContains(parent: Node, child: Node) {\n  if (parent.contains) {\n    return parent.contains(child as Node)\n  }\n\n  while (child) {\n    if (child === parent) {\n      return true\n    }\n\n    child = (child as Node).parentNode\n  }\n\n  return false\n}\n\nexport function closest(element: Node, selector: string) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return element\n    }\n\n    element = parentNode(element)\n  }\n\n  return null\n}\n\nexport function parentNode(node: Node | Document) {\n  let parent = node.parentNode\n\n  if (is.docFrag(parent)) {\n    // skip past #shado-root fragments\n    // tslint:disable-next-line\n    while ((parent = (parent as any).host) && is.docFrag(parent)) {\n      continue\n    }\n\n    return parent\n  }\n\n  return parent\n}\n\nexport function matchesSelector(element: Element, selector: string) {\n  // remove /deep/ from selectors if shadowDOM polyfill is used\n  if (win.window !== win.realWindow) {\n    selector = selector.replace(/\\/deep\\//g, ' ')\n  }\n\n  return element[browser.prefixedMatchesSelector](selector)\n}\n\nconst getParent = (el: Node | Document | ShadowRoot) => el.parentNode || (el as ShadowRoot).host\n\n// Test for the element that's \"above\" all other qualifiers\nexport function indexOfDeepestElement(elements: Element[] | NodeListOf<globalThis.Element>) {\n  let deepestNodeParents: Node[] = []\n  let deepestNodeIndex: number\n\n  for (let i = 0; i < elements.length; i++) {\n    const currentNode = elements[i]\n    const deepestNode: Node = elements[deepestNodeIndex]\n\n    // node may appear in elements array multiple times\n    if (!currentNode || i === deepestNodeIndex) {\n      continue\n    }\n\n    if (!deepestNode) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    const currentNodeParent = getParent(currentNode)\n    const deepestNodeParent = getParent(deepestNode)\n\n    // check if the deepest or current are document.documentElement/rootElement\n    // - if the current node is, do nothing and continue\n    if (currentNodeParent === currentNode.ownerDocument) {\n      continue\n    }\n    // - if deepest is, update with the current node and continue to next\n    else if (deepestNodeParent === currentNode.ownerDocument) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    // compare zIndex of siblings\n    if (currentNodeParent === deepestNodeParent) {\n      if (zIndexIsHigherThan(currentNode, deepestNode)) {\n        deepestNodeIndex = i\n      }\n\n      continue\n    }\n\n    // populate the ancestry array for the latest deepest node\n    deepestNodeParents = deepestNodeParents.length ? deepestNodeParents : getNodeParents(deepestNode)\n\n    let ancestryStart: Node\n\n    // if the deepest node is an HTMLElement and the current node is a non root svg element\n    if (\n      deepestNode instanceof domObjects.HTMLElement &&\n      currentNode instanceof domObjects.SVGElement &&\n      !(currentNode instanceof domObjects.SVGSVGElement)\n    ) {\n      // TODO: is this check necessary? Was this for HTML elements embedded in SVG?\n      if (currentNode === deepestNodeParent) {\n        continue\n      }\n\n      ancestryStart = currentNode.ownerSVGElement\n    } else {\n      ancestryStart = currentNode\n    }\n\n    const currentNodeParents = getNodeParents(ancestryStart, deepestNode.ownerDocument)\n    let commonIndex = 0\n\n    // get (position of closest common ancestor) + 1\n    while (\n      currentNodeParents[commonIndex] &&\n      currentNodeParents[commonIndex] === deepestNodeParents[commonIndex]\n    ) {\n      commonIndex++\n    }\n\n    const parents = [\n      currentNodeParents[commonIndex - 1],\n      currentNodeParents[commonIndex],\n      deepestNodeParents[commonIndex],\n    ]\n\n    if (parents[0]) {\n      let child = parents[0].lastChild\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestNodeIndex = i\n          deepestNodeParents = currentNodeParents\n\n          break\n        } else if (child === parents[2]) {\n          break\n        }\n\n        child = child.previousSibling\n      }\n    }\n  }\n\n  return deepestNodeIndex\n}\n\nfunction getNodeParents(node: Node, limit?: Node) {\n  const parents: Node[] = []\n  let parent: Node = node\n  let parentParent: Node\n\n  while ((parentParent = getParent(parent)) && parent !== limit && parentParent !== parent.ownerDocument) {\n    parents.unshift(parent)\n    parent = parentParent\n  }\n\n  return parents\n}\n\nfunction zIndexIsHigherThan(higherNode: Node, lowerNode: Node) {\n  const higherIndex = parseInt(win.getWindow(higherNode).getComputedStyle(higherNode).zIndex, 10) || 0\n  const lowerIndex = parseInt(win.getWindow(lowerNode).getComputedStyle(lowerNode).zIndex, 10) || 0\n\n  return higherIndex >= lowerIndex\n}\n\nexport function matchesUpTo(element: Element, selector: string, limit: Node) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return true\n    }\n\n    element = parentNode(element) as Element\n\n    if (element === limit) {\n      return matchesSelector(element, selector)\n    }\n  }\n\n  return false\n}\n\nexport function getActualElement(element: Element) {\n  return (element as any).correspondingUseElement || element\n}\n\nexport function getScrollXY(relevantWindow?: Window) {\n  relevantWindow = relevantWindow || win.window\n  return {\n    x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n    y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n  }\n}\n\nexport function getElementClientRect(element: Element): Required<Rect> {\n  const clientRect =\n    element instanceof domObjects.SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0]\n\n  return (\n    clientRect && {\n      left: clientRect.left,\n      right: clientRect.right,\n      top: clientRect.top,\n      bottom: clientRect.bottom,\n      width: clientRect.width || clientRect.right - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    }\n  )\n}\n\nexport function getElementRect(element: Element) {\n  const clientRect = getElementClientRect(element)\n\n  if (!browser.isIOS7 && clientRect) {\n    const scroll = getScrollXY(win.getWindow(element))\n\n    clientRect.left += scroll.x\n    clientRect.right += scroll.x\n    clientRect.top += scroll.y\n    clientRect.bottom += scroll.y\n  }\n\n  return clientRect\n}\n\nexport function getPath(node: Node | Document) {\n  const path = []\n\n  while (node) {\n    path.push(node)\n    node = parentNode(node)\n  }\n\n  return path\n}\n\nexport function trySelector(value: Target) {\n  if (!is.string(value)) {\n    return false\n  }\n\n  // an exception will be raised if it is invalid\n  domObjects.document.querySelector(value)\n  return true\n}\n","export default function extend<T, U extends object>(dest: U & Partial<T>, source: T): T & U {\n  for (const prop in source) {\n    ;(dest as unknown as T)[prop] = source[prop]\n  }\n\n  const ret = dest as T & U\n\n  return ret\n}\n","import type {\n  HasGetRect,\n  RectResolvable,\n  Rect,\n  Element,\n  Point,\n  FullRect,\n  EdgeOptions,\n} from '@interactjs/core/types'\n\nimport { closest, getElementRect, parentNode } from './domUtils'\nimport extend from './extend'\nimport is from './is'\n\nexport function getStringOptionResult(value: any, target: HasGetRect, element: Node) {\n  if (value === 'parent') {\n    return parentNode(element)\n  }\n\n  if (value === 'self') {\n    return target.getRect(element as Element)\n  }\n\n  return closest(element, value)\n}\n\nexport function resolveRectLike<T extends any[]>(\n  value: RectResolvable<T>,\n  target?: HasGetRect,\n  element?: Node,\n  functionArgs?: T,\n) {\n  let returnValue: any = value\n  if (is.string(returnValue)) {\n    returnValue = getStringOptionResult(returnValue, target, element)\n  } else if (is.func(returnValue)) {\n    returnValue = returnValue(...functionArgs)\n  }\n\n  if (is.element(returnValue)) {\n    returnValue = getElementRect(returnValue)\n  }\n\n  return returnValue as Rect\n}\n\nexport function toFullRect(rect: Rect): FullRect {\n  const { top, left, bottom, right } = rect\n  const width = rect.width ?? rect.right - rect.left\n  const height = rect.height ?? rect.bottom - rect.top\n\n  return { top, left, bottom, right, width, height }\n}\n\nexport function rectToXY(rect: Rect | Point) {\n  return (\n    rect && {\n      x: 'x' in rect ? rect.x : rect.left,\n      y: 'y' in rect ? rect.y : rect.top,\n    }\n  )\n}\n\nexport function xywhToTlbr<T extends Partial<Rect & Point>>(rect: T) {\n  if (rect && !('left' in rect && 'top' in rect)) {\n    rect = extend({}, rect)\n\n    rect.left = rect.x || 0\n    rect.top = rect.y || 0\n    rect.right = rect.right || rect.left + rect.width\n    rect.bottom = rect.bottom || rect.top + rect.height\n  }\n\n  return rect as Rect & T\n}\n\nexport function tlbrToXywh(rect: Rect & Partial<Point>) {\n  if (rect && !('x' in rect && 'y' in rect)) {\n    rect = extend({}, rect)\n\n    rect.x = rect.left || 0\n    rect.y = rect.top || 0\n    rect.width = rect.width || (rect.right || 0) - rect.x\n    rect.height = rect.height || (rect.bottom || 0) - rect.y\n  }\n\n  return rect as FullRect & Point\n}\n\nexport function addEdges(edges: EdgeOptions, rect: Rect, delta: Point) {\n  if (edges.left) {\n    rect.left += delta.x\n  }\n  if (edges.right) {\n    rect.right += delta.x\n  }\n  if (edges.top) {\n    rect.top += delta.y\n  }\n  if (edges.bottom) {\n    rect.bottom += delta.y\n  }\n\n  rect.width = rect.right - rect.left\n  rect.height = rect.bottom - rect.top\n}\n","import type { PerActionDefaults } from '@interactjs/core/options'\nimport type { ActionName, HasGetRect } from '@interactjs/core/types'\n\nimport { rectToXY, resolveRectLike } from './rect'\n\nexport default function getOriginXY(\n  target: HasGetRect & { options: PerActionDefaults },\n  element: Node,\n  actionName?: ActionName,\n) {\n  const actionOptions = actionName && (target.options as any)[actionName]\n  const actionOrigin = actionOptions && actionOptions.origin\n  const origin = actionOrigin || target.options.origin\n\n  const originRect = resolveRectLike(origin, target, element, [target && element])\n\n  return rectToXY(originRect) || { x: 0, y: 0 }\n}\n","import type { EventTypes, Listener, ListenersArg } from '@interactjs/core/types'\n\nimport is from './is'\n\nexport interface NormalizedListeners {\n  [type: string]: Listener[]\n}\n\nexport default function normalize(\n  type: EventTypes,\n  listeners?: ListenersArg | ListenersArg[] | null,\n  filter = (_typeOrPrefix: string) => true,\n  result?: NormalizedListeners,\n): NormalizedListeners {\n  result = result || {}\n\n  if (is.string(type) && type.search(' ') !== -1) {\n    type = split(type)\n  }\n\n  if (is.array(type)) {\n    type.forEach((t) => normalize(t, listeners, filter, result))\n    return result\n  }\n\n  // before:  type = [{ drag: () => {} }], listeners = undefined\n  // after:   type = ''                  , listeners = [{ drag: () => {} }]\n  if (is.object(type)) {\n    listeners = type\n    type = ''\n  }\n\n  if (is.func(listeners) && filter(type)) {\n    result[type] = result[type] || []\n    result[type].push(listeners)\n  } else if (is.array(listeners)) {\n    for (const l of listeners) {\n      normalize(type, l, filter, result)\n    }\n  } else if (is.object(listeners)) {\n    for (const prefix in listeners) {\n      const combinedTypes = split(prefix).map((p) => `${type}${p}`)\n\n      normalize(combinedTypes, listeners[prefix], filter, result)\n    }\n  }\n\n  return result as NormalizedListeners\n}\n\nfunction split(type: string) {\n  return type.trim().split(/ +/)\n}\n","export default (x: number, y: number) => Math.sqrt(x * x + y * y)\n","const VENDOR_PREFIXES = ['webkit', 'moz']\n\nexport default function pointerExtend<T>(dest: Partial<T & { __set?: Partial<T> }>, source: T) {\n  dest.__set ||= {} as any\n\n  for (const prop in source) {\n    // skip deprecated prefixed properties\n    if (VENDOR_PREFIXES.some((prefix) => prop.indexOf(prefix) === 0)) continue\n\n    if (typeof dest[prop] !== 'function' && prop !== '__set') {\n      Object.defineProperty(dest, prop, {\n        get() {\n          if (prop in dest.__set) return dest.__set[prop]\n\n          return (dest.__set[prop] = source[prop] as any)\n        },\n        set(value: any) {\n          dest.__set[prop] = value\n        },\n        configurable: true,\n      })\n    }\n  }\n  return dest\n}\n","import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { CoordsSetMember, PointerType, Point, PointerEventType, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport is from './is'\nimport pointerExtend from './pointerExtend'\n\nexport function copyCoords(dest: CoordsSetMember, src: CoordsSetMember) {\n  dest.page = dest.page || ({} as any)\n  dest.page.x = src.page.x\n  dest.page.y = src.page.y\n\n  dest.client = dest.client || ({} as any)\n  dest.client.x = src.client.x\n  dest.client.y = src.client.y\n\n  dest.timeStamp = src.timeStamp\n}\n\nexport function setCoordDeltas(targetObj: CoordsSetMember, prev: CoordsSetMember, cur: CoordsSetMember) {\n  targetObj.page.x = cur.page.x - prev.page.x\n  targetObj.page.y = cur.page.y - prev.page.y\n  targetObj.client.x = cur.client.x - prev.client.x\n  targetObj.client.y = cur.client.y - prev.client.y\n  targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n}\n\nexport function setCoordVelocity(targetObj: CoordsSetMember, delta: CoordsSetMember) {\n  const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n  targetObj.page.x = delta.page.x / dt\n  targetObj.page.y = delta.page.y / dt\n  targetObj.client.x = delta.client.x / dt\n  targetObj.client.y = delta.client.y / dt\n  targetObj.timeStamp = dt\n}\n\nexport function setZeroCoords(targetObj: CoordsSetMember) {\n  targetObj.page.x = 0\n  targetObj.page.y = 0\n  targetObj.client.x = 0\n  targetObj.client.y = 0\n}\n\nexport function isNativePointer(pointer: any) {\n  return pointer instanceof dom.Event || pointer instanceof dom.Touch\n}\n\n// Get specified X/Y coords for mouse or event.touches[0]\nexport function getXY(type: string, pointer: PointerType | InteractEvent, xy: Point) {\n  xy = xy || ({} as Point)\n  type = type || 'page'\n\n  xy.x = pointer[(type + 'X') as 'pageX']\n  xy.y = pointer[(type + 'Y') as 'pageY']\n\n  return xy\n}\n\nexport function getPageXY(pointer: PointerType | InteractEvent, page?: Point) {\n  page = page || { x: 0, y: 0 }\n\n  // Opera Mobile handles the viewport and scrolling oddly\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    getXY('screen', pointer, page)\n\n    page.x += window.scrollX\n    page.y += window.scrollY\n  } else {\n    getXY('page', pointer, page)\n  }\n\n  return page\n}\n\nexport function getClientXY(pointer: PointerType, client: Point) {\n  client = client || ({} as any)\n\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    // Opera Mobile handles the viewport and scrolling oddly\n    getXY('screen', pointer, client)\n  } else {\n    getXY('client', pointer, client)\n  }\n\n  return client\n}\n\nexport function getPointerId(pointer: { pointerId?: number; identifier?: number; type?: string }) {\n  return is.number(pointer.pointerId) ? pointer.pointerId! : pointer.identifier!\n}\n\nexport function setCoords(dest: CoordsSetMember, pointers: any[], timeStamp: number) {\n  const pointer = pointers.length > 1 ? pointerAverage(pointers) : pointers[0]\n\n  getPageXY(pointer, dest.page)\n  getClientXY(pointer, dest.client)\n\n  dest.timeStamp = timeStamp\n}\n\nexport function getTouchPair(event: TouchEvent | PointerType[]) {\n  const touches: PointerType[] = []\n\n  // array of touches is supplied\n  if (is.array(event)) {\n    touches[0] = event[0]\n    touches[1] = event[1]\n  }\n  // an event\n  else {\n    if (event.type === 'touchend') {\n      if (event.touches.length === 1) {\n        touches[0] = event.touches[0]\n        touches[1] = event.changedTouches[0]\n      } else if (event.touches.length === 0) {\n        touches[0] = event.changedTouches[0]\n        touches[1] = event.changedTouches[1]\n      }\n    } else {\n      touches[0] = event.touches[0]\n      touches[1] = event.touches[1]\n    }\n  }\n\n  return touches\n}\n\nexport function pointerAverage(pointers: PointerType[]) {\n  const average = {\n    pageX: 0,\n    pageY: 0,\n    clientX: 0,\n    clientY: 0,\n    screenX: 0,\n    screenY: 0,\n  }\n\n  type CoordKeys = keyof typeof average\n\n  for (const pointer of pointers) {\n    for (const prop in average) {\n      average[prop as CoordKeys] += pointer[prop as CoordKeys]\n    }\n  }\n  for (const prop in average) {\n    average[prop as CoordKeys] /= pointers.length\n  }\n\n  return average\n}\n\nexport function touchBBox(event: PointerType[]) {\n  if (!event.length) {\n    return null\n  }\n\n  const touches = getTouchPair(event)\n  const minX = Math.min(touches[0].pageX, touches[1].pageX)\n  const minY = Math.min(touches[0].pageY, touches[1].pageY)\n  const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n  const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n  return {\n    x: minX,\n    y: minY,\n    left: minX,\n    top: minY,\n    right: maxX,\n    bottom: maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  }\n}\n\nexport function touchDistance(event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n\n  const dx = touches[0][sourceX] - touches[1][sourceX]\n  const dy = touches[0][sourceY] - touches[1][sourceY]\n\n  return hypot(dx, dy)\n}\n\nexport function touchAngle(event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n  const dx = touches[1][sourceX] - touches[0][sourceX]\n  const dy = touches[1][sourceY] - touches[0][sourceY]\n  const angle = (180 * Math.atan2(dy, dx)) / Math.PI\n\n  return angle\n}\n\nexport function getPointerType(pointer: { pointerType?: string; identifier?: number; type?: string }) {\n  return is.string(pointer.pointerType)\n    ? pointer.pointerType\n    : is.number(pointer.pointerType)\n      ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]!\n      : // if the PointerEvent API isn't available, then the \"pointer\" must\n        // be either a MouseEvent, TouchEvent, or Touch object\n        /touch/.test(pointer.type || '') || pointer instanceof dom.Touch\n        ? 'touch'\n        : 'mouse'\n}\n\n// [ event.target, event.currentTarget ]\nexport function getEventTargets(event: Event) {\n  const path = is.func(event.composedPath)\n    ? (event.composedPath() as Element[])\n    : (event as unknown as { path: Element[] }).path\n\n  return [\n    domUtils.getActualElement(path ? path[0] : (event.target as Element)),\n    domUtils.getActualElement(event.currentTarget as Element),\n  ]\n}\n\nexport function newCoords(): CoordsSetMember {\n  return {\n    page: { x: 0, y: 0 },\n    client: { x: 0, y: 0 },\n    timeStamp: 0,\n  }\n}\n\nexport function coordsToEvent(coords: MockCoords) {\n  const event = {\n    coords,\n    get page() {\n      return this.coords.page\n    },\n    get client() {\n      return this.coords.client\n    },\n    get timeStamp() {\n      return this.coords.timeStamp\n    },\n    get pageX() {\n      return this.coords.page.x\n    },\n    get pageY() {\n      return this.coords.page.y\n    },\n    get clientX() {\n      return this.coords.client.x\n    },\n    get clientY() {\n      return this.coords.client.y\n    },\n    get pointerId() {\n      return this.coords.pointerId\n    },\n    get target() {\n      return this.coords.target\n    },\n    get type() {\n      return this.coords.type\n    },\n    get pointerType() {\n      return this.coords.pointerType\n    },\n    get buttons() {\n      return this.coords.buttons\n    },\n    preventDefault() {},\n  }\n\n  return event as typeof event & PointerType & PointerEventType\n}\n\nexport interface MockCoords {\n  page: Point\n  client: Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n  buttons?: number\n}\n\nexport { pointerExtend }\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName } from '@interactjs/core/types'\n\nexport class BaseEvent<T extends ActionName | null = never> {\n  declare type: string\n  declare target: EventTarget\n  declare currentTarget: Node\n  declare interactable: Interactable\n  /** @internal */\n  declare _interaction: Interaction<T>\n  declare timeStamp: number\n  immediatePropagationStopped = false\n  propagationStopped = false\n\n  constructor(interaction: Interaction<T>) {\n    this._interaction = interaction\n  }\n\n  preventDefault() {}\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation() {\n    this.propagationStopped = true\n  }\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface BaseEvent<T extends ActionName> {\n  interaction: InteractionProxy<T>\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperty(BaseEvent.prototype, 'interaction', {\n  get(this: BaseEvent) {\n    return this._interaction._proxy\n  },\n  set(this: BaseEvent) {},\n})\n","type Filter<T> = (element: T, index: number, array: T[]) => boolean\n\nexport const contains = <T>(array: T[], target: T) => array.indexOf(target) !== -1\n\nexport const remove = <T>(array: T[], target: T) => array.splice(array.indexOf(target), 1)\n\nexport const merge = <T, U>(target: Array<T | U>, source: U[]) => {\n  for (const item of source) {\n    target.push(item)\n  }\n\n  return target\n}\n\nexport const from = <T = any>(source: ArrayLike<T>) => merge([] as T[], source as T[])\n\nexport const findIndex = <T>(array: T[], func: Filter<T>) => {\n  for (let i = 0; i < array.length; i++) {\n    if (func(array[i], i, array)) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nexport const find = <T = any>(array: T[], func: Filter<T>): T | undefined => array[findIndex(array, func)]\n","import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\n\nimport type { DropState } from './plugin'\n\nexport class DropEvent extends BaseEvent<'drag'> {\n  declare target: Element\n  dropzone: Interactable\n  dragEvent: InteractEvent<'drag'>\n  relatedTarget: Element\n  draggable: Interactable\n  propagationStopped = false\n  immediatePropagationStopped = false\n\n  /**\n   * Class of events fired on dropzones during drags with acceptable targets.\n   */\n  constructor(dropState: DropState, dragEvent: InteractEvent<'drag'>, type: string) {\n    super(dragEvent._interaction)\n\n    const { element, dropzone } = type === 'dragleave' ? dropState.prev : dropState.cur\n\n    this.type = type\n    this.target = element\n    this.currentTarget = element\n    this.dropzone = dropzone\n    this.dragEvent = dragEvent\n    this.relatedTarget = dragEvent.target\n    this.draggable = dragEvent.interactable\n    this.timeStamp = dragEvent.timeStamp\n  }\n\n  /**\n   * If this is a `dropactivate` event, the dropzone element will be\n   * deactivated.\n   *\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\n   * dropzone element and more.\n   */\n  reject() {\n    const { dropState } = this._interaction\n\n    if (\n      this.type !== 'dropactivate' &&\n      (!this.dropzone || dropState.cur.dropzone !== this.dropzone || dropState.cur.element !== this.target)\n    ) {\n      return\n    }\n\n    dropState.prev.dropzone = this.dropzone\n    dropState.prev.element = this.target\n\n    dropState.rejected = true\n    dropState.events.enter = null\n\n    this.stopImmediatePropagation()\n\n    if (this.type === 'dropactivate') {\n      const activeDrops = dropState.activeDrops\n      const index = arr.findIndex(\n        activeDrops,\n        ({ dropzone, element }) => dropzone === this.dropzone && element === this.target,\n      )\n\n      dropState.activeDrops.splice(index, 1)\n\n      const deactivateEvent = new DropEvent(dropState, this.dragEvent, 'dropdeactivate')\n\n      deactivateEvent.dropzone = this.dropzone\n      deactivateEvent.target = this.target\n\n      this.dropzone.fire(deactivateEvent)\n    } else {\n      this.dropzone.fire(new DropEvent(dropState, this.dragEvent, 'dragleave'))\n    }\n  }\n\n  preventDefault() {}\n\n  stopPropagation() {\n    this.propagationStopped = true\n  }\n\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element, PointerEventType, Rect, ListenersArg } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '../drag/plugin'\n\nimport type { DragEvent } from '../drag/plugin'\nimport drag from '../drag/plugin'\n/* eslint-enable import/no-duplicates */\n\nimport { DropEvent } from './DropEvent'\n\nexport type DropFunctionChecker = (\n  dragEvent: any, // related drag operation\n  event: any, // touch or mouse EventEmitter\n  dropped: boolean, // default checker result\n  dropzone: Interactable, // dropzone interactable\n  dropElement: Element, // drop zone element\n  draggable: Interactable, // draggable's Interactable\n  draggableElement: Element, // dragged element\n) => boolean\n\nexport interface DropzoneOptions extends PerActionDefaults {\n  accept?:\n    | string\n    | Element\n    | (({ dropzone, draggableElement }: { dropzone: Interactable; draggableElement: Element }) => boolean)\n  // How the overlap is checked on the drop zone\n  overlap?: 'pointer' | 'center' | number\n  checker?: DropFunctionChecker\n\n  ondropactivate?: ListenersArg\n  ondropdeactivate?: ListenersArg\n  ondragenter?: ListenersArg\n  ondragleave?: ListenersArg\n  ondropmove?: ListenersArg\n  ondrop?: ListenersArg\n}\n\nexport interface DropzoneMethod {\n  (this: Interactable, options: DropzoneOptions | boolean): Interactable\n  (): DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    /**\n     *\n     * ```js\n     * interact('.drop').dropzone({\n     *   accept: '.can-drop' || document.getElementById('single-drop'),\n     *   overlap: 'pointer' || 'center' || zeroToOne\n     * }\n     * ```\n     *\n     * Returns or sets whether draggables can be dropped onto this target to\n     * trigger drop events\n     *\n     * Dropzones can receive the following events:\n     *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n     *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n     *  - `dragmove` when a draggable that has entered the dropzone is moved\n     *  - `drop` when a draggable is dropped into this dropzone\n     *\n     * Use the `accept` option to allow only elements that match the given CSS\n     * selector or element. The value can be:\n     *\n     *  - **an Element** - only that element can be dropped into this dropzone.\n     *  - **a string**, - the element being dragged must match it as a CSS selector.\n     *  - **`null`** - accept options is cleared - it accepts any element.\n     *\n     * Use the `overlap` option to set how drops are checked for. The allowed\n     * values are:\n     *\n     *   - `'pointer'`, the pointer must be over the dropzone (default)\n     *   - `'center'`, the draggable element's center must be over the dropzone\n     *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n     *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n     *   over the dropzone\n     *\n     * Use the `checker` option to specify a function to check if a dragged element\n     * is over this Interactable.\n     *\n     * @param options - The new options to be set\n     */\n    dropzone(options: DropzoneOptions | boolean): Interactable\n    /** @returns The current setting */\n    dropzone(): DropzoneOptions\n\n    /**\n     * ```js\n     * interact(target)\n     * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n     *                       event,             // TouchEvent/PointerEvent/MouseEvent\n     *                       dropped,           // bool result of the default checker\n     *                       dropzone,          // dropzone Interactable\n     *                       dropElement,       // dropzone elemnt\n     *                       draggable,         // draggable Interactable\n     *                       draggableElement) {// draggable element\n     *\n     *   return dropped && event.target.hasAttribute('allow-drop')\n     * }\n     * ```\n     */\n    dropCheck(\n      dragEvent: InteractEvent,\n      event: PointerEventType,\n      draggable: Interactable,\n      draggableElement: Element,\n      dropElemen: Element,\n      rect: any,\n    ): boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: DropState\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    /** @internal */\n    prevDropzone?: Interactable\n    dropzone?: Interactable\n    dragEnter?: Element\n    dragLeave?: Element\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drop: DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n\n  interface SignalArgs {\n    'actions/drop:start': DropSignalArg\n    'actions/drop:move': DropSignalArg\n    'actions/drop:end': DropSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drop?: typeof drop\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  interface InteractStatic {\n    /**\n     * Returns or sets whether the dimensions of dropzone elements are calculated\n     * on every dragmove or only on dragstart for the default dropChecker\n     *\n     * @param {boolean} [newValue] True to check on each move. False to check only\n     * before start\n     * @return {boolean | interact} The current setting or interact\n     */\n    dynamicDrop: (newValue?: boolean) => boolean | this\n  }\n}\n\ninterface DropSignalArg {\n  interaction: Interaction<'drag'>\n  dragEvent: DragEvent\n}\n\nexport interface ActiveDrop {\n  dropzone: Interactable\n  element: Element\n  rect: Rect\n}\n\nexport interface DropState {\n  cur: {\n    // the dropzone a drag target might be dropped into\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  prev: {\n    // the dropzone that was recently dragged away from\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  // wheather the potential drop was rejected from a listener\n  rejected: boolean\n  // the drop events related to the current drag event\n  events: FiredDropEvents\n  activeDrops: ActiveDrop[]\n}\n\nfunction install(scope: Scope) {\n  const { actions, interactStatic: interact, Interactable, defaults } = scope\n\n  scope.usePlugin(drag)\n\n  Interactable.prototype.dropzone = function (this: Interactable, options) {\n    return dropzoneMethod(this, options)\n  } as Interactable['dropzone']\n\n  Interactable.prototype.dropCheck = function (\n    this: Interactable,\n    dragEvent,\n    event,\n    draggable,\n    draggableElement,\n    dropElement,\n    rect,\n  ) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop!\n  }\n\n  extend(actions.phaselessTypes, {\n    dragenter: true,\n    dragleave: true,\n    dropactivate: true,\n    dropdeactivate: true,\n    dropmove: true,\n    drop: true,\n  })\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDropzones({ interactables }: Scope, draggableElement: Element) {\n  const drops: ActiveDrop[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) {\n      continue\n    }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if (\n      (is.element(accept) && accept !== draggableElement) ||\n      (is.string(accept) && !domUtils.matchesSelector(draggableElement, accept)) ||\n      (is.func(accept) && !accept({ dropzone, draggableElement }))\n    ) {\n      continue\n    }\n\n    for (const dropzoneElement of dropzone.getAllElements()) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n          rect: dropzone.getRect(dropzoneElement),\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents(activeDrops: ActiveDrop[], event: DropEvent) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops.slice()) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops(scope: Scope, dragElement: Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDropzones(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop(\n  { dropState, interactable: draggable, element: dragElement }: Interaction,\n  dragEvent,\n  pointerEvent,\n) {\n  const validDrops: Element[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    const isValid = dropzone.dropCheck(\n      dragEvent,\n      pointerEvent,\n      draggable!,\n      dragElement!,\n      dropzoneElement,\n      rect,\n    )\n    validDrops.push(isValid ? dropzoneElement : null)\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = domUtils.indexOfDeepestElement(validDrops)\n\n  return dropState!.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents(interaction: Interaction, _pointerEvent, dragEvent: DragEvent) {\n  const dropState = interaction.dropState!\n  const dropEvents: Record<string, DropEvent | null> = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target = null as never\n    dropEvents.activate.dropzone = null as never\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target = null as never\n    dropEvents.deactivate.dropzone = null as never\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave = dropEvents.leave.target = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\ntype FiredDropEvents = Partial<\n  Record<'leave' | 'enter' | 'move' | 'drop' | 'activate' | 'deactivate', DropEvent>\n>\n\nfunction fireDropEvents(interaction: Interaction, events: FiredDropEvents) {\n  const dropState = interaction.dropState!\n  const { activeDrops, cur, prev } = dropState\n\n  if (events.leave) {\n    prev.dropzone.fire(events.leave)\n  }\n  if (events.enter) {\n    cur.dropzone.fire(events.enter)\n  }\n  if (events.move) {\n    cur.dropzone.fire(events.move)\n  }\n  if (events.drop) {\n    cur.dropzone.fire(events.drop)\n  }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated({ interaction, iEvent, event }: DoPhaseArg<'drag', EventPhase>, scope: Scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return\n  }\n\n  const dropState = interaction.dropState!\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element!)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected =\n    dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod(interactable: Interactable): DropzoneOptions\nfunction dropzoneMethod(interactable: Interactable, options: DropzoneOptions | boolean): Interactable\nfunction dropzoneMethod(interactable: Interactable, options?: DropzoneOptions | boolean) {\n  if (is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      const prevListeners = interactable.options.drop.listeners\n      prevListeners && interactable.off(prevListeners)\n\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (is.func(options.ondrop)) {\n      interactable.on('drop', options.ondrop)\n    }\n    if (is.func(options.ondropactivate)) {\n      interactable.on('dropactivate', options.ondropactivate)\n    }\n    if (is.func(options.ondropdeactivate)) {\n      interactable.on('dropdeactivate', options.ondropdeactivate)\n    }\n    if (is.func(options.ondragenter)) {\n      interactable.on('dragenter', options.ondragenter)\n    }\n    if (is.func(options.ondragleave)) {\n      interactable.on('dragleave', options.ondragleave)\n    }\n    if (is.func(options.ondropmove)) {\n      interactable.on('dropmove', options.ondropmove)\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    } else if (is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod(\n  interactable: Interactable,\n  dragEvent: InteractEvent,\n  event: PointerEventType,\n  draggable: Interactable,\n  draggableElement: Element,\n  dropElement: Element,\n  rect: any,\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return interactable.options.drop.checker\n      ? interactable.options.drop.checker(\n          dragEvent,\n          event,\n          dropped,\n          interactable,\n          dropElement,\n          draggable,\n          draggableElement,\n        )\n      : false\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = getOriginXY(draggable, draggableElement, 'drag')\n    const page = pointerUtils.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = page.x > rect.left && page.x < rect.right\n    const vertical = page.y > rect.top && page.y < rect.bottom\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width / 2\n    const cy = dragRect.top + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && is.number(dropOverlap)) {\n    const overlapArea =\n      Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n      Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(\n      dragEvent,\n      event,\n      dropped,\n      interactable,\n      dropElement,\n      draggable,\n      draggableElement,\n    )\n  }\n\n  return dropped\n}\n\nconst drop: Plugin = {\n  id: 'actions/drop',\n  install,\n  listeners: {\n    'interactions:before-action-start': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      interaction.dropState = {\n        cur: {\n          dropzone: null,\n          element: null,\n        },\n        prev: {\n          dropzone: null,\n          element: null,\n        },\n        rejected: null,\n        events: null,\n        activeDrops: [],\n      }\n    },\n\n    'interactions:after-action-start': (\n      { interaction, event, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const dropState = interaction.dropState!\n\n      // reset active dropzones\n      dropState.activeDrops = []\n      dropState.events = {}\n      dropState.activeDrops = getActiveDrops(scope, interaction.element!)\n      dropState.events = getDropEvents(interaction, event, dragEvent)\n\n      if (dropState.events.activate) {\n        fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n        scope.fire('actions/drop:start', { interaction, dragEvent })\n      }\n    },\n\n    'interactions:action-move': onEventCreated,\n\n    'interactions:after-action-move': (\n      { interaction, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const dropState = interaction.dropState!\n      fireDropEvents(interaction, dropState.events)\n\n      scope.fire('actions/drop:move', { interaction, dragEvent })\n      dropState.events = {}\n    },\n\n    'interactions:action-end': (arg: DoPhaseArg<'drag', EventPhase>, scope) => {\n      if (arg.interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { interaction, iEvent: dragEvent } = arg\n\n      onEventCreated(arg, scope)\n      fireDropEvents(interaction, interaction.dropState!.events)\n      scope.fire('actions/drop:end', { interaction, dragEvent })\n    },\n\n    'interactions:stop': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      if (dropState) {\n        dropState.activeDrops = null as never\n        dropState.events = null as never\n        dropState.cur.dropzone = null as never\n        dropState.cur.element = null as never\n        dropState.prev.dropzone = null as never\n        dropState.prev.element = null as never\n        dropState.rejected = false\n      }\n    },\n  },\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n\n  filterEventType: (type: string) => type.search('drag') === 0 || type.search('drop') === 0,\n\n  defaults: {\n    enabled: false,\n    accept: null as never,\n    overlap: 'pointer',\n  } as DropzoneOptions,\n}\n\nexport default drop\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { InteractEvent, EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Rect, PointerType, ListenersArg, OrBoolean } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    gesture?: {\n      angle: number // angle from first to second touch\n      distance: number\n      scale: number // gesture.distance / gesture.startDistance\n      startAngle: number // angle of line joining two touches\n      startDistance: number // distance between two touches of touchStart\n    }\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    gesturable(options: Partial<OrBoolean<GesturableOptions>> | boolean): this\n    gesturable(): GesturableOptions\n    /**\n     * ```js\n     * interact(element).gesturable({\n     *     onstart: function (event) {},\n     *     onmove : function (event) {},\n     *     onend  : function (event) {},\n     *\n     *     // limit multiple gestures.\n     *     // See the explanation in {@link Interactable.draggable} example\n     *     max: Infinity,\n     *     maxPerElement: 1,\n     * })\n     *\n     * var isGestureable = interact(element).gesturable()\n     * ```\n     *\n     * Gets or sets whether multitouch gestures can be performed on the target\n     *\n     * @param options - true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n     * @returns A boolean indicating if this can be the target of gesture events, or this Interactable\n     */\n    gesturable(options?: Partial<OrBoolean<GesturableOptions>> | boolean): this | GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    gesture: GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    gesture?: typeof gesture\n  }\n}\n\nexport interface GesturableOptions extends PerActionDefaults {\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nexport interface GestureEvent extends InteractEvent<'gesture'> {\n  distance: number\n  angle: number\n  da: number // angle change\n  scale: number // ratio of distance start to current event\n  ds: number // scale change\n  box: Rect // enclosing box of all points\n  touches: PointerType[]\n}\n\nexport interface GestureSignalArg extends DoPhaseArg<'gesture', EventPhase> {\n  iEvent: GestureEvent\n  interaction: Interaction<'gesture'>\n}\n\nfunction install(scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  Interactable.prototype.gesturable = function (\n    this: InstanceType<typeof Interactable>,\n    options: GesturableOptions | boolean,\n  ) {\n    if (is.object(options)) {\n      this.options.gesture.enabled = options.enabled !== false\n      this.setPerAction('gesture', options)\n      this.setOnEvents('gesture', options)\n\n      return this\n    }\n\n    if (is.bool(options)) {\n      this.options.gesture.enabled = options\n\n      return this\n    }\n\n    return this.options.gesture as GesturableOptions\n  } as Interactable['gesturable']\n\n  actions.map.gesture = gesture\n  actions.methodDict.gesture = 'gesturable'\n\n  defaults.actions.gesture = gesture.defaults\n}\n\nfunction updateGestureProps({ interaction, iEvent, phase }: GestureSignalArg) {\n  if (interaction.prepared.name !== 'gesture') return\n\n  const pointers = interaction.pointers.map((p) => p.pointer)\n  const starting = phase === 'start'\n  const ending = phase === 'end'\n  const deltaSource = interaction.interactable.options.deltaSource\n\n  iEvent.touches = [pointers[0], pointers[1]]\n\n  if (starting) {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = 1\n    iEvent.ds = 0\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n    iEvent.da = 0\n\n    interaction.gesture.startDistance = iEvent.distance\n    interaction.gesture.startAngle = iEvent.angle\n  } else if (ending || interaction.pointers.length < 2) {\n    const prevEvent = interaction.prevEvent as GestureEvent\n\n    iEvent.distance = prevEvent.distance\n    iEvent.box = prevEvent.box\n    iEvent.scale = prevEvent.scale\n    iEvent.ds = 0\n    iEvent.angle = prevEvent.angle\n    iEvent.da = 0\n  } else {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = iEvent.distance / interaction.gesture.startDistance\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n\n    iEvent.ds = iEvent.scale - interaction.gesture.scale\n    iEvent.da = iEvent.angle - interaction.gesture.angle\n  }\n\n  interaction.gesture.distance = iEvent.distance\n  interaction.gesture.angle = iEvent.angle\n\n  if (is.number(iEvent.scale) && iEvent.scale !== Infinity && !isNaN(iEvent.scale)) {\n    interaction.gesture.scale = iEvent.scale\n  }\n}\n\nconst gesture: Plugin = {\n  id: 'actions/gesture',\n  before: ['actions/drag', 'actions/resize'],\n  install,\n  listeners: {\n    'interactions:action-start': updateGestureProps,\n    'interactions:action-move': updateGestureProps,\n    'interactions:action-end': updateGestureProps,\n\n    'interactions:new': ({ interaction }) => {\n      interaction.gesture = {\n        angle: 0,\n        distance: 0,\n        scale: 1,\n        startAngle: 0,\n        startDistance: 0,\n      }\n    },\n\n    'auto-start:check': (arg) => {\n      if (arg.interaction.pointers.length < 2) {\n        return undefined\n      }\n\n      const gestureOptions = arg.interactable.options.gesture\n\n      if (!(gestureOptions && gestureOptions.enabled)) {\n        return undefined\n      }\n\n      arg.action = { name: 'gesture' }\n\n      return false\n    },\n  },\n\n  defaults: {},\n\n  getCursor() {\n    return ''\n  },\n\n  filterEventType: (type: string) => type.search('gesture') === 0,\n}\n\nexport default gesture\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type {\n  ActionName,\n  ActionProps,\n  EdgeOptions,\n  FullRect,\n  ListenersArg,\n  OrBoolean,\n  Point,\n  Rect,\n} from '@interactjs/core/types'\nimport * as dom from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nexport type EdgeName = 'top' | 'left' | 'bottom' | 'right'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    resizable(): ResizableOptions\n    resizable(options: Partial<OrBoolean<ResizableOptions>> | boolean): this\n    /**\n     * ```js\n     * interact(element).resizable({\n     *   onstart: function (event) {},\n     *   onmove : function (event) {},\n     *   onend  : function (event) {},\n     *\n     *   edges: {\n     *     top   : true,       // Use pointer coords to check for resize.\n     *     left  : false,      // Disable resizing from left edge.\n     *     bottom: '.resize-s',// Resize if pointer target matches selector\n     *     right : handleEl    // Resize if pointer target is the given Element\n     *   },\n     *\n     *   // Width and height can be adjusted independently. When `true`, width and\n     *   // height are adjusted at a 1:1 ratio.\n     *   square: false,\n     *\n     *   // Width and height can be adjusted independently. When `true`, width and\n     *   // height maintain the aspect ratio they had when resizing started.\n     *   preserveAspectRatio: false,\n     *\n     *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n     *   // 'negate' will allow the rect to have negative width/height\n     *   // 'reposition' will keep the width/height positive by swapping\n     *   // the top and bottom edges and/or swapping the left and right edges\n     *   invert: 'none' || 'negate' || 'reposition'\n     *\n     *   // limit multiple resizes.\n     *   // See the explanation in the {@link Interactable.draggable} example\n     *   max: Infinity,\n     *   maxPerElement: 1,\n     * })\n     *\n     * var isResizeable = interact(element).resizable()\n     * ```\n     *\n     * Gets or sets whether resize actions can be performed on the target\n     *\n     * @param options - true/false or An object with event\n     * listeners to be fired on resize events (object makes the Interactable\n     * resizable)\n     * @returns A boolean indicating if this can be the\n     * target of resize elements, or this Interactable\n     */\n    resizable(options?: Partial<OrBoolean<ResizableOptions>> | boolean): this | ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction<T extends ActionName | null = ActionName> {\n    resizeAxes: 'x' | 'y' | 'xy'\n    styleCursor(newValue: boolean): this\n    styleCursor(): boolean\n    resizeStartAspectRatio: number\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    resize: ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    resize?: typeof resize\n  }\n}\n\nexport interface ResizableOptions extends PerActionDefaults {\n  square?: boolean\n  preserveAspectRatio?: boolean\n  edges?: EdgeOptions | null\n  axis?: 'x' | 'y' | 'xy' // deprecated\n  invert?: 'none' | 'negate' | 'reposition'\n  margin?: number\n  squareResize?: boolean\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nexport interface ResizeEvent<P extends EventPhase = EventPhase> extends InteractEvent<'resize', P> {\n  deltaRect?: FullRect\n  edges?: ActionProps['edges']\n}\n\nfunction install(scope: Scope) {\n  const {\n    actions,\n    browser,\n    Interactable, // tslint:disable-line no-shadowed-variable\n    defaults,\n  } = scope\n\n  // Less Precision with touch input\n\n  resize.cursors = initCursors(browser)\n  resize.defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10\n\n  Interactable.prototype.resizable = function (this: Interactable, options: ResizableOptions | boolean) {\n    return resizable(this, options, scope)\n  } as Interactable['resizable']\n\n  actions.map.resize = resize\n  actions.methodDict.resize = 'resizable'\n\n  defaults.actions.resize = resize.defaults\n}\n\nfunction resizeChecker(arg) {\n  const { interaction, interactable, element, rect, buttons } = arg\n\n  if (!rect) {\n    return undefined\n  }\n\n  const page = extend({}, interaction.coords.cur.page)\n  const resizeOptions = interactable.options.resize\n\n  if (\n    !(resizeOptions && resizeOptions.enabled) ||\n    // check mouseButton setting if the pointer is down\n    (interaction.pointerIsDown &&\n      /mouse|pointer/.test(interaction.pointerType) &&\n      (buttons & resizeOptions.mouseButtons) === 0)\n  ) {\n    return undefined\n  }\n\n  // if using resize.edges\n  if (is.object(resizeOptions.edges)) {\n    const resizeEdges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n\n    for (const edge in resizeEdges) {\n      resizeEdges[edge] = checkResizeEdge(\n        edge,\n        resizeOptions.edges[edge],\n        page,\n        interaction._latestPointer.eventTarget,\n        element,\n        rect,\n        resizeOptions.margin || resize.defaultMargin,\n      )\n    }\n\n    resizeEdges.left = resizeEdges.left && !resizeEdges.right\n    resizeEdges.top = resizeEdges.top && !resizeEdges.bottom\n\n    if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n      arg.action = {\n        name: 'resize',\n        edges: resizeEdges,\n      }\n    }\n  } else {\n    const right = resizeOptions.axis !== 'y' && page.x > rect.right - resize.defaultMargin\n    const bottom = resizeOptions.axis !== 'x' && page.y > rect.bottom - resize.defaultMargin\n\n    if (right || bottom) {\n      arg.action = {\n        name: 'resize',\n        axes: (right ? 'x' : '') + (bottom ? 'y' : ''),\n      }\n    }\n  }\n\n  return arg.action ? false : undefined\n}\n\nfunction resizable(interactable: Interactable, options: OrBoolean<ResizableOptions> | boolean, scope: Scope) {\n  if (is.object(options)) {\n    interactable.options.resize.enabled = options.enabled !== false\n    interactable.setPerAction('resize', options)\n    interactable.setOnEvents('resize', options)\n\n    if (is.string(options.axis) && /^x$|^y$|^xy$/.test(options.axis)) {\n      interactable.options.resize.axis = options.axis\n    } else if (options.axis === null) {\n      interactable.options.resize.axis = scope.defaults.actions.resize.axis\n    }\n\n    if (is.bool(options.preserveAspectRatio)) {\n      interactable.options.resize.preserveAspectRatio = options.preserveAspectRatio\n    } else if (is.bool(options.square)) {\n      interactable.options.resize.square = options.square\n    }\n\n    return interactable\n  }\n  if (is.bool(options)) {\n    interactable.options.resize.enabled = options\n\n    return interactable\n  }\n  return interactable.options.resize\n}\n\nfunction checkResizeEdge(\n  name: string,\n  value: any,\n  page: Point,\n  element: Node,\n  interactableElement: Element,\n  rect: Rect,\n  margin: number,\n) {\n  // false, '', undefined, null\n  if (!value) {\n    return false\n  }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width = is.number(rect.width) ? rect.width : rect.right - rect.left\n    const height = is.number(rect.height) ? rect.height : rect.bottom - rect.top\n\n    // don't use margin greater than half the relevent dimension\n    margin = Math.min(margin, Math.abs((name === 'left' || name === 'right' ? width : height) / 2))\n\n    if (width < 0) {\n      if (name === 'left') {\n        name = 'right'\n      } else if (name === 'right') {\n        name = 'left'\n      }\n    }\n    if (height < 0) {\n      if (name === 'top') {\n        name = 'bottom'\n      } else if (name === 'bottom') {\n        name = 'top'\n      }\n    }\n\n    if (name === 'left') {\n      const edge = width >= 0 ? rect.left : rect.right\n      return page.x < edge + margin\n    }\n    if (name === 'top') {\n      const edge = height >= 0 ? rect.top : rect.bottom\n      return page.y < edge + margin\n    }\n\n    if (name === 'right') {\n      return page.x > (width >= 0 ? rect.right : rect.left) - margin\n    }\n    if (name === 'bottom') {\n      return page.y > (height >= 0 ? rect.bottom : rect.top) - margin\n    }\n  }\n\n  // the remaining checks require an element\n  if (!is.element(element)) {\n    return false\n  }\n\n  return is.element(value)\n    ? // the value is an element to use as a resize handle\n      value === element\n    : // otherwise check if element matches value as selector\n      dom.matchesUpTo(element, value, interactableElement)\n}\n\n/* eslint-disable multiline-ternary */\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nfunction initCursors(browser: typeof import('@interactjs/utils/browser').default) {\n  return browser.isIe9\n    ? {\n        x: 'e-resize',\n        y: 's-resize',\n        xy: 'se-resize',\n\n        top: 'n-resize',\n        left: 'w-resize',\n        bottom: 's-resize',\n        right: 'e-resize',\n        topleft: 'se-resize',\n        bottomright: 'se-resize',\n        topright: 'ne-resize',\n        bottomleft: 'ne-resize',\n      }\n    : {\n        x: 'ew-resize',\n        y: 'ns-resize',\n        xy: 'nwse-resize',\n\n        top: 'ns-resize',\n        left: 'ew-resize',\n        bottom: 'ns-resize',\n        right: 'ew-resize',\n        topleft: 'nwse-resize',\n        bottomright: 'nwse-resize',\n        topright: 'nesw-resize',\n        bottomleft: 'nesw-resize',\n      }\n}\n/* eslint-enable multiline-ternary */\n\nfunction start({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\n    return\n  }\n\n  const resizeEvent = iEvent as ResizeEvent\n  const rect = interaction.rect\n\n  interaction._rects = {\n    start: extend({}, rect),\n    corrected: extend({}, rect),\n    previous: extend({}, rect),\n    delta: {\n      left: 0,\n      right: 0,\n      width: 0,\n      top: 0,\n      bottom: 0,\n      height: 0,\n    },\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction move({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n  const resizeOptions = interaction.interactable.options.resize\n  const invert = resizeOptions.invert\n  const invertible = invert === 'reposition' || invert === 'negate'\n\n  const current = interaction.rect\n  const { start: startRect, corrected, delta: deltaRect, previous } = interaction._rects\n\n  extend(previous, corrected)\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    extend(corrected, current)\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      if (corrected.top > corrected.bottom) {\n        const swap = corrected.top\n\n        corrected.top = corrected.bottom\n        corrected.bottom = swap\n      }\n      if (corrected.left > corrected.right) {\n        const swap = corrected.left\n\n        corrected.left = corrected.right\n        corrected.right = swap\n      }\n    }\n  } else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    corrected.top = Math.min(current.top, startRect.bottom)\n    corrected.bottom = Math.max(current.bottom, startRect.top)\n    corrected.left = Math.min(current.left, startRect.right)\n    corrected.right = Math.max(current.right, startRect.left)\n  }\n\n  corrected.width = corrected.right - corrected.left\n  corrected.height = corrected.bottom - corrected.top\n\n  for (const edge in corrected) {\n    deltaRect[edge] = corrected[edge] - previous[edge]\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = corrected\n  resizeEvent.deltaRect = deltaRect\n}\n\nfunction end({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction updateEventAxes({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any, any>\n  interaction: Interaction\n}) {\n  if (interaction.prepared.name !== 'resize' || !interaction.resizeAxes) return\n\n  const options = interaction.interactable.options\n  const resizeEvent = iEvent as ResizeEvent\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = resizeEvent.delta.y\n    } else {\n      resizeEvent.delta.y = resizeEvent.delta.x\n    }\n    resizeEvent.axes = 'xy'\n  } else {\n    resizeEvent.axes = interaction.resizeAxes\n\n    if (interaction.resizeAxes === 'x') {\n      resizeEvent.delta.y = 0\n    } else if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = 0\n    }\n  }\n}\n\nconst resize: Plugin = {\n  id: 'actions/resize',\n  before: ['actions/drag'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.resizeAxes = 'xy'\n    },\n\n    'interactions:action-start': (arg) => {\n      start(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-move': (arg) => {\n      move(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-end': end,\n    'auto-start:check': resizeChecker,\n  },\n\n  defaults: {\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  } as ResizableOptions,\n\n  cursors: null as ReturnType<typeof initCursors>,\n\n  getCursor({ edges, axis, name }: ActionProps) {\n    const cursors = resize.cursors\n    let result: string = null\n\n    if (axis) {\n      result = cursors[name + axis]\n    } else if (edges) {\n      let cursorKey = ''\n\n      for (const edge of ['top', 'bottom', 'left', 'right']) {\n        if (edges[edge]) {\n          cursorKey += edge\n        }\n      }\n\n      result = cursors[cursorKey]\n    }\n\n    return result\n  },\n\n  filterEventType: (type: string) => type.search('resize') === 0,\n\n  defaultMargin: null as number,\n}\n\nexport default resize\n","import type { Scope } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './drag/plugin'\nimport './drop/plugin'\nimport './gesture/plugin'\nimport './resize/plugin'\n\nimport drag from './drag/plugin'\nimport drop from './drop/plugin'\nimport gesture from './gesture/plugin'\nimport resize from './resize/plugin'\n/* eslint-enable import/no-duplicates */\n\nexport default {\n  id: 'actions',\n  install(scope: Scope) {\n    scope.usePlugin(gesture)\n    scope.usePlugin(resize)\n    scope.usePlugin(drag)\n    scope.usePlugin(drop)\n  },\n}\n","let lastTime = 0\nlet request: typeof requestAnimationFrame\nlet cancel: typeof cancelAnimationFrame\n\nfunction init(global: Window | typeof globalThis) {\n  request = global.requestAnimationFrame\n  cancel = global.cancelAnimationFrame\n\n  if (!request) {\n    const vendors = ['ms', 'moz', 'webkit', 'o']\n\n    for (const vendor of vendors) {\n      request = global[`${vendor}RequestAnimationFrame` as 'requestAnimationFrame']\n      cancel =\n        global[`${vendor}CancelAnimationFrame` as 'cancelAnimationFrame'] ||\n        global[`${vendor}CancelRequestAnimationFrame` as 'cancelAnimationFrame']\n    }\n  }\n\n  request = request && request.bind(global)\n  cancel = cancel && cancel.bind(global)\n\n  if (!request) {\n    request = (callback) => {\n      const currTime = Date.now()\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime))\n      const token = global.setTimeout(() => {\n        // eslint-disable-next-line n/no-callback-literal\n        callback(currTime + timeToCall)\n      }, timeToCall)\n\n      lastTime = currTime + timeToCall\n      return token as any\n    }\n\n    cancel = (token) => clearTimeout(token)\n  }\n}\n\nexport default {\n  request: (callback: FrameRequestCallback) => request(callback),\n  cancel: (token: number) => cancel(token),\n  init,\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, PointerType } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport { getStringOptionResult } from '@interactjs/utils/rect'\nimport { getWindow } from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoScroll: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoScroll?: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    autoScroll?: AutoScrollOptions\n  }\n}\n\nexport interface AutoScrollOptions {\n  container?: Window | HTMLElement | string\n  margin?: number\n  distance?: number\n  interval?: number\n  speed?: number\n  enabled?: boolean\n}\n\nfunction install(scope: Scope) {\n  const { defaults, actions } = scope\n\n  scope.autoScroll = autoScroll\n  autoScroll.now = () => scope.now()\n\n  actions.phaselessTypes.autoscroll = true\n  defaults.perAction.autoScroll = autoScroll.defaults\n}\n\nconst autoScroll = {\n  defaults: {\n    enabled: false,\n    margin: 60,\n\n    // the item that is scrolled (Window or HTMLElement)\n    container: null as AutoScrollOptions['container'],\n\n    // the scroll speed in pixels per second\n    speed: 300,\n  } as AutoScrollOptions,\n\n  now: Date.now,\n\n  interaction: null as Interaction<ActionName> | null,\n  i: 0, // the handle returned by window.setInterval\n\n  // Direction each pulse is to scroll in\n  x: 0,\n  y: 0,\n\n  isScrolling: false,\n  prevTime: 0,\n  margin: 0,\n  speed: 0,\n\n  start(interaction: Interaction) {\n    autoScroll.isScrolling = true\n    raf.cancel(autoScroll.i)\n\n    interaction.autoScroll = autoScroll\n    autoScroll.interaction = interaction\n    autoScroll.prevTime = autoScroll.now()\n    autoScroll.i = raf.request(autoScroll.scroll)\n  },\n\n  stop() {\n    autoScroll.isScrolling = false\n    if (autoScroll.interaction) {\n      autoScroll.interaction.autoScroll = null\n    }\n    raf.cancel(autoScroll.i)\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll() {\n    const { interaction } = autoScroll\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n    const now = autoScroll.now()\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000\n    // displacement\n    const s = options.speed * dt\n\n    if (s >= 1) {\n      const scrollBy = {\n        x: autoScroll.x * s,\n        y: autoScroll.y * s,\n      }\n\n      if (scrollBy.x || scrollBy.y) {\n        const prevScroll = getScroll(container)\n\n        if (is.window(container)) {\n          container.scrollBy(scrollBy.x, scrollBy.y)\n        } else if (container) {\n          container.scrollLeft += scrollBy.x\n          container.scrollTop += scrollBy.y\n        }\n\n        const curScroll = getScroll(container)\n        const delta = {\n          x: curScroll.x - prevScroll.x,\n          y: curScroll.y - prevScroll.y,\n        }\n\n        if (delta.x || delta.y) {\n          interactable.fire({\n            type: 'autoscroll',\n            target: element,\n            interactable,\n            delta,\n            interaction,\n            container,\n          })\n        }\n      }\n\n      autoScroll.prevTime = now\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i)\n      autoScroll.i = raf.request(autoScroll.scroll)\n    }\n  },\n  check(interactable: Interactable, actionName: ActionName) {\n    const options = interactable.options\n\n    return options[actionName].autoScroll?.enabled\n  },\n  onInteractionMove<T extends ActionName>({\n    interaction,\n    pointer,\n  }: {\n    interaction: Interaction<T>\n    pointer: PointerType\n  }) {\n    if (\n      !(interaction.interacting() && autoScroll.check(interaction.interactable, interaction.prepared.name))\n    ) {\n      return\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0\n      return\n    }\n\n    let top: boolean\n    let right: boolean\n    let bottom: boolean\n    let left: boolean\n\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n\n    if (is.window(container)) {\n      left = pointer.clientX < autoScroll.margin\n      top = pointer.clientY < autoScroll.margin\n      right = pointer.clientX > container.innerWidth - autoScroll.margin\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin\n    } else {\n      const rect = domUtils.getElementClientRect(container)\n\n      left = pointer.clientX < rect.left + autoScroll.margin\n      top = pointer.clientY < rect.top + autoScroll.margin\n      right = pointer.clientX > rect.right - autoScroll.margin\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin\n    }\n\n    autoScroll.x = right ? 1 : left ? -1 : 0\n    autoScroll.y = bottom ? 1 : top ? -1 : 0\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin\n      autoScroll.speed = options.speed\n\n      autoScroll.start(interaction)\n    }\n  },\n}\n\nexport function getContainer(value: any, interactable: Interactable, element: Element) {\n  return (\n    (is.string(value) ? getStringOptionResult(value, interactable, element) : value) || getWindow(element)\n  )\n}\n\nexport function getScroll(container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollLeft, y: container.scrollTop }\n}\n\nexport function getScrollSize(container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollWidth, y: container.scrollHeight }\n}\n\nexport function getScrollSizeDelta<T extends ActionName>(\n  {\n    interaction,\n    element,\n  }: {\n    interaction: Partial<Interaction<T>>\n    element: Element\n  },\n  func: any,\n) {\n  const scrollOptions = interaction && interaction.interactable.options[interaction.prepared.name].autoScroll\n\n  if (!scrollOptions || !scrollOptions.enabled) {\n    func()\n    return { x: 0, y: 0 }\n  }\n\n  const scrollContainer = getContainer(scrollOptions.container, interaction.interactable, element)\n\n  const prevSize = getScroll(scrollContainer)\n  func()\n  const curSize = getScroll(scrollContainer)\n\n  return {\n    x: curSize.x - prevSize.x,\n    y: curSize.y - prevSize.y,\n  }\n}\n\nconst autoScrollPlugin: Plugin = {\n  id: 'auto-scroll',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoScroll = null\n    },\n\n    'interactions:destroy': ({ interaction }) => {\n      interaction.autoScroll = null\n      autoScroll.stop()\n      if (autoScroll.interaction) {\n        autoScroll.interaction = null\n      }\n    },\n\n    'interactions:stop': autoScroll.stop,\n\n    'interactions:action-move': (arg: any) => autoScroll.onInteractionMove(arg),\n  },\n}\n\nexport default autoScrollPlugin\n","import type { ActionName, ActionProps } from '@interactjs/core/types'\n\nimport { window } from './window'\n\nexport function warnOnce<T>(this: T, method: (...args: any[]) => any, message: string) {\n  let warned = false\n\n  return function (this: T) {\n    if (!warned) {\n      ;(window as any).console.warn(message)\n      warned = true\n    }\n\n    return method.apply(this, arguments)\n  }\n}\n\nexport function copyAction<T extends ActionName>(dest: ActionProps<any>, src: ActionProps<T>) {\n  dest.name = src.name\n  dest.axis = src.axis\n  dest.edges = src.edges\n\n  return dest\n}\n\nexport const sign = (n: number) => (n >= 0 ? 1 : -1)\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { ActionProps, PointerType, PointerEventType, Element } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\nimport { warnOnce } from '@interactjs/utils/misc'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    getAction: (\n      this: Interactable,\n      pointer: PointerType,\n      event: PointerEventType,\n      interaction: Interaction,\n      element: Element,\n    ) => ActionProps | null\n    styleCursor(newValue: boolean): this\n    styleCursor(): boolean\n    /**\n     * Returns or sets whether the the cursor should be changed depending on the\n     * action that would be performed if the mouse were pressed and dragged.\n     *\n     * @param {boolean} [newValue]\n     * @return {boolean | Interactable} The current setting or this Interactable\n     */\n    styleCursor(newValue?: boolean): boolean | this\n    actionChecker(checker: Function): Interactable\n    actionChecker(): Function\n    /**\n     * ```js\n     * interact('.resize-drag')\n     *   .resizable(true)\n     *   .draggable(true)\n     *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n     *\n     *     if (interact.matchesSelector(event.target, '.drag-handle')) {\n     *       // force drag with handle target\n     *       action.name = drag\n     *     }\n     *     else {\n     *       // resize from the top and right edges\n     *       action.name  = 'resize'\n     *       action.edges = { top: true, right: true }\n     *     }\n     *\n     *     return action\n     * })\n     * ```\n     *\n     * Returns or sets the function used to check action to be performed on\n     * pointerDown\n     *\n     * @param checker - A function which takes a pointer event,\n     * defaultAction string, interactable, element and interaction as parameters\n     * and returns an object with name property 'drag' 'resize' or 'gesture' and\n     * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n     * props.\n     * @returns The checker function or this Interactable\n     */\n    actionChecker(checker?: Function): Interactable | Function\n    /** @returns This interactable */\n    ignoreFrom(newValue: string | Element | null): Interactable\n    /** @returns The current ignoreFrom value */\n    ignoreFrom(): string | Element | null\n    /**\n     * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n     * of it's parents match the given CSS selector or Element, no\n     * drag/resize/gesture is started.\n     *\n     * @deprecated\n     * Don't use this method. Instead set the `ignoreFrom` option for each action\n     * or for `pointerEvents`\n     *\n     * ```js\n     * interact(targett)\n     *   .draggable({\n     *     ignoreFrom: 'input, textarea, a[href]'',\n     *   })\n     *   .pointerEvents({\n     *     ignoreFrom: '[no-pointer]',\n     *   })\n     * ```\n     * Interactable\n     */\n    ignoreFrom(\n      /** a CSS selector string, an Element or `null` to not ignore any elements */\n      newValue?: string | Element | null,\n    ): Interactable | string | Element | null\n    allowFrom(): boolean\n    /**\n     *\n     * A drag/resize/gesture is started only If the target of the `mousedown`,\n     * `pointerdown` or `touchstart` event or any of it's parents match the given\n     * CSS selector or Element.\n     *\n     * @deprecated\n     * Don't use this method. Instead set the `allowFrom` option for each action\n     * or for `pointerEvents`\n     *\n     * ```js\n     * interact(targett)\n     *   .resizable({\n     *     allowFrom: '.resize-handle',\n     *   .pointerEvents({\n     *     allowFrom: '.handle',,\n     *   })\n     * ```\n     *\n     * @param {string | Element | null} [newValue]\n     * @return {string | Element | object} The current allowFrom value or this\n     * Interactable\n     */\n    allowFrom(\n      /** A CSS selector string, an Element or `null` to allow from any element */\n      newValue: string | Element | null,\n    ): Interactable\n  }\n}\n\nfunction install(scope: Scope) {\n  const {\n    Interactable, // tslint:disable-line no-shadowed-variable\n  } = scope\n\n  Interactable.prototype.getAction = function getAction(\n    this: Interactable,\n    pointer: PointerType,\n    event: PointerEventType,\n    interaction: Interaction,\n    element: Element,\n  ): ActionProps {\n    const action = defaultActionChecker(this, event, interaction, element, scope)\n\n    if (this.options.actionChecker) {\n      return this.options.actionChecker(pointer, event, action, this, element, interaction)\n    }\n\n    return action\n  }\n\n  Interactable.prototype.ignoreFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('ignoreFrom', newValue)\n  }, 'Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).')\n\n  Interactable.prototype.allowFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('allowFrom', newValue)\n  }, 'Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).')\n\n  Interactable.prototype.actionChecker = actionChecker\n\n  Interactable.prototype.styleCursor = styleCursor\n}\n\nfunction defaultActionChecker(\n  interactable: Interactable,\n  event: PointerEventType,\n  interaction: Interaction,\n  element: Element,\n  scope: Scope,\n) {\n  const rect = interactable.getRect(element)\n  const buttons =\n    (event as MouseEvent).buttons ||\n    {\n      0: 1,\n      1: 4,\n      3: 8,\n      4: 16,\n    }[(event as MouseEvent).button as 0 | 1 | 3 | 4]\n  const arg = {\n    action: null,\n    interactable,\n    interaction,\n    element,\n    rect,\n    buttons,\n  }\n\n  scope.fire('auto-start:check', arg)\n\n  return arg.action\n}\n\nfunction styleCursor(this: Interactable, newValue?: boolean) {\n  if (is.bool(newValue)) {\n    this.options.styleCursor = newValue\n\n    return this\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor\n\n    return this\n  }\n\n  return this.options.styleCursor\n}\n\nfunction actionChecker(this: Interactable, checker?: any) {\n  if (is.func(checker)) {\n    this.options.actionChecker = checker\n\n    return this\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker\n\n    return this\n  }\n\n  return this.options.actionChecker\n}\n\nexport default {\n  id: 'auto-start/interactableMethods',\n  install,\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type {\n  CursorChecker,\n  PointerType,\n  PointerEventType,\n  Element,\n  ActionName,\n  ActionProps,\n} from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport { copyAction } from '@interactjs/utils/misc'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './InteractableMethods'\nimport InteractableMethods from './InteractableMethods'\n/* eslint-enable import/no-duplicates */\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    /**\n     * Returns or sets the maximum number of concurrent interactions allowed.  By\n     * default only 1 interaction is allowed at a time (for backwards\n     * compatibility). To allow multiple interactions on the same Interactables and\n     * elements, you need to enable it in the draggable, resizable and gesturable\n     * `'max'` and `'maxPerElement'` options.\n     *\n     * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n     */\n    maxInteractions: (newValue: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoStart: AutoStart\n  }\n\n  interface SignalArgs {\n    'autoStart:before-start': Omit<SignalArgs['interactions:move'], 'interaction'> & {\n      interaction: Interaction<ActionName>\n    }\n    'autoStart:prepared': { interaction: Interaction }\n    'auto-start:check': CheckSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface BaseDefaults {\n    actionChecker?: any\n    cursorChecker?: any\n    styleCursor?: any\n  }\n\n  interface PerActionDefaults {\n    manualStart?: boolean\n    max?: number\n    maxPerElement?: number\n    allowFrom?: string | Element\n    ignoreFrom?: string | Element\n    cursorChecker?: CursorChecker\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    // TODO: docst\n    mouseButtons?: 0 | 1 | 2 | 4 | 8 | 16\n  }\n}\n\ninterface CheckSignalArg {\n  interactable: Interactable\n  interaction: Interaction\n  element: Element\n  action: ActionProps<ActionName>\n  buttons: number\n}\n\nexport interface AutoStart {\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: number\n  withinInteractionLimit: typeof withinInteractionLimit\n  cursorElement: Element\n}\n\nfunction install(scope: Scope) {\n  const { interactStatic: interact, defaults } = scope\n\n  scope.usePlugin(InteractableMethods)\n\n  defaults.base.actionChecker = null\n  defaults.base.styleCursor = true\n\n  extend(defaults.perAction, {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n    allowFrom: null,\n    ignoreFrom: null,\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n  })\n\n  interact.maxInteractions = (newValue: number) => maxInteractions(newValue, scope)\n\n  scope.autoStart = {\n    // Allow this many interactions to happen simultaneously\n    maxInteractions: Infinity,\n    withinInteractionLimit,\n    cursorElement: null,\n  }\n}\n\nfunction prepareOnDown(\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  if (interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction prepareOnMove(\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:move'],\n  scope: Scope,\n) {\n  if (interaction.pointerType !== 'mouse' || interaction.pointerIsDown || interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget as Element, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction startOnMove(arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction } = arg\n\n  if (\n    !interaction.pointerIsDown ||\n    interaction.interacting() ||\n    !interaction.pointerWasMoved ||\n    !interaction.prepared.name\n  ) {\n    return\n  }\n\n  scope.fire('autoStart:before-start', arg)\n\n  const { interactable } = interaction\n  const actionName = (interaction as Interaction<ActionName>).prepared.name\n\n  if (actionName && interactable) {\n    // check manualStart and interaction limit\n    if (\n      interactable.options[actionName].manualStart ||\n      !withinInteractionLimit(interactable, interaction.element, interaction.prepared, scope)\n    ) {\n      interaction.stop()\n    } else {\n      interaction.start(interaction.prepared, interactable, interaction.element)\n      setInteractionCursor(interaction, scope)\n    }\n  }\n}\n\nfunction clearCursorOnStop({ interaction }: { interaction: Interaction }, scope: Scope) {\n  const { interactable } = interaction\n\n  if (interactable && interactable.options.styleCursor) {\n    setCursor(interaction.element, '', scope)\n  }\n}\n\n// Check if the current interactable supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction<T extends ActionName>(\n  action: ActionProps<T>,\n  interactable: Interactable,\n  element: Element,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  if (\n    interactable.testIgnoreAllow(interactable.options[action.name], element, eventTarget) &&\n    interactable.options[action.name].enabled &&\n    withinInteractionLimit(interactable, element, action, scope)\n  ) {\n    return action\n  }\n\n  return null\n}\n\nfunction validateMatches(\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  matches: Interactable[],\n  matchElements: Element[],\n  eventTarget: Node,\n  scope: Scope,\n) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i]\n    const matchElement = matchElements[i]\n    const matchAction = match.getAction(pointer, event, interaction, matchElement)\n\n    if (!matchAction) {\n      continue\n    }\n\n    const action = validateAction<ActionName>(matchAction, match, matchElement, eventTarget, scope)\n\n    if (action) {\n      return {\n        action,\n        interactable: match,\n        element: matchElement,\n      }\n    }\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction getActionInfo(\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  let matches: Interactable[] = []\n  let matchElements: Element[] = []\n\n  let element = eventTarget as Element\n\n  function pushMatches(interactable: Interactable) {\n    matches.push(interactable)\n    matchElements.push(element)\n  }\n\n  while (is.element(element)) {\n    matches = []\n    matchElements = []\n\n    scope.interactables.forEachMatch(element, pushMatches)\n\n    const actionInfo = validateMatches(\n      interaction,\n      pointer,\n      event,\n      matches,\n      matchElements,\n      eventTarget,\n      scope,\n    )\n\n    if (actionInfo.action && !actionInfo.interactable.options[actionInfo.action.name].manualStart) {\n      return actionInfo\n    }\n\n    element = domUtils.parentNode(element) as Element\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction prepare(\n  interaction: Interaction,\n  {\n    action,\n    interactable,\n    element,\n  }: {\n    action: ActionProps<any>\n    interactable: Interactable\n    element: Element\n  },\n  scope: Scope,\n) {\n  action = action || { name: null }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  copyAction(interaction.prepared, action)\n\n  interaction.rect = interactable && action.name ? interactable.getRect(element) : null\n\n  setInteractionCursor(interaction, scope)\n\n  scope.fire('autoStart:prepared', { interaction })\n}\n\nfunction withinInteractionLimit<T extends ActionName>(\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  scope: Scope,\n) {\n  const options = interactable.options\n  const maxActions = options[action.name].max\n  const maxPerElement = options[action.name].maxPerElement\n  const autoStartMax = scope.autoStart.maxInteractions\n  let activeInteractions = 0\n  let interactableCount = 0\n  let elementCount = 0\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStartMax)) {\n    return false\n  }\n\n  for (const interaction of scope.interactions.list) {\n    const otherAction = interaction.prepared.name\n\n    if (!interaction.interacting()) {\n      continue\n    }\n\n    activeInteractions++\n\n    if (activeInteractions >= autoStartMax) {\n      return false\n    }\n\n    if (interaction.interactable !== interactable) {\n      continue\n    }\n\n    interactableCount += otherAction === action.name ? 1 : 0\n\n    if (interactableCount >= maxActions) {\n      return false\n    }\n\n    if (interaction.element === element) {\n      elementCount++\n\n      if (otherAction === action.name && elementCount >= maxPerElement) {\n        return false\n      }\n    }\n  }\n\n  return autoStartMax > 0\n}\n\nfunction maxInteractions(newValue: any, scope: Scope) {\n  if (is.number(newValue)) {\n    scope.autoStart.maxInteractions = newValue\n\n    return this\n  }\n\n  return scope.autoStart.maxInteractions\n}\n\nfunction setCursor(element: Element, cursor: string, scope: Scope) {\n  const { cursorElement: prevCursorElement } = scope.autoStart\n\n  if (prevCursorElement && prevCursorElement !== element) {\n    prevCursorElement.style.cursor = ''\n  }\n\n  element.ownerDocument.documentElement.style.cursor = cursor\n  element.style.cursor = cursor\n  scope.autoStart.cursorElement = cursor ? element : null\n}\n\nfunction setInteractionCursor<T extends ActionName>(interaction: Interaction<T>, scope: Scope) {\n  const { interactable, element, prepared } = interaction\n\n  if (!(interaction.pointerType === 'mouse' && interactable && interactable.options.styleCursor)) {\n    // clear previous target element cursor\n    if (scope.autoStart.cursorElement) {\n      setCursor(scope.autoStart.cursorElement, '', scope)\n    }\n\n    return\n  }\n\n  let cursor = ''\n\n  if (prepared.name) {\n    const cursorChecker = interactable.options[prepared.name].cursorChecker\n\n    if (is.func(cursorChecker)) {\n      cursor = cursorChecker(prepared, interactable, element, interaction._interacting)\n    } else {\n      cursor = scope.actions.map[prepared.name].getCursor(prepared)\n    }\n  }\n\n  setCursor(interaction.element, cursor || '', scope)\n}\n\nconst autoStart: Plugin = {\n  id: 'auto-start/base',\n  before: ['actions'],\n  install,\n  listeners: {\n    'interactions:down': prepareOnDown,\n    'interactions:move': (arg, scope) => {\n      prepareOnMove(arg, scope)\n      startOnMove(arg, scope)\n    },\n    'interactions:stop': clearCursorOnStop,\n  },\n  maxInteractions,\n  withinInteractionLimit,\n  validateAction,\n}\n\nexport default autoStart\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { SignalArgs, Scope } from '@interactjs/core/scope'\nimport type { ActionName, Element } from '@interactjs/core/types'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\n\nimport autoStart from './base'\n\nfunction beforeStart({ interaction, eventTarget, dx, dy }: SignalArgs['interactions:move'], scope: Scope) {\n  if (interaction.prepared.name !== 'drag') return\n\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx)\n  const absY = Math.abs(dy)\n  const targetOptions = interaction.interactable.options.drag\n  const startAxis = targetOptions.startAxis\n  const currentAxis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy'\n\n  interaction.prepared.axis =\n    targetOptions.lockAxis === 'start'\n      ? (currentAxis[0] as 'x' | 'y') // always lock to one axis even if currentAxis === 'xy'\n      : targetOptions.lockAxis\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    ;(interaction as Interaction<ActionName>).prepared.name = null\n\n    // then try to get a drag from another ineractable\n    let element = eventTarget as Element\n\n    const getDraggable = function (interactable: Interactable): Interactable | void {\n      if (interactable === interaction.interactable) return\n\n      const options = interaction.interactable.options.drag\n\n      if (!options.manualStart && interactable.testIgnoreAllow(options, element, eventTarget)) {\n        const action = interactable.getAction(\n          interaction.downPointer,\n          interaction.downEvent,\n          interaction,\n          element,\n        )\n\n        if (\n          action &&\n          action.name === 'drag' &&\n          checkStartAxis(currentAxis, interactable) &&\n          autoStart.validateAction(action, interactable, element, eventTarget, scope)\n        ) {\n          return interactable\n        }\n      }\n    }\n\n    // check all interactables\n    while (is.element(element)) {\n      const interactable = scope.interactables.forEachMatch(element, getDraggable)\n\n      if (interactable) {\n        ;(interaction as Interaction<ActionName>).prepared.name = 'drag'\n        interaction.interactable = interactable\n        interaction.element = element\n        break\n      }\n\n      element = parentNode(element) as Element\n    }\n  }\n}\n\nfunction checkStartAxis(startAxis: string, interactable: Interactable) {\n  if (!interactable) {\n    return false\n  }\n\n  const thisAxis = interactable.options.drag.startAxis\n\n  return startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis\n}\n\nexport default {\n  id: 'auto-start/dragAxis',\n  listeners: { 'autoStart:before-start': beforeStart },\n}\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport basePlugin from './base'\n/* eslint-enable */\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    hold?: number\n    delay?: number\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoStartHoldTimer?: any\n  }\n}\n\nfunction install(scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(basePlugin)\n\n  defaults.perAction.hold = 0\n  defaults.perAction.delay = 0\n}\n\nfunction getHoldDuration(interaction: Interaction) {\n  const actionName = interaction.prepared && interaction.prepared.name\n\n  if (!actionName) {\n    return null\n  }\n\n  const options = interaction.interactable.options\n\n  return options[actionName].hold || options[actionName].delay\n}\n\nconst hold: Plugin = {\n  id: 'auto-start/hold',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoStartHoldTimer = null\n    },\n\n    'autoStart:prepared': ({ interaction }) => {\n      const hold = getHoldDuration(interaction)\n\n      if (hold > 0) {\n        interaction.autoStartHoldTimer = setTimeout(() => {\n          interaction.start(interaction.prepared, interaction.interactable, interaction.element)\n        }, hold)\n      }\n    },\n\n    'interactions:move': ({ interaction, duplicate }) => {\n      if (interaction.autoStartHoldTimer && interaction.pointerWasMoved && !duplicate) {\n        clearTimeout(interaction.autoStartHoldTimer)\n        interaction.autoStartHoldTimer = null\n      }\n    },\n\n    // prevent regular down->move autoStart\n    'autoStart:before-start': ({ interaction }) => {\n      const holdDuration = getHoldDuration(interaction)\n\n      if (holdDuration > 0) {\n        interaction.prepared.name = null\n      }\n    },\n  },\n  getHoldDuration,\n}\nexport default hold\n","import type { Scope } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport './dragAxis'\nimport './hold'\n\nimport autoStart from './base'\nimport dragAxis from './dragAxis'\nimport hold from './hold'\n/* eslint-enable import/no-duplicates */\n\nexport default {\n  id: 'auto-start',\n  install(scope: Scope) {\n    scope.usePlugin(autoStart)\n    scope.usePlugin(hold)\n    scope.usePlugin(dragAxis)\n  },\n}\n","import { matchesSelector, nodeContains } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport { getWindow } from '@interactjs/utils/window'\n\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerEventType } from '@interactjs/core/types'\n\ntype PreventDefaultValue = 'always' | 'never' | 'auto'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    preventDefault(newValue: PreventDefaultValue): this\n    preventDefault(): PreventDefaultValue\n    /**\n     * Returns or sets whether to prevent the browser's default behaviour in\n     * response to pointer events. Can be set to:\n     *  - `'always'` to always prevent\n     *  - `'never'` to never prevent\n     *  - `'auto'` to let interact.js try to determine what would be best\n     *\n     * @param newValue - `'always'`, `'never'` or `'auto'`\n     * @returns The current setting or this Interactable\n     */\n    preventDefault(newValue?: PreventDefaultValue): PreventDefaultValue | this\n    checkAndPreventDefault(event: Event): void\n  }\n}\n\nconst preventDefault = function preventDefault(this: Interactable, newValue?: PreventDefaultValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue\n    return this\n  }\n\n  if (is.bool(newValue)) {\n    this.options.preventDefault = newValue ? 'always' : 'never'\n    return this\n  }\n\n  return this.options.preventDefault\n} as Interactable['preventDefault']\n\nfunction checkAndPreventDefault(interactable: Interactable, scope: Scope, event: Event) {\n  const setting = interactable.options.preventDefault\n\n  if (setting === 'never') return\n\n  if (setting === 'always') {\n    event.preventDefault()\n    return\n  }\n\n  // setting === 'auto'\n\n  // if the browser supports passive event listeners and isn't running on iOS,\n  // don't preventDefault of touch{start,move} events. CSS touch-action and\n  // user-select should be used instead of calling event.preventDefault().\n  if (scope.events.supportsPassive && /^touch(start|move)$/.test(event.type)) {\n    const doc = getWindow(event.target).document\n    const docOptions = scope.getDocOptions(doc)\n\n    if (!(docOptions && docOptions.events) || docOptions.events.passive !== false) {\n      return\n    }\n  }\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return\n  }\n\n  // don't preventDefault on editable elements\n  if (\n    is.element(event.target) &&\n    matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')\n  ) {\n    return\n  }\n\n  event.preventDefault()\n}\n\nfunction onInteractionEvent({ interaction, event }: { interaction: Interaction; event: PointerEventType }) {\n  if (interaction.interactable) {\n    interaction.interactable.checkAndPreventDefault(event as Event)\n  }\n}\n\nexport function install(scope: Scope) {\n  const { Interactable } = scope\n\n  Interactable.prototype.preventDefault = preventDefault\n\n  Interactable.prototype.checkAndPreventDefault = function (event) {\n    return checkAndPreventDefault(this, scope, event)\n  }\n\n  // prevent native HTML5 drag on interact.js target elements\n  scope.interactions.docEvents.push({\n    type: 'dragstart',\n    listener(event) {\n      for (const interaction of scope.interactions.list) {\n        if (\n          interaction.element &&\n          (interaction.element === event.target || nodeContains(interaction.element, event.target))\n        ) {\n          interaction.interactable.checkAndPreventDefault(event)\n          return\n        }\n      }\n    },\n  })\n}\n\nexport default {\n  id: 'core/interactablePreventDefault',\n  install,\n  listeners: ['down', 'move', 'up', 'cancel'].reduce((acc, eventType) => {\n    acc[`interactions:${eventType}`] = onInteractionEvent\n    return acc\n  }, {} as any),\n}\n","import type { Actions } from '@interactjs/core/types'\n\nexport default function isNonNativeEvent(type: string, actions: Actions) {\n  if (actions.phaselessTypes[type]) {\n    return true\n  }\n\n  for (const name in actions.map) {\n    if (type.indexOf(name) === 0 && type.substr(name.length) in actions.phases) {\n      return true\n    }\n  }\n\n  return false\n}\n","import * as arr from './arr'\nimport is from './is'\n\n// tslint:disable-next-line ban-types\nexport default function clone<T extends Object>(source: T): Partial<T> {\n  const dest = {} as Partial<T>\n\n  for (const prop in source) {\n    const value = source[prop]\n\n    if (is.plainObject(value)) {\n      dest[prop] = clone(value) as any\n    } else if (is.array(value)) {\n      dest[prop] = arr.from(value) as typeof value\n    } else {\n      dest[prop] = value\n    }\n  }\n\n  return dest\n}\n","import type { EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoAnyPhaseArg } from '@interactjs/core/Interaction'\nimport type { EdgeOptions, FullRect, Point, Rect } from '@interactjs/core/types'\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { Modifier, ModifierArg, ModifierState } from './types'\n\nexport interface ModificationResult {\n  delta: Point\n  rectDelta: Rect\n  coords: Point\n  rect: FullRect\n  eventProps: any[]\n  changed: boolean\n}\n\ninterface MethodArg {\n  phase: EventPhase\n  pageCoords: Point\n  rect: FullRect\n  coords: Point\n  preEnd?: boolean\n  skipModifiers?: number\n}\n\nexport class Modification {\n  states: ModifierState[] = []\n  startOffset: Rect = { left: 0, right: 0, top: 0, bottom: 0 }\n  startDelta!: Point\n  result!: ModificationResult\n  endResult!: Point\n  startEdges!: EdgeOptions\n  edges: EdgeOptions\n  readonly interaction: Readonly<Interaction>\n\n  constructor(interaction: Interaction) {\n    this.interaction = interaction\n    this.result = createResult()\n    this.edges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n  }\n\n  start({ phase }: { phase: EventPhase }, pageCoords: Point) {\n    const { interaction } = this\n    const modifierList = getModifierList(interaction)\n    this.prepareStates(modifierList)\n\n    this.startEdges = extend({}, interaction.edges)\n    this.edges = extend({}, this.startEdges)\n    this.startOffset = getRectOffset(interaction.rect, pageCoords)\n    this.startDelta = { x: 0, y: 0 }\n\n    const arg = this.fillArg({\n      phase,\n      pageCoords,\n      preEnd: false,\n    })\n\n    this.result = createResult()\n    this.startAll(arg)\n\n    const result = (this.result = this.setAll(arg))\n\n    return result\n  }\n\n  fillArg(arg: Partial<ModifierArg>) {\n    const { interaction } = this\n\n    arg.interaction = interaction\n    arg.interactable = interaction.interactable\n    arg.element = interaction.element\n    arg.rect ||= interaction.rect\n    arg.edges ||= this.startEdges\n    arg.startOffset = this.startOffset\n\n    return arg as ModifierArg\n  }\n\n  startAll(arg: MethodArg & Partial<ModifierArg>) {\n    for (const state of this.states) {\n      if (state.methods.start) {\n        arg.state = state\n        state.methods.start(arg as ModifierArg)\n      }\n    }\n  }\n\n  setAll(arg: MethodArg & Partial<ModifierArg>): ModificationResult {\n    const { phase, preEnd, skipModifiers, rect: unmodifiedRect, edges: unmodifiedEdges } = arg\n\n    arg.coords = extend({}, arg.pageCoords)\n    arg.rect = extend({}, unmodifiedRect)\n    arg.edges = extend({}, unmodifiedEdges)\n\n    const states = skipModifiers ? this.states.slice(skipModifiers) : this.states\n\n    const newResult = createResult(arg.coords, arg.rect)\n\n    for (const state of states) {\n      const { options } = state\n      const lastModifierCoords = extend({}, arg.coords)\n      let returnValue = null\n\n      if (state.methods?.set && this.shouldDo(options, preEnd, phase)) {\n        arg.state = state\n        returnValue = state.methods.set(arg as ModifierArg<never>)\n\n        rectUtils.addEdges(arg.edges, arg.rect, {\n          x: arg.coords.x - lastModifierCoords.x,\n          y: arg.coords.y - lastModifierCoords.y,\n        })\n      }\n\n      newResult.eventProps.push(returnValue)\n    }\n\n    extend(this.edges, arg.edges)\n\n    newResult.delta.x = arg.coords.x - arg.pageCoords.x\n    newResult.delta.y = arg.coords.y - arg.pageCoords.y\n\n    newResult.rectDelta.left = arg.rect.left - unmodifiedRect.left\n    newResult.rectDelta.right = arg.rect.right - unmodifiedRect.right\n    newResult.rectDelta.top = arg.rect.top - unmodifiedRect.top\n    newResult.rectDelta.bottom = arg.rect.bottom - unmodifiedRect.bottom\n\n    const prevCoords = this.result.coords\n    const prevRect = this.result.rect\n\n    if (prevCoords && prevRect) {\n      const rectChanged =\n        newResult.rect.left !== prevRect.left ||\n        newResult.rect.right !== prevRect.right ||\n        newResult.rect.top !== prevRect.top ||\n        newResult.rect.bottom !== prevRect.bottom\n\n      newResult.changed =\n        rectChanged || prevCoords.x !== newResult.coords.x || prevCoords.y !== newResult.coords.y\n    }\n\n    return newResult\n  }\n\n  applyToInteraction(arg: { phase: EventPhase; rect?: Rect }) {\n    const { interaction } = this\n    const { phase } = arg\n    const curCoords = interaction.coords.cur\n    const startCoords = interaction.coords.start\n    const { result, startDelta } = this\n    const curDelta = result.delta\n\n    if (phase === 'start') {\n      extend(this.startDelta, result.delta)\n    }\n\n    for (const [coordsSet, delta] of [\n      [startCoords, startDelta],\n      [curCoords, curDelta],\n    ] as const) {\n      coordsSet.page.x += delta.x\n      coordsSet.page.y += delta.y\n      coordsSet.client.x += delta.x\n      coordsSet.client.y += delta.y\n    }\n\n    const { rectDelta } = this.result\n    const rect = arg.rect || interaction.rect\n\n    rect.left += rectDelta.left\n    rect.right += rectDelta.right\n    rect.top += rectDelta.top\n    rect.bottom += rectDelta.bottom\n\n    rect.width = rect.right - rect.left\n    rect.height = rect.bottom - rect.top\n  }\n\n  setAndApply(\n    arg: Partial<DoAnyPhaseArg> & {\n      phase: EventPhase\n      preEnd?: boolean\n      skipModifiers?: number\n      modifiedCoords?: Point\n    },\n  ): void | false {\n    const { interaction } = this\n    const { phase, preEnd, skipModifiers } = arg\n\n    const result = this.setAll(\n      this.fillArg({\n        preEnd,\n        phase,\n        pageCoords: arg.modifiedCoords || interaction.coords.cur.page,\n      }),\n    )\n\n    this.result = result\n\n    // don't fire an action move if a modifier would keep the event in the same\n    // cordinates as before\n    if (\n      !result.changed &&\n      (!skipModifiers || skipModifiers < this.states.length) &&\n      interaction.interacting()\n    ) {\n      return false\n    }\n\n    if (arg.modifiedCoords) {\n      const { page } = interaction.coords.cur\n      const adjustment = {\n        x: arg.modifiedCoords.x - page.x,\n        y: arg.modifiedCoords.y - page.y,\n      }\n\n      result.coords.x += adjustment.x\n      result.coords.y += adjustment.y\n      result.delta.x += adjustment.x\n      result.delta.y += adjustment.y\n    }\n\n    this.applyToInteraction(arg)\n  }\n\n  beforeEnd(arg: Omit<DoAnyPhaseArg, 'iEvent'> & { state?: ModifierState }): void | false {\n    const { interaction, event } = arg\n    const states = this.states\n\n    if (!states || !states.length) {\n      return\n    }\n\n    let doPreend = false\n\n    for (const state of states) {\n      arg.state = state\n      const { options, methods } = state\n\n      const endPosition = methods.beforeEnd && methods.beforeEnd(arg as unknown as ModifierArg)\n\n      if (endPosition) {\n        this.endResult = endPosition\n        return false\n      }\n\n      doPreend = doPreend || (!doPreend && this.shouldDo(options, true, arg.phase, true))\n    }\n\n    if (doPreend) {\n      // trigger a final modified move before ending\n      interaction.move({ event, preEnd: true })\n    }\n  }\n\n  stop(arg: { interaction: Interaction }) {\n    const { interaction } = arg\n\n    if (!this.states || !this.states.length) {\n      return\n    }\n\n    const modifierArg: Partial<ModifierArg> = extend(\n      {\n        states: this.states,\n        interactable: interaction.interactable,\n        element: interaction.element,\n        rect: null,\n      },\n      arg,\n    )\n\n    this.fillArg(modifierArg)\n\n    for (const state of this.states) {\n      modifierArg.state = state\n\n      if (state.methods.stop) {\n        state.methods.stop(modifierArg as ModifierArg)\n      }\n    }\n\n    this.states = null\n    this.endResult = null\n  }\n\n  prepareStates(modifierList: Modifier[]) {\n    this.states = []\n\n    for (let index = 0; index < modifierList.length; index++) {\n      const { options, methods, name } = modifierList[index]\n\n      this.states.push({\n        options,\n        methods,\n        index,\n        name,\n      })\n    }\n\n    return this.states\n  }\n\n  restoreInteractionCoords({ interaction: { coords, rect, modification } }: { interaction: Interaction }) {\n    if (!modification.result) return\n\n    const { startDelta } = modification\n    const { delta: curDelta, rectDelta } = modification.result\n\n    const coordsAndDeltas = [\n      [coords.start, startDelta],\n      [coords.cur, curDelta],\n    ]\n\n    for (const [coordsSet, delta] of coordsAndDeltas as any) {\n      coordsSet.page.x -= delta.x\n      coordsSet.page.y -= delta.y\n      coordsSet.client.x -= delta.x\n      coordsSet.client.y -= delta.y\n    }\n\n    rect.left -= rectDelta.left\n    rect.right -= rectDelta.right\n    rect.top -= rectDelta.top\n    rect.bottom -= rectDelta.bottom\n  }\n\n  shouldDo(options, preEnd?: boolean, phase?: string, requireEndOnly?: boolean) {\n    if (\n      // ignore disabled modifiers\n      !options ||\n      options.enabled === false ||\n      // check if we require endOnly option to fire move before end\n      (requireEndOnly && !options.endOnly) ||\n      // don't apply endOnly modifiers when not ending\n      (options.endOnly && !preEnd) ||\n      // check if modifier should run be applied on start\n      (phase === 'start' && !options.setStart)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  copyFrom(other: Modification) {\n    this.startOffset = other.startOffset\n    this.startDelta = other.startDelta\n    this.startEdges = other.startEdges\n    this.edges = other.edges\n    this.states = other.states.map((s) => clone(s) as ModifierState)\n    this.result = createResult(extend({}, other.result.coords), extend({}, other.result.rect))\n  }\n\n  destroy() {\n    for (const prop in this) {\n      this[prop] = null\n    }\n  }\n}\n\nfunction createResult(coords?: Point, rect?: FullRect): ModificationResult {\n  return {\n    rect,\n    coords,\n    delta: { x: 0, y: 0 },\n    rectDelta: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n    },\n    eventProps: [],\n    changed: true,\n  }\n}\n\nfunction getModifierList(interaction) {\n  const actionOptions = interaction.interactable.options[interaction.prepared.name]\n  const actionModifiers = actionOptions.modifiers\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map((type) => {\n      const options = actionOptions[type]\n\n      return (\n        options &&\n        options.enabled && {\n          options,\n          methods: options._methods,\n        }\n      )\n    })\n    .filter((m) => !!m)\n}\n\nexport function getRectOffset(rect, coords) {\n  return rect\n    ? {\n        left: coords.x - rect.left,\n        top: coords.y - rect.top,\n        right: rect.right - coords.x,\n        bottom: rect.bottom - coords.y,\n      }\n    : {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n      }\n}\n","import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\n\nimport { Modification } from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    modification?: Modification\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    modifiers?: Array<{\n      name: string\n      [key: string]: any\n    }>\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    modifiers?: Modifier[]\n  }\n}\n\nexport function makeModifier<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Name extends string,\n  Result,\n>(module: ModifierModule<Defaults, State, Result>, name?: Name) {\n  const { defaults } = module\n  const methods = {\n    start: module.start,\n    set: module.set,\n    beforeEnd: module.beforeEnd,\n    stop: module.stop,\n  }\n\n  const modifier = (_options?: Partial<Defaults>) => {\n    const options = (_options || {}) as Defaults\n\n    options.enabled = options.enabled !== false\n\n    // add missing defaults to options\n    for (const prop in defaults) {\n      if (!(prop in options)) {\n        ;(options as any)[prop] = defaults[prop]\n      }\n    }\n\n    const m: Modifier<Defaults, State, Name, Result> = {\n      options,\n      methods,\n      name,\n      enable: () => {\n        options.enabled = true\n        return m\n      },\n      disable: () => {\n        options.enabled = false\n        return m\n      },\n    }\n\n    return m\n  }\n\n  if (name && typeof name === 'string') {\n    // for backwrads compatibility\n    modifier._defaults = defaults\n    modifier._methods = methods\n  }\n\n  return modifier\n}\n\nexport function addEventModifiers({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any>\n  interaction: Interaction<any>\n}) {\n  const result = interaction.modification!.result\n\n  if (result) {\n    iEvent.modifiers = result.eventProps\n  }\n}\n\nconst modifiersBase: Plugin = {\n  id: 'modifiers/base',\n  before: ['actions'],\n  install: (scope) => {\n    scope.defaults.perAction.modifiers = []\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.modification = new Modification(interaction)\n    },\n\n    'interactions:before-action-start': (arg) => {\n      const { interaction } = arg\n      const modification = arg.interaction.modification!\n\n      modification.start(arg, interaction.coords.start.page)\n      interaction.edges = modification.edges\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-move': (arg) => {\n      const { interaction } = arg\n      const { modification } = interaction\n      const ret = modification.setAndApply(arg)\n      interaction.edges = modification.edges\n\n      return ret\n    },\n\n    'interactions:before-action-end': (arg) => {\n      const { interaction } = arg\n      const { modification } = interaction\n      const ret = modification.beforeEnd(arg)\n      interaction.edges = modification.startEdges\n\n      return ret\n    },\n\n    'interactions:action-start': addEventModifiers,\n    'interactions:action-move': addEventModifiers,\n    'interactions:action-end': addEventModifiers,\n\n    'interactions:after-action-start': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-move': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n\n    'interactions:stop': (arg) => arg.interaction.modification.stop(arg),\n  },\n}\n\nexport default modifiersBase\n","import type { Point, Listeners, OrBoolean, Element, Rect } from '@interactjs/core/types'\n\nexport interface Defaults {\n  base: BaseDefaults\n  perAction: PerActionDefaults\n  actions: ActionDefaults\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionDefaults {}\n\nexport interface BaseDefaults {\n  preventDefault?: 'always' | 'never' | 'auto'\n  deltaSource?: 'page' | 'client'\n  context?: Node\n  getRect?: (element: Element) => Rect\n}\n\nexport interface PerActionDefaults {\n  enabled?: boolean\n  origin?: Point | string | Element\n  listeners?: Listeners\n  allowFrom?: string | Element\n  ignoreFrom?: string | Element\n}\n\nexport type Options = Partial<BaseDefaults> &\n  Partial<PerActionDefaults> & {\n    [P in keyof ActionDefaults]?: Partial<ActionDefaults[P]>\n  }\n\nexport interface OptionsArg extends BaseDefaults, OrBoolean<Partial<ActionDefaults>> {}\n\nexport const defaults: Defaults = {\n  base: {\n    preventDefault: 'auto',\n    deltaSource: 'page',\n  },\n\n  perAction: {\n    enabled: false,\n    origin: { x: 0, y: 0 },\n  },\n\n  actions: {} as ActionDefaults,\n}\n","import extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\n\nimport type { Point, FullRect, PointerEventType, Element, ActionName } from '@interactjs/core/types'\n\nimport { BaseEvent } from './BaseEvent'\nimport type { Interaction } from './Interaction'\nimport { defaults } from './options'\n\nexport type EventPhase = keyof PhaseMap\n\nexport interface PhaseMap {\n  start: true\n  move: true\n  end: true\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface InteractEvent {\n  pageX: number\n  pageY: number\n\n  clientX: number\n  clientY: number\n\n  dx: number\n  dy: number\n\n  velocityX: number\n  velocityY: number\n}\n\nexport class InteractEvent<\n  T extends ActionName = never,\n  P extends EventPhase = EventPhase,\n> extends BaseEvent<T> {\n  declare target: Element\n  declare currentTarget: Element\n  relatedTarget: Element | null = null\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Point\n  client: Point\n  delta: Point\n  rect: FullRect\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  // resize\n  axes?: 'x' | 'y' | 'xy'\n  /** @internal */\n  preEnd?: boolean\n\n  constructor(\n    interaction: Interaction<T>,\n    event: PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target = interaction.interactable\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin = getOriginXY(target, element, actionName)\n    const starting = phase === 'start'\n    const ending = phase === 'end'\n    const prevEvent = starting ? this : interaction.prevEvent\n    const coords = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page = extend({}, coords.page)\n    this.client = extend({}, coords.client)\n    this.rect = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey = event.ctrlKey\n    this.altKey = event.altKey\n    this.shiftKey = event.shiftKey\n    this.metaKey = event.metaKey\n    this.button = (event as MouseEvent).button\n    this.buttons = (event as MouseEvent).buttons\n    this.target = element\n    this.currentTarget = element\n    this.preEnd = preEnd\n    this.type = type || actionName + (phase || '')\n    this.interactable = target\n\n    this.t0 = starting ? interaction.pointers[interaction.pointers.length - 1].downTime : prevEvent.t0\n\n    this.x0 = interaction.coords.start.page.x - origin.x\n    this.y0 = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    } else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt = interaction.coords.delta.timeStamp\n    this.duration = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = ending || phase === 'inertiastart' ? this.getSwipe() : null\n  }\n\n  getSwipe() {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = (180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX)) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle < 45 + overlap)\n    const down = !up && 45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault() {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation() {\n    this.propagationStopped = true\n  }\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperties(InteractEvent.prototype, {\n  pageX: {\n    get() {\n      return this.page.x\n    },\n    set(value) {\n      this.page.x = value\n    },\n  },\n  pageY: {\n    get() {\n      return this.page.y\n    },\n    set(value) {\n      this.page.y = value\n    },\n  },\n\n  clientX: {\n    get() {\n      return this.client.x\n    },\n    set(value) {\n      this.client.x = value\n    },\n  },\n  clientY: {\n    get() {\n      return this.client.y\n    },\n    set(value) {\n      this.client.y = value\n    },\n  },\n\n  dx: {\n    get() {\n      return this.delta.x\n    },\n    set(value) {\n      this.delta.x = value\n    },\n  },\n  dy: {\n    get() {\n      return this.delta.y\n    },\n    set(value) {\n      this.delta.y = value\n    },\n  },\n\n  velocityX: {\n    get() {\n      return this.velocity.x\n    },\n    set(value) {\n      this.velocity.x = value\n    },\n  },\n  velocityY: {\n    get() {\n      return this.velocity.y\n    },\n    set(value) {\n      this.velocity.y = value\n    },\n  },\n})\n","import type { PointerEventType, PointerType } from '@interactjs/core/types'\n\nexport class PointerInfo {\n  id: number\n  pointer: PointerType\n  event: PointerEventType\n  downTime: number\n  downTarget: Node\n\n  constructor(id: number, pointer: PointerType, event: PointerEventType, downTime: number, downTarget: Node) {\n    this.id = id\n    this.pointer = pointer\n    this.event = event\n    this.downTime = downTime\n    this.downTarget = downTarget\n  }\n}\n","import * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport hypot from '@interactjs/utils/hypot'\nimport { warnOnce, copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type {\n  Element,\n  EdgeOptions,\n  PointerEventType,\n  PointerType,\n  FullRect,\n  CoordsSet,\n  ActionName,\n  ActionProps,\n} from '@interactjs/core/types'\n\nimport type { Interactable } from './Interactable'\nimport type { EventPhase } from './InteractEvent'\nimport { InteractEvent } from './InteractEvent'\nimport type { ActionDefaults } from './options'\nimport { PointerInfo } from './PointerInfo'\nimport type { Scope } from './scope'\n\nexport enum _ProxyValues {\n  interactable = '',\n  element = '',\n  prepared = '',\n  pointerIsDown = '',\n  pointerWasMoved = '',\n  _proxy = '',\n}\n\nexport enum _ProxyMethods {\n  start = '',\n  move = '',\n  end = '',\n  stop = '',\n  interacting = '',\n}\n\nexport type PointerArgProps<T extends {} = {}> = {\n  pointer: PointerType\n  event: PointerEventType\n  eventTarget: Node\n  pointerIndex: number\n  pointerInfo: PointerInfo\n  interaction: Interaction<never>\n} & T\n\nexport interface DoPhaseArg<T extends ActionName, P extends EventPhase> {\n  event: PointerEventType\n  phase: EventPhase\n  interaction: Interaction<T>\n  iEvent: InteractEvent<T, P>\n  preEnd?: boolean\n  type?: string\n}\n\nexport type DoAnyPhaseArg = DoPhaseArg<ActionName, EventPhase>\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:new': { interaction: Interaction<ActionName> }\n    'interactions:down': PointerArgProps<{\n      type: 'down'\n    }>\n    'interactions:move': PointerArgProps<{\n      type: 'move'\n      dx: number\n      dy: number\n      duplicate: boolean\n    }>\n    'interactions:up': PointerArgProps<{\n      type: 'up'\n      curEventTarget: EventTarget\n    }>\n    'interactions:cancel': SignalArgs['interactions:up'] & {\n      type: 'cancel'\n      curEventTarget: EventTarget\n    }\n    'interactions:update-pointer': PointerArgProps<{\n      down: boolean\n    }>\n    'interactions:remove-pointer': PointerArgProps\n    'interactions:blur': { interaction: Interaction<never>; event: Event; type: 'blur' }\n    'interactions:before-action-start': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-start': DoAnyPhaseArg\n    'interactions:after-action-start': DoAnyPhaseArg\n    'interactions:before-action-move': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-move': DoAnyPhaseArg\n    'interactions:after-action-move': DoAnyPhaseArg\n    'interactions:before-action-end': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-end': DoAnyPhaseArg\n    'interactions:after-action-end': DoAnyPhaseArg\n    'interactions:stop': { interaction: Interaction }\n  }\n}\n\nexport type InteractionProxy<T extends ActionName | null = never> = Pick<\n  Interaction<T>,\n  keyof typeof _ProxyValues | keyof typeof _ProxyMethods\n>\n\nlet idCounter = 0\n\nexport class Interaction<T extends ActionName | null = ActionName> {\n  /** current interactable being interacted with */\n  interactable: Interactable | null = null\n\n  /** the target element of the interactable */\n  element: Element | null = null\n  rect: FullRect | null = null\n  /** @internal */\n  _rects?: {\n    start: FullRect\n    corrected: FullRect\n    previous: FullRect\n    delta: FullRect\n  }\n  /** @internal */\n  edges: EdgeOptions | null = null\n\n  /** @internal */\n  _scopeFire: Scope['fire']\n\n  // action that's ready to be fired on next move event\n  prepared: ActionProps<T> = {\n    name: null,\n    axis: null,\n    edges: null,\n  }\n\n  pointerType: string\n\n  /** @internal keep track of added pointers */\n  pointers: PointerInfo[] = []\n\n  /** @internal pointerdown/mousedown/touchstart event */\n  downEvent: PointerEventType | null = null\n\n  /** @internal */ downPointer: PointerType = {} as PointerType\n\n  /** @internal */\n  _latestPointer: {\n    pointer: PointerType\n    event: PointerEventType\n    eventTarget: Node\n  } = {\n    pointer: null,\n    event: null,\n    eventTarget: null,\n  }\n\n  /** @internal */ prevEvent: InteractEvent<T, EventPhase> = null\n\n  pointerIsDown = false\n  pointerWasMoved = false\n  /** @internal */ _interacting = false\n  /** @internal */ _ending = false\n  /** @internal */ _stopped = true\n  /** @internal */ _proxy: InteractionProxy<T>\n\n  /** @internal */ simulation = null\n\n  /** @internal */ get pointerMoveTolerance() {\n    return 1\n  }\n\n  doMove = warnOnce(function (this: Interaction, signalArg: any) {\n    this.move(signalArg)\n  }, 'The interaction.doMove() method has been renamed to interaction.move()')\n\n  coords: CoordsSet = {\n    // Starting InteractEvent pointer coordinates\n    start: pointerUtils.newCoords(),\n    // Previous native pointer move event coordinates\n    prev: pointerUtils.newCoords(),\n    // current native pointer move event coordinates\n    cur: pointerUtils.newCoords(),\n    // Change in coordinates and time of the pointer\n    delta: pointerUtils.newCoords(),\n    // pointer velocity\n    velocity: pointerUtils.newCoords(),\n  }\n\n  /** @internal */ readonly _id: number = idCounter++\n\n  constructor({ pointerType, scopeFire }: { pointerType?: string; scopeFire: Scope['fire'] }) {\n    this._scopeFire = scopeFire\n    this.pointerType = pointerType\n\n    const that = this\n\n    this._proxy = {} as InteractionProxy<T>\n\n    for (const key in _ProxyValues) {\n      Object.defineProperty(this._proxy, key, {\n        get() {\n          return that[key]\n        },\n      })\n    }\n\n    for (const key in _ProxyMethods) {\n      Object.defineProperty(this._proxy, key, {\n        value: (...args: any[]) => that[key](...args),\n      })\n    }\n\n    this._scopeFire('interactions:new', { interaction: this })\n  }\n\n  pointerDown(pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    const pointerIndex = this.updatePointer(pointer, event, eventTarget, true)\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      pointerInfo,\n      type: 'down',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget)\n   *     }\n   * })\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param action - The action to be performed - drag, resize, etc.\n   * @param target - The Interactable to target\n   * @param element - The DOM Element to target\n   * @returns Whether the interaction was successfully started\n   */\n  start<A extends ActionName>(action: ActionProps<A>, interactable: Interactable, element: Element): boolean {\n    if (\n      this.interacting() ||\n      !this.pointerIsDown ||\n      this.pointers.length < (action.name === 'gesture' ? 2 : 1) ||\n      !interactable.options[action.name as keyof ActionDefaults].enabled\n    ) {\n      return false\n    }\n\n    copyAction(this.prepared, action)\n\n    this.interactable = interactable\n    this.element = element\n    this.rect = interactable.getRect(element)\n    this.edges = this.prepared.edges\n      ? extend({}, this.prepared.edges)\n      : { left: true, right: true, top: true, bottom: true }\n    this._stopped = false\n    this._interacting =\n      this._doPhase({\n        interaction: this,\n        event: this.downEvent,\n        phase: 'start',\n      }) && !this._stopped\n\n    return this._interacting\n  }\n\n  pointerMove(pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    if (!this.simulation && !(this.modification && this.modification.endResult)) {\n      this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const duplicateMove =\n      this.coords.cur.page.x === this.coords.prev.page.x &&\n      this.coords.cur.page.y === this.coords.prev.page.y &&\n      this.coords.cur.client.x === this.coords.prev.client.x &&\n      this.coords.cur.client.y === this.coords.prev.client.y\n\n    let dx: number\n    let dy: number\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.coords.cur.client.x - this.coords.start.client.x\n      dy = this.coords.cur.client.y - this.coords.start.client.y\n\n      this.pointerWasMoved = hypot(dx, dy) > this.pointerMoveTolerance\n    }\n\n    const pointerIndex = this.getPointerIndex(pointer)\n    const signalArg = {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      type: 'move' as const,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this as unknown as Interaction<never>,\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and velocity\n      pointerUtils.setCoordVelocity(this.coords.velocity, this.coords.delta)\n    }\n\n    this._scopeFire('interactions:move', signalArg)\n\n    if (!duplicateMove && !this.simulation) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        signalArg.type = null\n        this.move(signalArg)\n      }\n\n      if (this.pointerWasMoved) {\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }})\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move()\n   *     }\n   *   })\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  move(signalArg?: any) {\n    if (!signalArg || !signalArg.event) {\n      pointerUtils.setZeroCoords(this.coords.delta)\n    }\n\n    signalArg = extend(\n      {\n        pointer: this._latestPointer.pointer,\n        event: this._latestPointer.event,\n        eventTarget: this._latestPointer.eventTarget,\n        interaction: this,\n      },\n      signalArg || {},\n    )\n\n    signalArg.phase = 'move'\n\n    this._doPhase(signalArg)\n  }\n\n  /**\n   * @internal\n   * End interact move events and stop auto-scroll unless simulation is running\n   */\n  pointerUp(pointer: PointerType, event: PointerEventType, eventTarget: Node, curEventTarget: EventTarget) {\n    let pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) {\n      pointerIndex = this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const type = /cancel$/i.test(event.type) ? 'cancel' : 'up'\n\n    this._scopeFire(`interactions:${type}` as 'interactions:up' | 'interactions:cancel', {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      eventTarget,\n      type: type as any,\n      curEventTarget,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    if (!this.simulation) {\n      this.end(event)\n    }\n\n    this.removePointer(pointer, event)\n  }\n\n  /** @internal */\n  documentBlur(event: Event) {\n    this.end(event as any)\n    this._scopeFire('interactions:blur', {\n      event,\n      type: 'blur',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end()\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation()\n   *     }\n   *   })\n   * ```\n   */\n  end(event?: PointerEventType) {\n    this._ending = true\n    event = event || this._latestPointer.event\n    let endPhaseResult: boolean\n\n    if (this.interacting()) {\n      endPhaseResult = this._doPhase({\n        event,\n        interaction: this,\n        phase: 'end',\n      })\n    }\n\n    this._ending = false\n\n    if (endPhaseResult === true) {\n      this.stop()\n    }\n  }\n\n  currentAction() {\n    return this._interacting ? this.prepared.name : null\n  }\n\n  interacting() {\n    return this._interacting\n  }\n\n  stop() {\n    this._scopeFire('interactions:stop', { interaction: this })\n\n    this.interactable = this.element = null\n\n    this._interacting = false\n    this._stopped = true\n    this.prepared.name = this.prevEvent = null\n  }\n\n  /** @internal */\n  getPointerIndex(pointer: any) {\n    const pointerId = pointerUtils.getPointerId(pointer)\n\n    // mouse and pen interactions may have only one pointer\n    return this.pointerType === 'mouse' || this.pointerType === 'pen'\n      ? this.pointers.length - 1\n      : arr.findIndex(this.pointers, (curPointer) => curPointer.id === pointerId)\n  }\n\n  /** @internal */\n  getPointerInfo(pointer: any) {\n    return this.pointers[this.getPointerIndex(pointer)]\n  }\n\n  /** @internal */\n  updatePointer(pointer: PointerType, event: PointerEventType, eventTarget: Node, down?: boolean) {\n    const id = pointerUtils.getPointerId(pointer)\n    let pointerIndex = this.getPointerIndex(pointer)\n    let pointerInfo = this.pointers[pointerIndex]\n\n    down = down === false ? false : down || /(down|start)$/i.test(event.type)\n\n    if (!pointerInfo) {\n      pointerInfo = new PointerInfo(id, pointer, event, null, null)\n\n      pointerIndex = this.pointers.length\n      this.pointers.push(pointerInfo)\n    } else {\n      pointerInfo.pointer = pointer\n    }\n\n    pointerUtils.setCoords(\n      this.coords.cur,\n      this.pointers.map((p) => p.pointer),\n      this._now(),\n    )\n    pointerUtils.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur)\n\n    if (down) {\n      this.pointerIsDown = true\n\n      pointerInfo.downTime = this.coords.cur.timeStamp\n      pointerInfo.downTarget = eventTarget\n      pointerUtils.pointerExtend(this.downPointer, pointer)\n\n      if (!this.interacting()) {\n        pointerUtils.copyCoords(this.coords.start, this.coords.cur)\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n\n        this.downEvent = event\n        this.pointerWasMoved = false\n      }\n    }\n\n    this._updateLatestPointer(pointer, event, eventTarget)\n\n    this._scopeFire('interactions:update-pointer', {\n      pointer,\n      event,\n      eventTarget,\n      down,\n      pointerInfo,\n      pointerIndex,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    return pointerIndex\n  }\n\n  /** @internal */\n  removePointer(pointer: PointerType, event: PointerEventType) {\n    const pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) return\n\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:remove-pointer', {\n      pointer,\n      event,\n      eventTarget: null,\n      pointerIndex,\n      pointerInfo,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    this.pointers.splice(pointerIndex, 1)\n    this.pointerIsDown = false\n  }\n\n  /** @internal */\n  _updateLatestPointer(pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    this._latestPointer.pointer = pointer\n    this._latestPointer.event = event\n    this._latestPointer.eventTarget = eventTarget\n  }\n\n  destroy() {\n    this._latestPointer.pointer = null\n    this._latestPointer.event = null\n    this._latestPointer.eventTarget = null\n  }\n\n  /** @internal */\n  _createPreparedEvent<P extends EventPhase>(\n    event: PointerEventType,\n    phase: P,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    return new InteractEvent<T, P>(this, event, this.prepared.name, phase, this.element, preEnd, type)\n  }\n\n  /** @internal */\n  _fireEvent<P extends EventPhase>(iEvent: InteractEvent<T, P>) {\n    this.interactable?.fire(iEvent)\n\n    if (!this.prevEvent || iEvent.timeStamp >= this.prevEvent.timeStamp) {\n      this.prevEvent = iEvent\n    }\n  }\n\n  /** @internal */\n  _doPhase<P extends EventPhase>(\n    signalArg: Omit<DoPhaseArg<T, P>, 'iEvent'> & { iEvent?: InteractEvent<T, P> },\n  ) {\n    const { event, phase, preEnd, type } = signalArg\n    const { rect } = this\n\n    if (rect && phase === 'move') {\n      // update the rect changes due to pointer move\n      rectUtils.addEdges(this.edges, rect, this.coords.delta[this.interactable.options.deltaSource])\n\n      rect.width = rect.right - rect.left\n      rect.height = rect.bottom - rect.top\n    }\n\n    const beforeResult = this._scopeFire(`interactions:before-action-${phase}` as any, signalArg)\n\n    if (beforeResult === false) {\n      return false\n    }\n\n    const iEvent = (signalArg.iEvent = this._createPreparedEvent(event, phase, preEnd, type))\n\n    this._scopeFire(`interactions:action-${phase}` as any, signalArg)\n\n    if (phase === 'start') {\n      this.prevEvent = iEvent\n    }\n\n    this._fireEvent(iEvent)\n\n    this._scopeFire(`interactions:after-action-${phase}` as any, signalArg)\n\n    return true\n  }\n\n  /** @internal */\n  _now() {\n    return Date.now()\n  }\n}\n\nexport default Interaction\nexport { PointerInfo }\n","import type Interaction from '@interactjs/core/Interaction'\nimport { _ProxyMethods } from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\nimport type { Point } from '@interactjs/core/types'\nimport * as rectUtils from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    offsetBy?: typeof offsetBy\n    offset: {\n      total: Point\n      pending: Point\n    }\n  }\n\n  enum _ProxyMethods {\n    offsetBy = '',\n  }\n}\n\n;(_ProxyMethods as any).offsetBy = ''\n\nexport function addTotal(interaction: Interaction) {\n  if (!interaction.pointerIsDown) {\n    return\n  }\n\n  addToCoords(interaction.coords.cur, interaction.offset.total)\n\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nfunction beforeAction({ interaction }: { interaction: Interaction }) {\n  applyPending(interaction)\n}\n\nfunction beforeEnd({ interaction }: { interaction: Interaction }): boolean | void {\n  const hadPending = applyPending(interaction)\n\n  if (!hadPending) return\n\n  interaction.move({ offset: true })\n  interaction.end()\n\n  return false\n}\n\nfunction end({ interaction }: { interaction: Interaction }) {\n  interaction.offset.total.x = 0\n  interaction.offset.total.y = 0\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nexport function applyPending(interaction: Interaction) {\n  if (!hasPending(interaction)) {\n    return false\n  }\n\n  const { pending } = interaction.offset\n\n  addToCoords(interaction.coords.cur, pending)\n  addToCoords(interaction.coords.delta, pending)\n  rectUtils.addEdges(interaction.edges, interaction.rect, pending)\n\n  pending.x = 0\n  pending.y = 0\n\n  return true\n}\n\nfunction offsetBy(this: Interaction, { x, y }: Point) {\n  this.offset.pending.x += x\n  this.offset.pending.y += y\n\n  this.offset.total.x += x\n  this.offset.total.y += y\n}\n\nfunction addToCoords({ page, client }, { x, y }: Point) {\n  page.x += x\n  page.y += y\n  client.x += x\n  client.y += y\n}\n\nfunction hasPending(interaction: Interaction) {\n  return !!(interaction.offset.pending.x || interaction.offset.pending.y)\n}\n\nconst offset: Plugin = {\n  id: 'offset',\n  before: ['modifiers', 'pointer-events', 'actions', 'inertia'],\n  install(scope) {\n    scope.Interaction.prototype.offsetBy = offsetBy\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.offset = {\n        total: { x: 0, y: 0 },\n        pending: { x: 0, y: 0 },\n      }\n    },\n    'interactions:update-pointer': ({ interaction }) => addTotal(interaction),\n    'interactions:before-action-start': beforeAction,\n    'interactions:before-action-move': beforeAction,\n    'interactions:before-action-end': beforeEnd,\n    'interactions:stop': end,\n  },\n}\n\nexport default offset\n","import type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Point, PointerEventType } from '@interactjs/core/types'\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '@interactjs/modifiers/base'\nimport '@interactjs/offset/plugin'\nimport * as modifiers from '@interactjs/modifiers/base'\nimport { Modification } from '@interactjs/modifiers/Modification'\nimport type { ModifierArg } from '@interactjs/modifiers/types'\nimport offset from '@interactjs/offset/plugin'\n/* eslint-enable import/no-duplicates */\nimport * as dom from '@interactjs/utils/domUtils'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { copyCoords } from '@interactjs/utils/pointerUtils'\nimport raf from '@interactjs/utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    resume?: true\n    inertiastart?: true\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: InertiaState\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean\n      resistance?: number // the lambda in exponential decay\n      minSpeed?: number // target speed must be above this for inertia to start\n      endSpeed?: number // the speed at which inertia is slow enough to stop\n      allowResume?: true // allow resuming an action in inertia phase\n      smoothEndDuration?: number // animate to snap/restrict endOnly if there's no inertia\n    }\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-inertiastart': Omit<DoPhaseArg<ActionName, 'inertiastart'>, 'iEvent'>\n    'interactions:action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:after-action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:before-action-resume': Omit<DoPhaseArg<ActionName, 'resume'>, 'iEvent'>\n    'interactions:action-resume': DoPhaseArg<ActionName, 'resume'>\n    'interactions:after-action-resume': DoPhaseArg<ActionName, 'resume'>\n  }\n}\n\nfunction install(scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(offset)\n  scope.usePlugin(modifiers.default)\n  scope.actions.phases.inertiastart = true\n  scope.actions.phases.resume = true\n\n  defaults.perAction.inertia = {\n    enabled: false,\n    resistance: 10, // the lambda in exponential decay\n    minSpeed: 100, // target speed must be above this for inertia to start\n    endSpeed: 10, // the speed at which inertia is slow enough to stop\n    allowResume: true, // allow resuming an action in inertia phase\n    smoothEndDuration: 300, // animate to snap/restrict endOnly if there's no inertia\n  }\n}\n\nexport class InertiaState {\n  active = false\n  isModified = false\n  smoothEnd = false\n  allowResume = false\n\n  modification!: Modification\n  modifierCount = 0\n  modifierArg!: ModifierArg\n\n  startCoords!: Point\n  t0 = 0\n  v0 = 0\n\n  te = 0\n  targetOffset!: Point\n  modifiedOffset!: Point\n  currentOffset!: Point\n\n  lambda_v0? = 0 // eslint-disable-line camelcase\n  one_ve_v0? = 0 // eslint-disable-line camelcase\n  timeout!: number\n  readonly interaction: Interaction\n\n  constructor(interaction: Interaction) {\n    this.interaction = interaction\n  }\n\n  start(event: PointerEventType) {\n    const { interaction } = this\n    const options = getOptions(interaction)\n\n    if (!options || !options.enabled) {\n      return false\n    }\n\n    const { client: velocityClient } = interaction.coords.velocity\n    const pointerSpeed = hypot(velocityClient.x, velocityClient.y)\n    const modification = this.modification || (this.modification = new Modification(interaction))\n\n    modification.copyFrom(interaction.modification)\n\n    this.t0 = interaction._now()\n    this.allowResume = options.allowResume\n    this.v0 = pointerSpeed\n    this.currentOffset = { x: 0, y: 0 }\n    this.startCoords = interaction.coords.cur.page\n\n    this.modifierArg = modification.fillArg({\n      pageCoords: this.startCoords,\n      preEnd: true,\n      phase: 'inertiastart',\n    })\n\n    const thrown =\n      this.t0 - interaction.coords.cur.timeStamp < 50 &&\n      pointerSpeed > options.minSpeed &&\n      pointerSpeed > options.endSpeed\n\n    if (thrown) {\n      this.startInertia()\n    } else {\n      modification.result = modification.setAll(this.modifierArg)\n\n      if (!modification.result.changed) {\n        return false\n      }\n\n      this.startSmoothEnd()\n    }\n\n    // force modification change\n    interaction.modification.result.rect = null\n\n    // bring inertiastart event to the target coords\n    interaction.offsetBy(this.targetOffset)\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'inertiastart',\n    })\n    interaction.offsetBy({ x: -this.targetOffset.x, y: -this.targetOffset.y })\n    // force modification change\n    interaction.modification.result.rect = null\n\n    this.active = true\n    interaction.simulation = this\n\n    return true\n  }\n\n  startInertia() {\n    const startVelocity = this.interaction.coords.velocity.client\n    const options = getOptions(this.interaction)\n    const lambda = options.resistance\n    const inertiaDur = -Math.log(options.endSpeed / this.v0) / lambda\n\n    this.targetOffset = {\n      x: (startVelocity.x - inertiaDur) / lambda,\n      y: (startVelocity.y - inertiaDur) / lambda,\n    }\n\n    this.te = inertiaDur\n    this.lambda_v0 = lambda / this.v0\n    this.one_ve_v0 = 1 - options.endSpeed / this.v0\n\n    const { modification, modifierArg } = this\n\n    modifierArg.pageCoords = {\n      x: this.startCoords.x + this.targetOffset.x,\n      y: this.startCoords.y + this.targetOffset.y,\n    }\n\n    modification.result = modification.setAll(modifierArg)\n\n    if (modification.result.changed) {\n      this.isModified = true\n      this.modifiedOffset = {\n        x: this.targetOffset.x + modification.result.delta.x,\n        y: this.targetOffset.y + modification.result.delta.y,\n      }\n    }\n\n    this.onNextFrame(() => this.inertiaTick())\n  }\n\n  startSmoothEnd() {\n    this.smoothEnd = true\n    this.isModified = true\n    this.targetOffset = {\n      x: this.modification.result.delta.x,\n      y: this.modification.result.delta.y,\n    }\n\n    this.onNextFrame(() => this.smoothEndTick())\n  }\n\n  onNextFrame(tickFn: () => void) {\n    this.timeout = raf.request(() => {\n      if (this.active) {\n        tickFn()\n      }\n    })\n  }\n\n  inertiaTick() {\n    const { interaction } = this\n    const options = getOptions(interaction)\n    const lambda = options.resistance\n    const t = (interaction._now() - this.t0) / 1000\n\n    if (t < this.te) {\n      const progress = 1 - (Math.exp(-lambda * t) - this.lambda_v0) / this.one_ve_v0\n      let newOffset: Point\n\n      if (this.isModified) {\n        newOffset = getQuadraticCurvePoint(\n          0,\n          0,\n          this.targetOffset.x,\n          this.targetOffset.y,\n          this.modifiedOffset.x,\n          this.modifiedOffset.y,\n          progress,\n        )\n      } else {\n        newOffset = {\n          x: this.targetOffset.x * progress,\n          y: this.targetOffset.y * progress,\n        }\n      }\n\n      const delta = { x: newOffset.x - this.currentOffset.x, y: newOffset.y - this.currentOffset.y }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move()\n\n      this.onNextFrame(() => this.inertiaTick())\n    } else {\n      interaction.offsetBy({\n        x: this.modifiedOffset.x - this.currentOffset.x,\n        y: this.modifiedOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  smoothEndTick() {\n    const { interaction } = this\n    const t = interaction._now() - this.t0\n    const { smoothEndDuration: duration } = getOptions(interaction)\n\n    if (t < duration) {\n      const newOffset = {\n        x: easeOutQuad(t, 0, this.targetOffset.x, duration),\n        y: easeOutQuad(t, 0, this.targetOffset.y, duration),\n      }\n      const delta = {\n        x: newOffset.x - this.currentOffset.x,\n        y: newOffset.y - this.currentOffset.y,\n      }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move({ skipModifiers: this.modifierCount })\n\n      this.onNextFrame(() => this.smoothEndTick())\n    } else {\n      interaction.offsetBy({\n        x: this.targetOffset.x - this.currentOffset.x,\n        y: this.targetOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  resume({ pointer, event, eventTarget }: SignalArgs['interactions:down']) {\n    const { interaction } = this\n\n    // undo inertia changes to interaction coords\n    interaction.offsetBy({\n      x: -this.currentOffset.x,\n      y: -this.currentOffset.y,\n    })\n\n    // update pointer at pointer down position\n    interaction.updatePointer(pointer, event, eventTarget, true)\n\n    // fire resume signals and event\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'resume',\n    })\n    copyCoords(interaction.coords.prev, interaction.coords.cur)\n\n    this.stop()\n  }\n\n  end() {\n    this.interaction.move()\n    this.interaction.end()\n    this.stop()\n  }\n\n  stop() {\n    this.active = this.smoothEnd = false\n    this.interaction.simulation = null\n    raf.cancel(this.timeout)\n  }\n}\n\nfunction start({ interaction, event }: DoPhaseArg<ActionName, 'end'>) {\n  if (!interaction._interacting || interaction.simulation) {\n    return null\n  }\n\n  const started = interaction.inertia.start(event)\n\n  // prevent action end if inertia or smoothEnd\n  return started ? false : null\n}\n\n// Check if the down event hits the current inertia target\n// control should be return to the user\nfunction resume(arg: SignalArgs['interactions:down']) {\n  const { interaction, eventTarget } = arg\n  const state = interaction.inertia\n\n  if (!state.active) return\n\n  let element = eventTarget as Node\n\n  // climb up the DOM tree from the event target\n  while (is.element(element)) {\n    // if interaction element is the current inertia target element\n    if (element === interaction.element) {\n      state.resume(arg)\n      break\n    }\n\n    element = dom.parentNode(element)\n  }\n}\n\nfunction stop({ interaction }: { interaction: Interaction }) {\n  const state = interaction.inertia\n\n  if (state.active) {\n    state.stop()\n  }\n}\n\nfunction getOptions({ interactable, prepared }: Interaction) {\n  return interactable && interactable.options && prepared.name && interactable.options[prepared.name].inertia\n}\n\nconst inertia: Plugin = {\n  id: 'inertia',\n  before: ['modifiers', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.inertia = new InertiaState(interaction)\n    },\n\n    'interactions:before-action-end': start,\n    'interactions:down': resume,\n    'interactions:stop': stop,\n\n    'interactions:before-action-resume': (arg) => {\n      const { modification } = arg.interaction\n\n      modification.stop(arg)\n      modification.start(arg, arg.interaction.coords.cur.page)\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-inertiastart': (arg) => arg.interaction.modification.setAndApply(arg),\n    'interactions:action-resume': modifiers.addEventModifiers,\n    'interactions:action-inertiastart': modifiers.addEventModifiers,\n    'interactions:after-action-inertiastart': (arg) =>\n      arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-resume': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n  },\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nfunction _getQBezierValue(t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nfunction getQuadraticCurvePoint(\n  startX: number,\n  startY: number,\n  cpX: number,\n  cpY: number,\n  endX: number,\n  endY: number,\n  position: number,\n) {\n  return {\n    x: _getQBezierValue(position, startX, cpX, endX),\n    y: _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nfunction easeOutQuad(t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport default inertia\n","import * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport type { NormalizedListeners } from '@interactjs/utils/normalizeListeners'\nimport normalize from '@interactjs/utils/normalizeListeners'\n\nimport type { Listener, ListenersArg, Rect } from '@interactjs/core/types'\n\nfunction fireUntilImmediateStopped(event: any, listeners: Listener[]) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) {\n      break\n    }\n\n    listener(event)\n  }\n}\n\nexport class Eventable {\n  options: any\n  types: NormalizedListeners = {}\n  propagationStopped = false\n  immediatePropagationStopped = false\n  global: any\n\n  constructor(options?: { [index: string]: any }) {\n    this.options = extend({}, options || {})\n  }\n\n  fire<T extends { type: string; propagationStopped?: boolean }>(event: T) {\n    let listeners: Listener[]\n    const global = this.global\n\n    // Interactable#on() listeners\n    // tslint:disable no-conditional-assignment\n    if ((listeners = this.types[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n  }\n\n  on(type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      this.types[type] = arr.merge(this.types[type] || [], listeners[type])\n    }\n  }\n\n  off(type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      const eventList = this.types[type]\n\n      if (!eventList || !eventList.length) {\n        continue\n      }\n\n      for (const subListener of listeners[type]) {\n        const index = eventList.indexOf(subListener)\n\n        if (index !== -1) {\n          eventList.splice(index, 1)\n        }\n      }\n    }\n  }\n\n  getRect(_element: Element): Rect {\n    return null\n  }\n}\n","import * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport pExtend from '@interactjs/utils/pointerExtend'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Scope } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/core/types'\n\nimport type { NativeEventTarget } from './NativeTypes'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    events: ReturnType<typeof install>\n  }\n}\n\ninterface EventOptions {\n  capture: boolean\n  passive: boolean\n}\n\ntype PartialEventTarget = Partial<NativeEventTarget>\n\ntype ListenerEntry = { func: (event: Event | FakeEvent) => any; options: EventOptions }\n\nfunction install(scope: Scope) {\n  const targets: Array<{\n    eventTarget: PartialEventTarget\n    events: { [type: string]: ListenerEntry[] }\n  }> = []\n\n  const delegatedEvents: {\n    [type: string]: Array<{\n      selector: string\n      context: Node\n      listeners: ListenerEntry[]\n    }>\n  } = {}\n  const documents: Document[] = []\n\n  const eventsMethods = {\n    add,\n    remove,\n\n    addDelegate,\n    removeDelegate,\n\n    delegateListener,\n    delegateUseCapture,\n    delegatedEvents,\n    documents,\n\n    targets,\n\n    supportsOptions: false,\n    supportsPassive: false,\n  }\n\n  // check if browser supports passive events and options arg\n  scope.document?.createElement('div').addEventListener('test', null, {\n    get capture() {\n      return (eventsMethods.supportsOptions = true)\n    },\n    get passive() {\n      return (eventsMethods.supportsPassive = true)\n    },\n  })\n\n  scope.events = eventsMethods\n\n  function add(\n    eventTarget: PartialEventTarget,\n    type: string,\n    listener: ListenerEntry['func'],\n    optionalArg?: boolean | EventOptions,\n  ) {\n    if (!eventTarget.addEventListener) return\n\n    const options = getOptions(optionalArg)\n    let target = arr.find(targets, (t) => t.eventTarget === eventTarget)\n\n    if (!target) {\n      target = {\n        eventTarget,\n        events: {},\n      }\n\n      targets.push(target)\n    }\n\n    if (!target.events[type]) {\n      target.events[type] = []\n    }\n\n    if (!arr.find(target.events[type], (l) => l.func === listener && optionsMatch(l.options, options))) {\n      eventTarget.addEventListener(\n        type,\n        listener as any,\n        eventsMethods.supportsOptions ? options : options.capture,\n      )\n      target.events[type].push({ func: listener, options })\n    }\n  }\n\n  function remove(\n    eventTarget: PartialEventTarget,\n    type: string,\n    listener?: 'all' | ListenerEntry['func'],\n    optionalArg?: boolean | EventOptions,\n  ) {\n    if (!eventTarget.addEventListener || !eventTarget.removeEventListener) return\n\n    const targetIndex = arr.findIndex(targets, (t) => t.eventTarget === eventTarget)\n    const target = targets[targetIndex]\n\n    if (!target || !target.events) {\n      return\n    }\n\n    if (type === 'all') {\n      for (type in target.events) {\n        if (target.events.hasOwnProperty(type)) {\n          remove(eventTarget, type, 'all')\n        }\n      }\n      return\n    }\n\n    let typeIsEmpty = false\n    const typeListeners = target.events[type]\n\n    if (typeListeners) {\n      if (listener === 'all') {\n        for (let i = typeListeners.length - 1; i >= 0; i--) {\n          const entry = typeListeners[i]\n          remove(eventTarget, type, entry.func, entry.options)\n        }\n        return\n      } else {\n        const options = getOptions(optionalArg)\n\n        for (let i = 0; i < typeListeners.length; i++) {\n          const entry = typeListeners[i]\n          if (entry.func === listener && optionsMatch(entry.options, options)) {\n            eventTarget.removeEventListener(\n              type,\n              listener as any,\n              eventsMethods.supportsOptions ? options : options.capture,\n            )\n            typeListeners.splice(i, 1)\n\n            if (typeListeners.length === 0) {\n              delete target.events[type]\n              typeIsEmpty = true\n            }\n\n            break\n          }\n        }\n      }\n    }\n\n    if (typeIsEmpty && !Object.keys(target.events).length) {\n      targets.splice(targetIndex, 1)\n    }\n  }\n\n  function addDelegate(\n    selector: string,\n    context: Node,\n    type: string,\n    listener: ListenerEntry['func'],\n    optionalArg?: any,\n  ) {\n    const options = getOptions(optionalArg)\n    if (!delegatedEvents[type]) {\n      delegatedEvents[type] = []\n\n      // add delegate listener functions\n      for (const doc of documents) {\n        add(doc, type, delegateListener)\n        add(doc, type, delegateUseCapture, true)\n      }\n    }\n\n    const delegates = delegatedEvents[type]\n    let delegate = arr.find(delegates, (d) => d.selector === selector && d.context === context)\n\n    if (!delegate) {\n      delegate = { selector, context, listeners: [] }\n      delegates.push(delegate)\n    }\n\n    delegate.listeners.push({ func: listener, options })\n  }\n\n  function removeDelegate(\n    selector: string,\n    context: Document | Element,\n    type: string,\n    listener?: ListenerEntry['func'],\n    optionalArg?: any,\n  ) {\n    const options = getOptions(optionalArg)\n    const delegates = delegatedEvents[type]\n    let matchFound = false\n    let index: number\n\n    if (!delegates) return\n\n    // count from last index of delegated to 0\n    for (index = delegates.length - 1; index >= 0; index--) {\n      const cur = delegates[index]\n      // look for matching selector and context Node\n      if (cur.selector === selector && cur.context === context) {\n        const { listeners } = cur\n\n        // each item of the listeners array is an array: [function, capture, passive]\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          const entry = listeners[i]\n\n          // check if the listener functions and capture and passive flags match\n          if (entry.func === listener && optionsMatch(entry.options, options)) {\n            // remove the listener from the array of listeners\n            listeners.splice(i, 1)\n\n            // if all listeners for this target have been removed\n            // remove the target from the delegates array\n            if (!listeners.length) {\n              delegates.splice(index, 1)\n\n              // remove delegate function from context\n              remove(context, type, delegateListener)\n              remove(context, type, delegateUseCapture, true)\n            }\n\n            // only remove one listener\n            matchFound = true\n            break\n          }\n        }\n\n        if (matchFound) {\n          break\n        }\n      }\n    }\n  }\n\n  // bound to the interactable context when a DOM event\n  // listener is added to a selector interactable\n  function delegateListener(event: Event | FakeEvent, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    const fakeEvent = new FakeEvent(event as Event)\n    const delegates = delegatedEvents[event.type]\n    const [eventTarget] = pointerUtils.getEventTargets(event as Event)\n    let element: Node = eventTarget\n\n    // climb up document tree looking for selector matches\n    while (is.element(element)) {\n      for (let i = 0; i < delegates.length; i++) {\n        const cur = delegates[i]\n        const { selector, context } = cur\n\n        if (\n          domUtils.matchesSelector(element, selector) &&\n          domUtils.nodeContains(context, eventTarget) &&\n          domUtils.nodeContains(context, element)\n        ) {\n          const { listeners } = cur\n\n          fakeEvent.currentTarget = element\n\n          for (const entry of listeners) {\n            if (optionsMatch(entry.options, options)) {\n              entry.func(fakeEvent)\n            }\n          }\n        }\n      }\n\n      element = domUtils.parentNode(element)\n    }\n  }\n\n  function delegateUseCapture(this: Element, event: Event | FakeEvent) {\n    return delegateListener.call(this, event, true)\n  }\n\n  // for type inferrence\n  return eventsMethods\n}\n\nclass FakeEvent implements Partial<Event> {\n  currentTarget: Node\n  originalEvent: Event\n  type: string\n\n  constructor(originalEvent: Event) {\n    this.originalEvent = originalEvent\n    // duplicate the event so that currentTarget can be changed\n    pExtend(this, originalEvent)\n  }\n\n  preventOriginalDefault() {\n    this.originalEvent.preventDefault()\n  }\n\n  stopPropagation() {\n    this.originalEvent.stopPropagation()\n  }\n\n  stopImmediatePropagation() {\n    this.originalEvent.stopImmediatePropagation()\n  }\n}\n\nfunction getOptions(param: { [index: string]: any } | boolean): { capture: boolean; passive: boolean } {\n  if (!is.object(param)) {\n    return { capture: !!param, passive: false }\n  }\n\n  return {\n    capture: !!param.capture,\n    passive: !!param.passive,\n  }\n}\n\nfunction optionsMatch(a: Partial<EventOptions> | boolean, b: Partial<EventOptions>) {\n  if (a === b) return true\n\n  if (typeof a === 'boolean') return !!b.capture === a && !!b.passive === false\n\n  return !!a.capture === !!b.capture && !!a.passive === !!b.passive\n}\n\nexport default {\n  id: 'events',\n  install,\n}\n","import * as dom from '@interactjs/utils/domUtils'\n\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerType } from '@interactjs/core/types'\n\nexport interface SearchDetails {\n  pointer: PointerType\n  pointerId: number\n  pointerType: string\n  eventType: string\n  eventTarget: EventTarget\n  curEventTarget: EventTarget\n  scope: Scope\n}\n\nconst finder = {\n  methodOrder: ['simulationResume', 'mouseOrPen', 'hasPointer', 'idle'] as const,\n\n  search(details: SearchDetails) {\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details)\n\n      if (interaction) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume({ pointerType, eventType, eventTarget, scope }: SearchDetails) {\n    if (!/down|start/i.test(eventType)) {\n      return null\n    }\n\n    for (const interaction of scope.interactions.list) {\n      let element = eventTarget as Node\n\n      if (\n        interaction.simulation &&\n        interaction.simulation.allowResume &&\n        interaction.pointerType === pointerType\n      ) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction\n          }\n          element = dom.parentNode(element)\n        }\n      }\n    }\n\n    return null\n  },\n\n  // if it's a mouse or pen interaction\n  mouseOrPen({ pointerId, pointerType, eventType, scope }: SearchDetails) {\n    if (pointerType !== 'mouse' && pointerType !== 'pen') {\n      return null\n    }\n\n    let firstNonActive\n\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !hasPointerId(interaction, pointerId)) {\n          continue\n        }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive\n    }\n\n    // find any mouse or pen interaction.\n    // ignore the interaction if the eventType is a *down, and a simulation\n    // is active\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType && !(/down/i.test(eventType) && interaction.simulation)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get interaction that has this pointer\n  hasPointer({ pointerId, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      if (hasPointerId(interaction, pointerId)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get first idle interaction with a matching pointerType\n  idle({ pointerType, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      // if there's already a pointer held down\n      if (interaction.pointers.length === 1) {\n        const target = interaction.interactable\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !(target.options.gesture && target.options.gesture.enabled)) {\n          continue\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointers.length >= 2) {\n        continue\n      }\n\n      if (!interaction.interacting() && pointerType === interaction.pointerType) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n}\n\nfunction hasPointerId(interaction: Interaction, pointerId: number) {\n  return interaction.pointers.some(({ id }) => id === pointerId)\n}\n\nexport default finder\n","import browser from '@interactjs/utils/browser'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { nodeContains } from '@interactjs/utils/domUtils'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Listener } from '@interactjs/core/types'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './interactablePreventDefault'\nimport interactablePreventDefault from './interactablePreventDefault'\nimport InteractionBase from './Interaction'\n/* eslint-enable import/no-duplicates */\nimport type { SearchDetails } from './interactionFinder'\nimport finder from './interactionFinder'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    Interaction: typeof InteractionBase\n    interactions: {\n      new: <T extends ActionName>(options: any) => InteractionBase<T>\n      list: Array<InteractionBase<ActionName>>\n      listeners: { [type: string]: Listener }\n      docEvents: Array<{ type: string; listener: Listener }>\n      pointerMoveTolerance: number\n    }\n    prevTouchTime: number\n  }\n\n  interface SignalArgs {\n    'interactions:find': {\n      interaction: InteractionBase\n      searchDetails: SearchDetails\n    }\n  }\n}\n\nconst methodNames = [\n  'pointerDown',\n  'pointerMove',\n  'pointerUp',\n  'updatePointer',\n  'removePointer',\n  'windowBlur',\n]\n\nfunction install(scope: Scope) {\n  const listeners = {} as any\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope)\n  }\n\n  const pEventTypes = browser.pEventTypes\n  let docEvents: typeof scope.interactions.docEvents\n\n  if (domObjects.PointerEvent) {\n    docEvents = [\n      { type: pEventTypes.down, listener: releasePointersOnRemovedEls },\n      { type: pEventTypes.down, listener: listeners.pointerDown },\n      { type: pEventTypes.move, listener: listeners.pointerMove },\n      { type: pEventTypes.up, listener: listeners.pointerUp },\n      { type: pEventTypes.cancel, listener: listeners.pointerUp },\n    ]\n  } else {\n    docEvents = [\n      { type: 'mousedown', listener: listeners.pointerDown },\n      { type: 'mousemove', listener: listeners.pointerMove },\n      { type: 'mouseup', listener: listeners.pointerUp },\n\n      { type: 'touchstart', listener: releasePointersOnRemovedEls },\n      { type: 'touchstart', listener: listeners.pointerDown },\n      { type: 'touchmove', listener: listeners.pointerMove },\n      { type: 'touchend', listener: listeners.pointerUp },\n      { type: 'touchcancel', listener: listeners.pointerUp },\n    ]\n  }\n\n  docEvents.push({\n    type: 'blur',\n    listener(event) {\n      for (const interaction of scope.interactions.list) {\n        interaction.documentBlur(event)\n      }\n    },\n  })\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0\n\n  scope.Interaction = class<T extends ActionName> extends InteractionBase<T> {\n    get pointerMoveTolerance() {\n      return scope.interactions.pointerMoveTolerance\n    }\n\n    set pointerMoveTolerance(value) {\n      scope.interactions.pointerMoveTolerance = value\n    }\n\n    _now() {\n      return scope.now()\n    }\n  }\n\n  scope.interactions = {\n    // all active and idle interactions\n    list: [],\n    new<T extends ActionName>(options: { pointerType?: string; scopeFire?: Scope['fire'] }) {\n      options.scopeFire = (name, arg) => scope.fire(name, arg)\n\n      const interaction = new scope.Interaction<T>(options as Required<typeof options>)\n\n      scope.interactions.list.push(interaction)\n      return interaction\n    },\n    listeners,\n    docEvents,\n    pointerMoveTolerance: 1,\n  }\n\n  function releasePointersOnRemovedEls() {\n    // for all inactive touch interactions with pointers down\n    for (const interaction of scope.interactions.list) {\n      if (!interaction.pointerIsDown || interaction.pointerType !== 'touch' || interaction._interacting) {\n        continue\n      }\n\n      // if a pointer is down on an element that is no longer in the DOM tree\n      for (const pointer of interaction.pointers) {\n        if (!scope.documents.some(({ doc }) => nodeContains(doc, pointer.downTarget))) {\n          // remove the pointer from the interaction\n          interaction.removePointer(pointer.pointer, pointer.event)\n        }\n      }\n    }\n  }\n\n  scope.usePlugin(interactablePreventDefault)\n}\n\nfunction doOnInteractions(method: string, scope: Scope) {\n  return function (event: Event) {\n    const interactions = scope.interactions.list\n\n    const pointerType = pointerUtils.getPointerType(event)\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event)\n    const matches: any[] = [] // [ [pointer, interaction], ...]\n\n    if (/^touch/.test(event.type)) {\n      scope.prevTouchTime = scope.now()\n\n      // @ts-expect-error\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch\n        const pointerId = pointerUtils.getPointerId(pointer)\n        const searchDetails: SearchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        }\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    } else {\n      let invalidPointer = false\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer =\n          invalidPointer ||\n          scope.now() - scope.prevTouchTime < 500 ||\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          event.timeStamp === 0\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event as PointerEvent,\n          pointerId: pointerUtils.getPointerId(event as PointerEvent),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        }\n\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget)\n    }\n  }\n}\n\nfunction getInteraction(searchDetails: SearchDetails) {\n  const { pointerType, scope } = searchDetails\n\n  const foundInteraction = finder.search(searchDetails)\n  const signalArg = { interaction: foundInteraction, searchDetails }\n\n  scope.fire('interactions:find', signalArg)\n\n  return signalArg.interaction || scope.interactions.new({ pointerType })\n}\n\nfunction onDocSignal<T extends 'scope:add-document' | 'scope:remove-document'>(\n  { doc, scope, options }: SignalArgs[T],\n  eventMethodName: 'add' | 'remove',\n) {\n  const {\n    interactions: { docEvents },\n    events,\n  } = scope\n  const eventMethod = events[eventMethodName]\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false }\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener)\n    eventMethod(doc, eventType, events.delegateUseCapture, true)\n  }\n\n  const eventOptions = options && options.events\n\n  for (const { type, listener } of docEvents) {\n    eventMethod(doc, type, listener, eventOptions)\n  }\n}\n\nconst interactions: Plugin = {\n  id: 'core/interactions',\n  install,\n  listeners: {\n    'scope:add-document': (arg) => onDocSignal(arg, 'add'),\n    'scope:remove-document': (arg) => onDocSignal(arg, 'remove'),\n    'interactable:unset': ({ interactable }, scope) => {\n      // Stop and destroy related interactions when an Interactable is unset\n      for (let i = scope.interactions.list.length - 1; i >= 0; i--) {\n        const interaction = scope.interactions.list[i]\n\n        if (interaction.interactable !== interactable) {\n          continue\n        }\n\n        interaction.stop()\n        scope.fire('interactions:destroy', { interaction })\n        interaction.destroy()\n\n        if (scope.interactions.list.length > 2) {\n          scope.interactions.list.splice(i, 1)\n        }\n      }\n    },\n  },\n  onDocSignal,\n  doOnInteractions,\n  methodNames,\n}\n\nexport default interactions\n","/* eslint-disable no-dupe-class-members */\nimport * as arr from '@interactjs/utils/arr'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport { getElementRect, matchesUpTo, nodeContains, trySelector } from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport isNonNativeEvent from '@interactjs/utils/isNonNativeEvent'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport { getWindow } from '@interactjs/utils/window'\n\nimport type { Scope } from '@interactjs/core/scope'\nimport type {\n  ActionMap,\n  ActionMethod,\n  ActionName,\n  Actions,\n  Context,\n  Element,\n  EventTypes,\n  Listeners,\n  ListenersArg,\n  OrBoolean,\n  Target,\n} from '@interactjs/core/types'\n\nimport { Eventable } from './Eventable'\nimport type { ActionDefaults, Defaults, OptionsArg, PerActionDefaults, Options } from './options'\n\ntype IgnoreValue = string | Element | boolean\ntype DeltaSource = 'page' | 'client'\n\nconst enum OnOffMethod {\n  On,\n  Off,\n}\n\n/**\n * ```ts\n * const interactable = interact('.cards')\n *   .draggable({\n *     listeners: { move: event => console.log(event.type, event.pageX, event.pageY) }\n *   })\n *   .resizable({\n *     listeners: { move: event => console.log(event.rect) },\n *     modifiers: [interact.modifiers.restrictEdges({ outer: 'parent' })]\n *   })\n * ```\n */\nexport class Interactable implements Partial<Eventable> {\n  /** @internal */ get _defaults(): Defaults {\n    return {\n      base: {},\n      perAction: {},\n      actions: {} as ActionDefaults,\n    }\n  }\n\n  readonly target: Target\n  /** @internal */ readonly options!: Required<Options>\n  /** @internal */ readonly _actions: Actions\n  /** @internal */ readonly events = new Eventable()\n  /** @internal */ readonly _context: Context\n  /** @internal */ readonly _win: Window\n  /** @internal */ readonly _doc: Document\n  /** @internal */ readonly _scopeEvents: Scope['events']\n\n  constructor(\n    target: Target,\n    options: any,\n    defaultContext: Document | Element,\n    scopeEvents: Scope['events'],\n  ) {\n    this._actions = options.actions\n    this.target = target\n    this._context = options.context || defaultContext\n    this._win = getWindow(trySelector(target) ? this._context : target)\n    this._doc = this._win.document\n    this._scopeEvents = scopeEvents\n\n    this.set(options)\n  }\n\n  setOnEvents(actionName: ActionName, phases: NonNullable<any>) {\n    if (is.func(phases.onstart)) {\n      this.on(`${actionName}start`, phases.onstart)\n    }\n    if (is.func(phases.onmove)) {\n      this.on(`${actionName}move`, phases.onmove)\n    }\n    if (is.func(phases.onend)) {\n      this.on(`${actionName}end`, phases.onend)\n    }\n    if (is.func(phases.oninertiastart)) {\n      this.on(`${actionName}inertiastart`, phases.oninertiastart)\n    }\n\n    return this\n  }\n\n  updatePerActionListeners(actionName: ActionName, prev: Listeners | undefined, cur: Listeners | undefined) {\n    const actionFilter = (this._actions.map[actionName] as { filterEventType?: (type: string) => boolean })\n      ?.filterEventType\n    const filter = (type: string) =>\n      (actionFilter == null || actionFilter(type)) && isNonNativeEvent(type, this._actions)\n\n    if (is.array(prev) || is.object(prev)) {\n      this._onOff(OnOffMethod.Off, actionName, prev, undefined, filter)\n    }\n\n    if (is.array(cur) || is.object(cur)) {\n      this._onOff(OnOffMethod.On, actionName, cur, undefined, filter)\n    }\n  }\n\n  setPerAction(actionName: ActionName, options: OrBoolean<Options>) {\n    const defaults = this._defaults\n\n    // for all the default per-action options\n    for (const optionName_ in options) {\n      const optionName = optionName_ as keyof PerActionDefaults\n      const actionOptions = this.options[actionName]\n      const optionValue: any = options[optionName]\n\n      // remove old event listeners and add new ones\n      if (optionName === 'listeners') {\n        this.updatePerActionListeners(actionName, actionOptions.listeners, optionValue as Listeners)\n      }\n\n      // if the option value is an array\n      if (is.array(optionValue)) {\n        ;(actionOptions[optionName] as any) = arr.from(optionValue)\n      }\n      // if the option value is an object\n      else if (is.plainObject(optionValue)) {\n        // copy the object\n        ;(actionOptions[optionName] as any) = extend(\n          actionOptions[optionName] || ({} as any),\n          clone(optionValue),\n        )\n\n        // set anabled field to true if it exists in the defaults\n        if (\n          is.object(defaults.perAction[optionName]) &&\n          'enabled' in (defaults.perAction[optionName] as any)\n        ) {\n          ;(actionOptions[optionName] as any).enabled = optionValue.enabled !== false\n        }\n      }\n      // if the option value is a boolean and the default is an object\n      else if (is.bool(optionValue) && is.object(defaults.perAction[optionName])) {\n        ;(actionOptions[optionName] as any).enabled = optionValue\n      }\n      // if it's anything else, do a plain assignment\n      else {\n        ;(actionOptions[optionName] as any) = optionValue\n      }\n    }\n  }\n\n  /**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {Rect} The object's bounding rectangle.\n   */\n  getRect(element: Element) {\n    element = element || (is.element(this.target) ? this.target : null)\n\n    if (is.string(this.target)) {\n      element = element || this._context.querySelector(this.target)\n    }\n\n    return getElementRect(element)\n  }\n\n  /**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */\n  rectChecker(): (element: Element) => any | null\n  rectChecker(checker: (element: Element) => any): this\n  rectChecker(checker?: (element: Element) => any) {\n    if (is.func(checker)) {\n      this.getRect = (element) => {\n        const rect = extend({}, checker.apply(this, element))\n\n        if (!(('width' in rect) as unknown)) {\n          rect.width = rect.right - rect.left\n          rect.height = rect.bottom - rect.top\n        }\n\n        return rect\n      }\n\n      return this\n    }\n\n    if (checker === null) {\n      delete (this as Partial<typeof this>).getRect\n\n      return this\n    }\n\n    return this.getRect\n  }\n\n  /** @internal */\n  _backCompatOption(optionName: keyof Options, newValue: any) {\n    if (trySelector(newValue) || is.object(newValue)) {\n      ;(this.options[optionName] as any) = newValue\n\n      for (const action in this._actions.map) {\n        ;(this.options[action as keyof ActionMap] as any)[optionName] = newValue\n      }\n\n      return this\n    }\n\n    return this.options[optionName]\n  }\n\n  /**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */\n  origin(newValue: any) {\n    return this._backCompatOption('origin', newValue)\n  }\n\n  /**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */\n  deltaSource(): DeltaSource\n  deltaSource(newValue: DeltaSource): this\n  deltaSource(newValue?: DeltaSource) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue\n\n      return this\n    }\n\n    return this.options.deltaSource\n  }\n\n  /** @internal */\n  getAllElements(): Element[] {\n    const { target } = this\n\n    if (is.string(target)) {\n      return Array.from(this._context.querySelectorAll(target))\n    }\n\n    if (is.func(target) && (target as any).getAllElements) {\n      return (target as any).getAllElements()\n    }\n\n    return is.element(target) ? [target] : []\n  }\n\n  /**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */\n  context() {\n    return this._context\n  }\n\n  inContext(element: Document | Node) {\n    return this._context === element.ownerDocument || nodeContains(this._context, element)\n  }\n\n  /** @internal */\n  testIgnoreAllow(\n    this: Interactable,\n    options: { ignoreFrom?: IgnoreValue; allowFrom?: IgnoreValue },\n    targetNode: Node,\n    eventTarget: Node,\n  ) {\n    return (\n      !this.testIgnore(options.ignoreFrom, targetNode, eventTarget) &&\n      this.testAllow(options.allowFrom, targetNode, eventTarget)\n    )\n  }\n\n  /** @internal */\n  testAllow(this: Interactable, allowFrom: IgnoreValue | undefined, targetNode: Node, element: Node) {\n    if (!allowFrom) {\n      return true\n    }\n\n    if (!is.element(element)) {\n      return false\n    }\n\n    if (is.string(allowFrom)) {\n      return matchesUpTo(element, allowFrom, targetNode)\n    } else if (is.element(allowFrom)) {\n      return nodeContains(allowFrom, element)\n    }\n\n    return false\n  }\n\n  /** @internal */\n  testIgnore(this: Interactable, ignoreFrom: IgnoreValue | undefined, targetNode: Node, element: Node) {\n    if (!ignoreFrom || !is.element(element)) {\n      return false\n    }\n\n    if (is.string(ignoreFrom)) {\n      return matchesUpTo(element, ignoreFrom, targetNode)\n    } else if (is.element(ignoreFrom)) {\n      return nodeContains(ignoreFrom, element)\n    }\n\n    return false\n  }\n\n  /**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */\n  fire<E extends { type: string }>(iEvent: E) {\n    this.events.fire(iEvent)\n\n    return this\n  }\n\n  /** @internal */\n  _onOff(\n    method: OnOffMethod,\n    typeArg: EventTypes,\n    listenerArg?: ListenersArg | null,\n    options?: any,\n    filter?: (type: string) => boolean,\n  ) {\n    if (is.object(typeArg) && !is.array(typeArg)) {\n      options = listenerArg\n      listenerArg = null\n    }\n\n    const listeners = normalizeListeners(typeArg, listenerArg, filter)\n\n    for (let type in listeners) {\n      if (type === 'wheel') {\n        type = browser.wheelEvent\n      }\n\n      for (const listener of listeners[type]) {\n        // if it is an action event type\n        if (isNonNativeEvent(type, this._actions)) {\n          this.events[method === OnOffMethod.On ? 'on' : 'off'](type, listener)\n        }\n        // delegated event\n        else if (is.string(this.target)) {\n          this._scopeEvents[method === OnOffMethod.On ? 'addDelegate' : 'removeDelegate'](\n            this.target,\n            this._context,\n            type,\n            listener,\n            options,\n          )\n        }\n        // remove listener from this Interactable's element\n        else {\n          this._scopeEvents[method === OnOffMethod.On ? 'add' : 'remove'](\n            this.target,\n            type,\n            listener,\n            options,\n          )\n        }\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */\n  on(types: EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff(OnOffMethod.On, types, listener, options)\n  }\n\n  /**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */\n  off(types: string | string[] | EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff(OnOffMethod.Off, types, listener, options)\n  }\n\n  /**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */\n  set(options: OptionsArg) {\n    const defaults = this._defaults\n\n    if (!is.object(options)) {\n      options = {}\n    }\n\n    ;(this.options as Required<Options>) = clone(defaults.base) as Required<Options>\n\n    for (const actionName_ in this._actions.methodDict) {\n      const actionName = actionName_ as ActionName\n      const methodName = this._actions.methodDict[actionName]\n\n      this.options[actionName] = {}\n      this.setPerAction(actionName, extend(extend({}, defaults.perAction), defaults.actions[actionName]))\n      ;(this[methodName] as ActionMethod<unknown>)(options[actionName])\n    }\n\n    for (const setting in options) {\n      if (setting === 'getRect') {\n        this.rectChecker(options.getRect)\n        continue\n      }\n\n      if (is.func((this as any)[setting])) {\n        ;(this as any)[setting](options[setting as keyof typeof options])\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   */\n  unset() {\n    if (is.string(this.target)) {\n      // remove delegated events\n      for (const type in this._scopeEvents.delegatedEvents) {\n        const delegated = this._scopeEvents.delegatedEvents[type]\n\n        for (let i = delegated.length - 1; i >= 0; i--) {\n          const { selector, context, listeners } = delegated[i]\n\n          if (selector === this.target && context === this._context) {\n            delegated.splice(i, 1)\n          }\n\n          for (let l = listeners.length - 1; l >= 0; l--) {\n            this._scopeEvents.removeDelegate(\n              this.target,\n              this._context,\n              type,\n              listeners[l][0],\n              listeners[l][1],\n            )\n          }\n        }\n      }\n    } else {\n      this._scopeEvents.remove(this.target, 'all')\n    }\n  }\n}\n","import * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { OptionsArg, Options } from '@interactjs/core/options'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { Target } from '@interactjs/core/types'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactable:new': {\n      interactable: Interactable\n      target: Target\n      options: OptionsArg\n      win: Window\n    }\n  }\n}\n\nexport class InteractableSet {\n  // all set interactables\n  list: Interactable[] = []\n\n  selectorMap: {\n    [selector: string]: Interactable[]\n  } = {}\n\n  scope: Scope\n\n  constructor(scope: Scope) {\n    this.scope = scope\n    scope.addListeners({\n      'interactable:unset': ({ interactable }) => {\n        const { target } = interactable\n        const interactablesOnTarget: Interactable[] = is.string(target)\n          ? this.selectorMap[target]\n          : (target as any)[this.scope.id]\n\n        const targetIndex = arr.findIndex(interactablesOnTarget, (i) => i === interactable)\n        interactablesOnTarget.splice(targetIndex, 1)\n      },\n    })\n  }\n\n  new(target: Target, options?: any): Interactable {\n    options = extend(options || {}, {\n      actions: this.scope.actions,\n    })\n    const interactable = new this.scope.Interactable(target, options, this.scope.document, this.scope.events)\n\n    this.scope.addDocument(interactable._doc)\n    this.list.push(interactable)\n\n    if (is.string(target)) {\n      if (!this.selectorMap[target]) {\n        this.selectorMap[target] = []\n      }\n      this.selectorMap[target].push(interactable)\n    } else {\n      if (!(interactable.target as any)[this.scope.id]) {\n        Object.defineProperty(target, this.scope.id, {\n          value: [],\n          configurable: true,\n        })\n      }\n\n      ;(target as any)[this.scope.id].push(interactable)\n    }\n\n    this.scope.fire('interactable:new', {\n      target,\n      options,\n      interactable,\n      win: this.scope._win,\n    })\n\n    return interactable\n  }\n\n  getExisting(target: Target, options?: Options) {\n    const context = (options && options.context) || this.scope.document\n    const isSelector = is.string(target)\n    const interactablesOnTarget: Interactable[] = isSelector\n      ? this.selectorMap[target as string]\n      : (target as any)[this.scope.id]\n\n    if (!interactablesOnTarget) return undefined\n\n    return arr.find(\n      interactablesOnTarget,\n      (interactable) =>\n        interactable._context === context && (isSelector || interactable.inContext(target as any)),\n    )\n  }\n\n  forEachMatch<T>(node: Node, callback: (interactable: Interactable) => T): T | void {\n    for (const interactable of this.list) {\n      let ret: T\n\n      if (\n        (is.string(interactable.target)\n          ? // target is a selector and the element matches\n            is.element(node) && domUtils.matchesSelector(node, interactable.target)\n          : // target is the element\n            node === interactable.target) &&\n        // the element is in context\n        interactable.inContext(node)\n      ) {\n        ret = callback(interactable)\n      }\n\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  }\n}\n","import browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport domObjects from '@interactjs/utils/domObjects'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport * as win from '@interactjs/utils/window'\n\nimport type Interaction from '@interactjs/core/Interaction'\n\nimport { Eventable } from './Eventable'\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './events'\nimport './interactions'\nimport events from './events'\nimport { Interactable as InteractableBase } from './Interactable'\nimport { InteractableSet } from './InteractableSet'\nimport { InteractEvent } from './InteractEvent'\nimport interactions from './interactions'\n/* eslint-enable import/no-duplicates */\nimport { createInteractStatic } from './InteractStatic'\nimport type { OptionsArg } from './options'\nimport { defaults } from './options'\nimport type { Actions } from './types'\n\nexport interface SignalArgs {\n  'scope:add-document': DocSignalArg\n  'scope:remove-document': DocSignalArg\n  'interactable:unset': { interactable: InteractableBase }\n  'interactable:set': { interactable: InteractableBase; options: OptionsArg }\n  'interactions:destroy': { interaction: Interaction }\n}\n\nexport type ListenerName = keyof SignalArgs\n\nexport type ListenerMap = {\n  [P in ListenerName]?: (arg: SignalArgs[P], scope: Scope, signalName: P) => void | boolean\n}\n\ninterface DocSignalArg {\n  doc: Document\n  window: Window\n  scope: Scope\n  options: Record<string, any>\n}\n\n/** @internal */\nexport interface Plugin {\n  [key: string]: any\n  id?: string\n  listeners?: ListenerMap\n  before?: string[]\n  install?(scope: Scope, options?: any): void\n}\n\n/** @internal */\nexport class Scope {\n  id = `__interact_scope_${Math.floor(Math.random() * 100)}`\n  isInitialized = false\n  listenerMaps: Array<{\n    map: ListenerMap\n    id?: string\n  }> = []\n\n  browser = browser\n  defaults = clone(defaults) as typeof defaults\n  Eventable = Eventable\n  actions: Actions = {\n    map: {},\n    phases: {\n      start: true,\n      move: true,\n      end: true,\n    },\n    methodDict: {} as any,\n    phaselessTypes: {},\n  }\n\n  interactStatic = createInteractStatic(this)\n  InteractEvent = InteractEvent\n  Interactable: typeof InteractableBase\n  interactables = new InteractableSet(this)\n\n  // main window\n  _win!: Window\n\n  // main document\n  document!: Document\n\n  // main window\n  window!: Window\n\n  // all documents being listened to\n  documents: Array<{ doc: Document; options: any }> = []\n\n  _plugins: {\n    list: Plugin[]\n    map: { [id: string]: Plugin }\n  } = {\n    list: [],\n    map: {},\n  }\n\n  constructor() {\n    const scope = this\n\n    this.Interactable = class extends InteractableBase {\n      get _defaults() {\n        return scope.defaults\n      }\n\n      set<T extends InteractableBase>(this: T, options: OptionsArg) {\n        super.set(options)\n\n        scope.fire('interactable:set', {\n          options,\n          interactable: this,\n        })\n\n        return this\n      }\n\n      unset(this: InteractableBase) {\n        super.unset()\n\n        const index = scope.interactables.list.indexOf(this)\n        if (index < 0) return\n\n        scope.interactables.list.splice(index, 1)\n        scope.fire('interactable:unset', { interactable: this })\n      }\n    }\n  }\n\n  addListeners(map: ListenerMap, id?: string) {\n    this.listenerMaps.push({ id, map })\n  }\n\n  fire<T extends ListenerName>(name: T, arg: SignalArgs[T]): void | false {\n    for (const {\n      map: { [name]: listener },\n    } of this.listenerMaps) {\n      if (!!listener && listener(arg as any, this, name as never) === false) {\n        return false\n      }\n    }\n  }\n\n  onWindowUnload = (event: BeforeUnloadEvent) => this.removeDocument(event.target as Document)\n\n  init(window: Window | typeof globalThis) {\n    return this.isInitialized ? this : initScope(this, window)\n  }\n\n  pluginIsInstalled(plugin: Plugin) {\n    const { id } = plugin\n    return id ? !!this._plugins.map[id] : this._plugins.list.indexOf(plugin) !== -1\n  }\n\n  usePlugin(plugin: Plugin, options?: { [key: string]: any }) {\n    if (!this.isInitialized) {\n      return this\n    }\n\n    if (this.pluginIsInstalled(plugin)) {\n      return this\n    }\n\n    if (plugin.id) {\n      this._plugins.map[plugin.id] = plugin\n    }\n    this._plugins.list.push(plugin)\n\n    if (plugin.install) {\n      plugin.install(this, options)\n    }\n\n    if (plugin.listeners && plugin.before) {\n      let index = 0\n      const len = this.listenerMaps.length\n      const before = plugin.before.reduce((acc, id) => {\n        acc[id] = true\n        acc[pluginIdRoot(id)] = true\n        return acc\n      }, {})\n\n      for (; index < len; index++) {\n        const otherId = this.listenerMaps[index].id\n\n        if (otherId && (before[otherId] || before[pluginIdRoot(otherId)])) {\n          break\n        }\n      }\n\n      this.listenerMaps.splice(index, 0, { id: plugin.id, map: plugin.listeners })\n    } else if (plugin.listeners) {\n      this.listenerMaps.push({ id: plugin.id, map: plugin.listeners })\n    }\n\n    return this\n  }\n\n  addDocument(doc: Document, options?: any): void | false {\n    // do nothing if document is already known\n    if (this.getDocIndex(doc) !== -1) {\n      return false\n    }\n\n    const window = win.getWindow(doc)\n\n    options = options ? extend({}, options) : {}\n\n    this.documents.push({ doc, options })\n    this.events.documents.push(doc)\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== this.document) {\n      this.events.add(window, 'unload', this.onWindowUnload)\n    }\n\n    this.fire('scope:add-document', { doc, window, scope: this, options })\n  }\n\n  removeDocument(doc: Document) {\n    const index = this.getDocIndex(doc)\n\n    const window = win.getWindow(doc)\n    const options = this.documents[index].options\n\n    this.events.remove(window, 'unload', this.onWindowUnload)\n\n    this.documents.splice(index, 1)\n    this.events.documents.splice(index, 1)\n\n    this.fire('scope:remove-document', { doc, window, scope: this, options })\n  }\n\n  getDocIndex(doc: Document) {\n    for (let i = 0; i < this.documents.length; i++) {\n      if (this.documents[i].doc === doc) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getDocOptions(doc: Document) {\n    const docIndex = this.getDocIndex(doc)\n\n    return docIndex === -1 ? null : this.documents[docIndex].options\n  }\n\n  now() {\n    return (((this.window as any).Date as typeof Date) || Date).now()\n  }\n}\n\n/** @internal */\nexport function initScope(scope: Scope, window: Window | typeof globalThis) {\n  scope.isInitialized = true\n\n  if (is.window(window)) {\n    win.init(window)\n  }\n\n  domObjects.init(window)\n  browser.init(window)\n  raf.init(window)\n\n  // @ts-expect-error\n  scope.window = window\n  scope.document = window.document\n\n  scope.usePlugin(interactions)\n  scope.usePlugin(events)\n\n  return scope\n}\n\nfunction pluginIdRoot(id: string) {\n  return id && id.replace(/\\/.*$/, '')\n}\n","import { Scope } from '@interactjs/core/scope'\n\nconst scope = new Scope()\n\nconst interact = scope.interactStatic\n\nexport default interact\n\nconst _global = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : this\nscope.init(_global)\n","import browser from '@interactjs/utils/browser'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport isNonNativeEvent from '@interactjs/utils/isNonNativeEvent'\nimport { warnOnce } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Context, EventTypes, Listener, ListenersArg, Target } from '@interactjs/core/types'\n\nimport type { Interactable } from './Interactable'\nimport type { Options } from './options'\n\n/**\n * ```js\n * interact('#draggable').draggable(true)\n *\n * var rectables = interact('rect')\n * rectables\n *   .gesturable(true)\n *   .on('gesturemove', function (event) {\n *       // ...\n *   })\n * ```\n *\n * The methods of this variable can be used to set elements as interactables\n * and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to configure\n * it.\n *\n * @param {Element | string} target The HTML or SVG Element to interact with\n * or CSS selector\n * @return {Interactable}\n */\nexport interface InteractStatic {\n  (target: Target, options?: Options): Interactable\n  getPointerAverage: typeof pointerUtils.pointerAverage\n  getTouchBBox: typeof pointerUtils.touchBBox\n  getTouchDistance: typeof pointerUtils.touchDistance\n  getTouchAngle: typeof pointerUtils.touchAngle\n  getElementRect: typeof domUtils.getElementRect\n  getElementClientRect: typeof domUtils.getElementClientRect\n  matchesSelector: typeof domUtils.matchesSelector\n  closest: typeof domUtils.closest\n  /** @internal */ globalEvents: any\n  version: string\n  /** @internal */ scope: Scope\n  /**\n   * Use a plugin\n   */\n  use(\n    plugin: Plugin,\n    options?: {\n      [key: string]: any\n    },\n  ): any\n  /**\n   * Check if an element or selector has been set with the `interact(target)`\n   * function\n   *\n   * @return {boolean} Indicates if the element or CSS selector was previously\n   * passed to interact\n   */\n  isSet(\n    /* The Element or string being searched for */\n    target: Target,\n    options?: any,\n  ): boolean\n  on(type: string | EventTypes, listener: ListenersArg, options?: object): any\n  off(type: EventTypes, listener: any, options?: object): any\n  debug(): any\n  /**\n   * Whether or not the browser supports touch input\n   */\n  supportsTouch(): boolean\n  /**\n   * Whether or not the browser supports PointerEvents\n   */\n  supportsPointerEvent(): boolean\n  /**\n   * Cancels all interactions (end events are not fired)\n   */\n  stop(): InteractStatic\n  /**\n   * Returns or sets the distance the pointer must be moved before an action\n   * sequence occurs. This also affects tolerance for tap events.\n   */\n  pointerMoveTolerance(\n    /** The movement from the start position must be greater than this value */\n    newValue?: number,\n  ): InteractStatic | number\n  addDocument(doc: Document, options?: object): void\n  removeDocument(doc: Document): void\n}\n\nexport function createInteractStatic(scope: Scope): InteractStatic {\n  const interact = ((target: Target, options: Options) => {\n    let interactable = scope.interactables.getExisting(target, options)\n\n    if (!interactable) {\n      interactable = scope.interactables.new(target, options)\n      interactable.events.global = interact.globalEvents\n    }\n\n    return interactable\n  }) as InteractStatic\n\n  // expose the functions used to calculate multi-touch properties\n  interact.getPointerAverage = pointerUtils.pointerAverage\n  interact.getTouchBBox = pointerUtils.touchBBox\n  interact.getTouchDistance = pointerUtils.touchDistance\n  interact.getTouchAngle = pointerUtils.touchAngle\n\n  interact.getElementRect = domUtils.getElementRect\n  interact.getElementClientRect = domUtils.getElementClientRect\n  interact.matchesSelector = domUtils.matchesSelector\n  interact.closest = domUtils.closest\n\n  interact.globalEvents = {} as any\n\n  // eslint-disable-next-line no-undef\n  interact.version = process.env.npm_package_version\n  interact.scope = scope\n  interact.use = function (plugin, options) {\n    this.scope.usePlugin(plugin, options)\n\n    return this\n  }\n\n  interact.isSet = function (target: Target, options?: { context?: Context }): boolean {\n    return !!this.scope.interactables.get(target, options && options.context)\n  }\n\n  interact.on = warnOnce(function on(type: string | EventTypes, listener: ListenersArg, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type as any[]) {\n        this.on(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.on(prop, (type as any)[prop], listener)\n      }\n\n      return this\n    }\n\n    // if it is an InteractEvent type, add listener to globalEvents\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      // if this type of event was never bound\n      if (!this.globalEvents[type]) {\n        this.globalEvents[type] = [listener]\n      } else {\n        this.globalEvents[type].push(listener)\n      }\n    }\n    // If non InteractEvent type, addEventListener to document\n    else {\n      this.scope.events.add(this.scope.document, type, listener as Listener, { options })\n    }\n\n    return this\n  }, 'The interact.on() method is being deprecated')\n\n  interact.off = warnOnce(function off(type: EventTypes, listener: any, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type) {\n        this.off(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.off(prop, type[prop], listener)\n      }\n\n      return this\n    }\n\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      let index: number\n\n      if (type in this.globalEvents && (index = this.globalEvents[type].indexOf(listener)) !== -1) {\n        this.globalEvents[type].splice(index, 1)\n      }\n    } else {\n      this.scope.events.remove(this.scope.document, type, listener, options)\n    }\n\n    return this\n  }, 'The interact.off() method is being deprecated')\n\n  interact.debug = function () {\n    return this.scope\n  }\n\n  interact.supportsTouch = function () {\n    return browser.supportsTouch\n  }\n\n  interact.supportsPointerEvent = function () {\n    return browser.supportsPointerEvent\n  }\n\n  interact.stop = function () {\n    for (const interaction of this.scope.interactions.list) {\n      interaction.stop()\n    }\n\n    return this\n  }\n\n  interact.pointerMoveTolerance = function (newValue?: number) {\n    if (is.number(newValue)) {\n      this.scope.interactions.pointerMoveTolerance = newValue\n\n      return this\n    }\n\n    return this.scope.interactions.pointerMoveTolerance\n  }\n\n  interact.addDocument = function (doc: Document, options?: object) {\n    this.scope.addDocument(doc, options)\n  }\n\n  interact.removeDocument = function (doc: Document) {\n    this.scope.removeDocument(doc)\n  }\n\n  return interact\n}\n","export default () => {}\n","export default () => {}\n","import type { Rect, Point } from '@interactjs/core/types'\nimport type { SnapFunction, SnapTarget } from '@interactjs/modifiers/snap/pointer'\n\nexport interface GridOptionsBase {\n  range?: number\n  limits?: Rect\n  offset?: Point\n}\nexport interface GridOptionsXY extends GridOptionsBase {\n  x: number\n  y: number\n}\nexport interface GridOptionsTopLeft extends GridOptionsBase {\n  top?: number\n  left?: number\n}\nexport interface GridOptionsBottomRight extends GridOptionsBase {\n  bottom?: number\n  right?: number\n}\nexport interface GridOptionsWidthHeight extends GridOptionsBase {\n  width?: number\n  height?: number\n}\n\nexport type GridOptions = GridOptionsXY | GridOptionsTopLeft | GridOptionsBottomRight | GridOptionsWidthHeight\n\nexport default (grid: GridOptions) => {\n  const coordFields = (\n    [\n      ['x', 'y'],\n      ['left', 'top'],\n      ['right', 'bottom'],\n      ['width', 'height'],\n    ] as const\n  ).filter(([xField, yField]) => xField in grid || yField in grid)\n\n  const gridFunc: SnapFunction & {\n    grid: typeof grid\n    coordFields: typeof coordFields\n  } = (x, y) => {\n    const {\n      range,\n      limits = {\n        left: -Infinity,\n        right: Infinity,\n        top: -Infinity,\n        bottom: Infinity,\n      },\n      offset = { x: 0, y: 0 },\n    } = grid\n\n    const result: SnapTarget & {\n      grid: typeof grid\n    } = { range, grid, x: null as number, y: null as number }\n\n    for (const [xField, yField] of coordFields) {\n      const gridx = Math.round((x - offset.x) / (grid as any)[xField])\n      const gridy = Math.round((y - offset.y) / (grid as any)[yField])\n\n      result[xField] = Math.max(limits.left, Math.min(limits.right, gridx * (grid as any)[xField] + offset.x))\n      result[yField] = Math.max(limits.top, Math.min(limits.bottom, gridy * (grid as any)[yField] + offset.y))\n    }\n\n    return result\n  }\n\n  gridFunc.grid = grid\n  gridFunc.coordFields = coordFields\n\n  return gridFunc\n}\n","import type { Plugin } from '@interactjs/core/scope'\nimport extend from '@interactjs/utils/extend'\n\nimport * as allSnappers from './all'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    snappers: typeof allSnappers\n    createSnapGrid: typeof allSnappers.grid\n  }\n}\n\nconst snappersPlugin: Plugin = {\n  id: 'snappers',\n  install(scope) {\n    const { interactStatic: interact } = scope\n\n    interact.snappers = extend(interact.snappers || {}, allSnappers)\n    interact.createSnapGrid = interact.snappers.grid\n  },\n}\n\nexport default snappersPlugin\n","/**\n * @module modifiers/aspectRatio\n *\n * @description\n * This modifier forces elements to be resized with a specified dx/dy ratio.\n *\n * ```js\n * interact(target).resizable({\n *   modifiers: [\n *     interact.modifiers.snapSize({\n *       targets: [ interact.snappers.grid({ x: 20, y: 20 }) ],\n *     }),\n *     interact.aspectRatio({ ratio: 'preserve' }),\n *   ],\n * });\n * ```\n */\n\nimport type { Point, Rect, EdgeOptions } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport { addEdges } from '@interactjs/utils/rect'\n\nimport { makeModifier } from './base'\nimport { Modification } from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\nexport interface AspectRatioOptions {\n  ratio?: number | 'preserve'\n  equalDelta?: boolean\n  modifiers?: Modifier[]\n  enabled?: boolean\n}\n\nexport type AspectRatioState = ModifierState<\n  AspectRatioOptions,\n  {\n    startCoords: Point\n    startRect: Rect\n    linkedEdges: EdgeOptions\n    ratio: number\n    equalDelta: boolean\n    xIsPrimaryAxis: boolean\n    edgeSign: {\n      x: number\n      y: number\n    }\n    subModification: Modification\n  }\n>\n\nconst aspectRatio: ModifierModule<AspectRatioOptions, AspectRatioState> = {\n  start(arg) {\n    const { state, rect, edges, pageCoords: coords } = arg\n    let { ratio, enabled } = state.options\n    const { equalDelta, modifiers } = state.options\n\n    if (ratio === 'preserve') {\n      ratio = rect.width / rect.height\n    }\n\n    state.startCoords = extend({}, coords)\n    state.startRect = extend({}, rect)\n    state.ratio = ratio\n    state.equalDelta = equalDelta\n\n    const linkedEdges = (state.linkedEdges = {\n      top: edges.top || (edges.left && !edges.bottom),\n      left: edges.left || (edges.top && !edges.right),\n      bottom: edges.bottom || (edges.right && !edges.top),\n      right: edges.right || (edges.bottom && !edges.left),\n    })\n\n    state.xIsPrimaryAxis = !!(edges.left || edges.right)\n\n    if (state.equalDelta) {\n      const sign = (linkedEdges.left ? 1 : -1) * (linkedEdges.top ? 1 : -1)\n      state.edgeSign = {\n        x: sign,\n        y: sign,\n      }\n    } else {\n      state.edgeSign = {\n        x: linkedEdges.left ? -1 : 1,\n        y: linkedEdges.top ? -1 : 1,\n      }\n    }\n\n    if (enabled !== false) {\n      extend(edges, linkedEdges)\n    }\n\n    if (!modifiers?.length) return\n\n    const subModification = new Modification(arg.interaction)\n\n    subModification.copyFrom(arg.interaction.modification)\n    subModification.prepareStates(modifiers)\n\n    state.subModification = subModification\n    subModification.startAll({ ...arg })\n  },\n\n  set(arg) {\n    const { state, rect, coords } = arg\n    const { linkedEdges } = state\n    const initialCoords = extend({}, coords)\n    const aspectMethod = state.equalDelta ? setEqualDelta : setRatio\n\n    extend(arg.edges, linkedEdges)\n    aspectMethod(state, state.xIsPrimaryAxis, coords, rect)\n\n    if (!state.subModification) {\n      return null\n    }\n\n    const correctedRect = extend({}, rect)\n\n    addEdges(linkedEdges, correctedRect, {\n      x: coords.x - initialCoords.x,\n      y: coords.y - initialCoords.y,\n    })\n\n    const result = state.subModification.setAll({\n      ...arg,\n      rect: correctedRect,\n      edges: linkedEdges,\n      pageCoords: coords,\n      prevCoords: coords,\n      prevRect: correctedRect,\n    })\n\n    const { delta } = result\n\n    if (result.changed) {\n      const xIsCriticalAxis = Math.abs(delta.x) > Math.abs(delta.y)\n\n      // do aspect modification again with critical edge axis as primary\n      aspectMethod(state, xIsCriticalAxis, result.coords, result.rect)\n      extend(coords, result.coords)\n    }\n\n    return result.eventProps\n  },\n\n  defaults: {\n    ratio: 'preserve',\n    equalDelta: false,\n    modifiers: [],\n    enabled: false,\n  },\n}\n\nfunction setEqualDelta({ startCoords, edgeSign }: AspectRatioState, xIsPrimaryAxis: boolean, coords: Point) {\n  if (xIsPrimaryAxis) {\n    coords.y = startCoords.y + (coords.x - startCoords.x) * edgeSign.y\n  } else {\n    coords.x = startCoords.x + (coords.y - startCoords.y) * edgeSign.x\n  }\n}\n\nfunction setRatio(\n  { startRect, startCoords, ratio, edgeSign }: AspectRatioState,\n  xIsPrimaryAxis: boolean,\n  coords: Point,\n  rect: Rect,\n) {\n  if (xIsPrimaryAxis) {\n    const newHeight = rect.width / ratio\n\n    coords.y = startCoords.y + (newHeight - startRect.height) * edgeSign.y\n  } else {\n    const newWidth = rect.height * ratio\n\n    coords.x = startCoords.x + (newWidth - startRect.width) * edgeSign.x\n  }\n}\n\nexport default makeModifier(aspectRatio, 'aspectRatio')\nexport { aspectRatio }\n","import type { ModifierFunction } from './types'\n\nconst noop = (() => {}) as unknown as ModifierFunction<any, any, 'noop'>\n\nnoop._defaults = {}\n\nexport default noop\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { RectResolvable, Rect, Point } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierModule, ModifierState } from '../types'\n\nexport interface RestrictOptions {\n  // where to drag over\n  restriction: RectResolvable<[number, number, Interaction]>\n  // what part of self is allowed to drag over\n  elementRect: Rect\n  offset: Rect\n  // restrict just before the end drag\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictState = ModifierState<\n  RestrictOptions,\n  {\n    offset: Rect\n  }\n>\n\nfunction start({ rect, startOffset, state, interaction, pageCoords }: ModifierArg<RestrictState>) {\n  const { options } = state\n  const { elementRect } = options\n  const offset: Rect = extend(\n    {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    },\n    options.offset || {},\n  )\n\n  if (rect && elementRect) {\n    const restriction = getRestrictionRect(options.restriction, interaction, pageCoords)\n\n    if (restriction) {\n      const widthDiff = restriction.right - restriction.left - rect.width\n      const heightDiff = restriction.bottom - restriction.top - rect.height\n\n      if (widthDiff < 0) {\n        offset.left += widthDiff\n        offset.right += widthDiff\n      }\n      if (heightDiff < 0) {\n        offset.top += heightDiff\n        offset.bottom += heightDiff\n      }\n    }\n\n    offset.left += startOffset.left - rect.width * elementRect.left\n    offset.top += startOffset.top - rect.height * elementRect.top\n\n    offset.right += startOffset.right - rect.width * (1 - elementRect.right)\n    offset.bottom += startOffset.bottom - rect.height * (1 - elementRect.bottom)\n  }\n\n  state.offset = offset\n}\n\nfunction set({ coords, interaction, state }: ModifierArg<RestrictState>) {\n  const { options, offset } = state\n\n  const restriction = getRestrictionRect(options.restriction, interaction, coords)\n\n  if (!restriction) return\n\n  const rect = rectUtils.xywhToTlbr(restriction)\n\n  coords.x = Math.max(Math.min(rect.right - offset.right, coords.x), rect.left + offset.left)\n  coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top + offset.top)\n}\n\nexport function getRestrictionRect(\n  value: RectResolvable<[number, number, Interaction]>,\n  interaction: Interaction,\n  coords?: Point,\n) {\n  if (is.func(value)) {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element, [\n      coords.x,\n      coords.y,\n      interaction,\n    ])\n  } else {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element)\n  }\n}\n\nconst defaults: RestrictOptions = {\n  restriction: null,\n  elementRect: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrict: ModifierModule<RestrictOptions, RestrictState> = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrict, 'restrict')\nexport { restrict }\n","// This modifier adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// })\n\nimport type { Point, Rect } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nexport interface RestrictEdgesOptions {\n  inner: RestrictOptions['restriction']\n  outer: RestrictOptions['restriction']\n  offset?: RestrictOptions['offset']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictEdgesState = ModifierState<\n  RestrictEdgesOptions,\n  {\n    inner: Rect\n    outer: Rect\n    offset: RestrictEdgesOptions['offset']\n  }\n>\n\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity }\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity }\n\nfunction start({ interaction, startOffset, state }: ModifierArg<RestrictEdgesState>) {\n  const { options } = state\n  let offset: Point\n\n  if (options) {\n    const offsetRect = getRestrictionRect(options.offset, interaction, interaction.coords.start.page)\n\n    offset = rectUtils.rectToXY(offsetRect)\n  }\n\n  offset = offset || { x: 0, y: 0 }\n\n  state.offset = {\n    top: offset.y + startOffset.top,\n    left: offset.x + startOffset.left,\n    bottom: offset.y - startOffset.bottom,\n    right: offset.x - startOffset.right,\n  }\n}\n\nfunction set({ coords, edges, interaction, state }: ModifierArg<RestrictEdgesState>) {\n  const { offset, options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const page = extend({}, coords)\n  const inner = getRestrictionRect(options.inner, interaction, page) || ({} as Rect)\n  const outer = getRestrictionRect(options.outer, interaction, page) || ({} as Rect)\n\n  fixRect(inner, noInner)\n  fixRect(outer, noOuter)\n\n  if (edges.top) {\n    coords.y = Math.min(Math.max(outer.top + offset.top, page.y), inner.top + offset.top)\n  } else if (edges.bottom) {\n    coords.y = Math.max(Math.min(outer.bottom + offset.bottom, page.y), inner.bottom + offset.bottom)\n  }\n  if (edges.left) {\n    coords.x = Math.min(Math.max(outer.left + offset.left, page.x), inner.left + offset.left)\n  } else if (edges.right) {\n    coords.x = Math.max(Math.min(outer.right + offset.right, page.x), inner.right + offset.right)\n  }\n}\n\nfunction fixRect(rect: Rect, defaults: Rect) {\n  for (const edge of ['top', 'left', 'bottom', 'right']) {\n    if (!(edge in rect)) {\n      rect[edge] = defaults[edge]\n    }\n  }\n\n  return rect\n}\n\nconst defaults: RestrictEdgesOptions = {\n  inner: null,\n  outer: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictEdges = {\n  noInner,\n  noOuter,\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictEdges, 'restrictEdges')\nexport { restrictEdges }\n","import extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\n\nimport { restrict } from './pointer'\n\nconst defaults = extend(\n  {\n    get elementRect() {\n      return { top: 0, left: 0, bottom: 1, right: 1 }\n    },\n    set elementRect(_) {},\n  },\n  restrict.defaults,\n)\n\nconst restrictRect = {\n  start: restrict.start,\n  set: restrict.set,\n  defaults,\n}\n\nexport default makeModifier(restrictRect, 'restrictRect')\nexport { restrictRect }\n","import type { Point, Rect, Size } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictEdgesState } from './edges'\nimport { restrictEdges } from './edges'\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nconst noMin = { width: -Infinity, height: -Infinity }\nconst noMax = { width: +Infinity, height: +Infinity }\n\nexport interface RestrictSizeOptions {\n  min?: Size | Point | RestrictOptions['restriction']\n  max?: Size | Point | RestrictOptions['restriction']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nfunction start(arg: ModifierArg<RestrictEdgesState>) {\n  return restrictEdges.start(arg)\n}\n\nexport type RestrictSizeState = RestrictEdgesState &\n  ModifierState<\n    RestrictSizeOptions & { inner: Rect; outer: Rect },\n    {\n      min: Rect\n      max: Rect\n    }\n  >\n\nfunction set(arg: ModifierArg<RestrictSizeState>) {\n  const { interaction, state, rect, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const minSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.min as any, interaction, arg.coords)) || noMin\n  const maxSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.max as any, interaction, arg.coords)) || noMax\n\n  state.options = {\n    endOnly: options.endOnly,\n    inner: extend({}, restrictEdges.noInner),\n    outer: extend({}, restrictEdges.noOuter),\n  }\n\n  if (edges.top) {\n    state.options.inner.top = rect.bottom - minSize.height\n    state.options.outer.top = rect.bottom - maxSize.height\n  } else if (edges.bottom) {\n    state.options.inner.bottom = rect.top + minSize.height\n    state.options.outer.bottom = rect.top + maxSize.height\n  }\n  if (edges.left) {\n    state.options.inner.left = rect.right - minSize.width\n    state.options.outer.left = rect.right - maxSize.width\n  } else if (edges.right) {\n    state.options.inner.right = rect.left + minSize.width\n    state.options.outer.right = rect.left + maxSize.width\n  }\n\n  restrictEdges.set(arg)\n\n  state.options = options\n}\n\nconst defaults: RestrictSizeOptions = {\n  min: null,\n  max: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictSize, 'restrictSize')\nexport { restrictSize }\n","import type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName, Point, RectResolvable, Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { resolveRectLike, rectToXY } from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nexport interface Offset {\n  x: number\n  y: number\n  index: number\n  relativePoint?: Point | null\n}\n\nexport interface SnapPosition {\n  x?: number\n  y?: number\n  range?: number\n  offset?: Offset\n  [index: string]: any\n}\n\nexport type SnapFunction = (\n  x: number,\n  y: number,\n  interaction: InteractionProxy<ActionName>,\n  offset: Offset,\n  index: number,\n) => SnapPosition\nexport type SnapTarget = SnapPosition | SnapFunction\nexport interface SnapOptions {\n  targets?: SnapTarget[]\n  // target range\n  range?: number\n  // self points for snapping. [0,0] = top left, [1,1] = bottom right\n  relativePoints?: Point[]\n  // startCoords = offset snapping from drag start page position\n  offset?: Point | RectResolvable<[Interaction]> | 'startCoords'\n  offsetWithOrigin?: boolean\n  origin?: RectResolvable<[Element]> | Point\n  endOnly?: boolean\n  enabled?: boolean\n}\n\nexport type SnapState = ModifierState<\n  SnapOptions,\n  {\n    offsets?: Offset[]\n    closest?: any\n    targetFields?: string[][]\n  }\n>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { interaction, interactable, element, rect, state, startOffset } = arg\n  const { options } = state\n  const origin = options.offsetWithOrigin ? getOrigin(arg) : { x: 0, y: 0 }\n\n  let snapOffset: Point\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x,\n      y: interaction.coords.start.page.y,\n    }\n  } else {\n    const offsetRect = resolveRectLike(options.offset as any, interactable, element, [interaction])\n\n    snapOffset = rectToXY(offsetRect) || { x: 0, y: 0 }\n    snapOffset.x += origin.x\n    snapOffset.y += origin.y\n  }\n\n  const { relativePoints } = options\n\n  state.offsets =\n    rect && relativePoints && relativePoints.length\n      ? relativePoints.map((relativePoint, index) => ({\n          index,\n          relativePoint,\n          x: startOffset.left - rect.width * relativePoint.x + snapOffset.x,\n          y: startOffset.top - rect.height * relativePoint.y + snapOffset.y,\n        }))\n      : [\n          {\n            index: 0,\n            relativePoint: null,\n            x: snapOffset.x,\n            y: snapOffset.y,\n          },\n        ]\n}\n\nfunction set(arg: ModifierArg<SnapState>) {\n  const { interaction, coords, state } = arg\n  const { options, offsets } = state\n\n  const origin = getOriginXY(interaction.interactable!, interaction.element!, interaction.prepared.name)\n  const page = extend({}, coords)\n  const targets: SnapPosition[] = []\n\n  if (!options.offsetWithOrigin) {\n    page.x -= origin.x\n    page.y -= origin.y\n  }\n\n  for (const offset of offsets!) {\n    const relativeX = page.x - offset.x\n    const relativeY = page.y - offset.y\n\n    for (let index = 0, len = options.targets!.length; index < len; index++) {\n      const snapTarget = options.targets![index]\n      let target: SnapPosition\n\n      if (is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction._proxy, offset, index)\n      } else {\n        target = snapTarget\n      }\n\n      if (!target) {\n        continue\n      }\n\n      targets.push({\n        x: (is.number(target.x) ? target.x : relativeX) + offset.x,\n        y: (is.number(target.y) ? target.y : relativeY) + offset.y,\n\n        range: is.number(target.range) ? target.range : options.range,\n        source: snapTarget,\n        index,\n        offset,\n      })\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    delta: { x: 0, y: 0 },\n  }\n\n  for (const target of targets) {\n    const range = target.range\n    const dx = target.x - page.x\n    const dy = target.y - page.y\n    const distance = hypot(dx, dy)\n    let inRange = distance <= range\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false\n    }\n\n    if (\n      !closest.target ||\n      (inRange\n        ? // is the closest target in range?\n          closest.inRange && range !== Infinity\n          ? // the pointer is relatively deeper in this target\n            distance / range < closest.distance / closest.range\n          : // this target has Infinite range and the closest doesn't\n            (range === Infinity && closest.range !== Infinity) ||\n            // OR this target is closer that the previous closest\n            distance < closest.distance\n        : // The other is not in range and the pointer is closer to this target\n          !closest.inRange && distance < closest.distance)\n    ) {\n      closest.target = target\n      closest.distance = distance\n      closest.range = range\n      closest.inRange = inRange\n      closest.delta.x = dx\n      closest.delta.y = dy\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x\n    coords.y = closest.target.y\n  }\n\n  state.closest = closest\n  return closest\n}\n\nfunction getOrigin(arg: Partial<ModifierArg<SnapState>>) {\n  const { element } = arg.interaction\n  const optionsOrigin = rectToXY(resolveRectLike(arg.state.options.origin as any, null, null, [element]))\n  const origin = optionsOrigin || getOriginXY(arg.interactable, element, arg.interaction.prepared.name)\n\n  return origin\n}\n\nconst defaults: SnapOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  offsetWithOrigin: true,\n  origin: null,\n  relativePoints: null,\n  endOnly: false,\n  enabled: false,\n}\nconst snap = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snap, 'snap')\nexport { snap }\n","// This modifier allows snapping of the size of targets during resize\n// interactions.\n\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg } from '../types'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snap } from './pointer'\n\nexport type SnapSizeOptions = Pick<SnapOptions, 'targets' | 'offset' | 'endOnly' | 'range' | 'enabled'>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { state, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state = {\n    options: {\n      targets: null,\n      relativePoints: [\n        {\n          x: edges.left ? 0 : 1,\n          y: edges.top ? 0 : 1,\n        },\n      ],\n      offset: options.offset || 'self',\n      origin: { x: 0, y: 0 },\n      range: options.range,\n    },\n  }\n\n  state.targetFields = state.targetFields || [\n    ['width', 'height'],\n    ['x', 'y'],\n  ]\n\n  snap.start(arg)\n  state.offsets = arg.state.offsets\n\n  arg.state = state\n}\n\nfunction set(arg) {\n  const { interaction, state, coords } = arg\n  const { options, offsets } = state\n  const relative = {\n    x: coords.x - offsets[0].x,\n    y: coords.y - offsets[0].y,\n  }\n\n  state.options = extend({}, options)\n  state.options.targets = []\n\n  for (const snapTarget of options.targets || []) {\n    let target\n\n    if (is.func(snapTarget)) {\n      target = snapTarget(relative.x, relative.y, interaction)\n    } else {\n      target = snapTarget\n    }\n\n    if (!target) {\n      continue\n    }\n\n    for (const [xField, yField] of state.targetFields) {\n      if (xField in target || yField in target) {\n        target.x = target[xField]\n        target.y = target[yField]\n\n        break\n      }\n    }\n\n    state.options.targets.push(target)\n  }\n\n  const returnValue = snap.set(arg)\n\n  state.options = options\n\n  return returnValue\n}\n\nconst defaults: SnapSizeOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst snapSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snapSize, 'snapSize')\nexport { snapSize }\n","/**\n * @module modifiers/snapEdges\n *\n * @description\n * This modifier allows snapping of the edges of targets during resize\n * interactions.\n *\n * ```js\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * })\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * })\n * ```\n */\n\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierModule } from '../types'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snapSize } from './size'\n\nexport type SnapEdgesOptions = Pick<SnapOptions, 'targets' | 'range' | 'offset' | 'endOnly' | 'enabled'>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { edges } = arg\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state.targetFields = arg.state.targetFields || [\n    [edges.left ? 'left' : 'right', edges.top ? 'top' : 'bottom'],\n  ]\n\n  return snapSize.start(arg)\n}\n\nconst snapEdges: ModifierModule<SnapEdgesOptions, SnapState, ReturnType<typeof snapSize.set>> = {\n  start,\n  set: snapSize.set,\n  defaults: extend(clone(snapSize.defaults), {\n    targets: undefined,\n    range: undefined,\n    offset: { x: 0, y: 0 },\n  } as const),\n}\n\nexport default makeModifier(snapEdges, 'snapEdges')\nexport { snapEdges }\n","/* eslint-disable n/no-extraneous-import, import/no-unresolved */\nimport aspectRatio from './aspectRatio'\nimport avoid from './avoid/avoid'\nimport restrictEdges from './restrict/edges'\nimport restrict from './restrict/pointer'\nimport restrictRect from './restrict/rect'\nimport restrictSize from './restrict/size'\nimport rubberband from './rubberband/rubberband'\nimport snapEdges from './snap/edges'\nimport snap from './snap/pointer'\nimport snapSize from './snap/size'\nimport spring from './spring/spring'\nimport transform from './transform/transform'\n\nexport default {\n  aspectRatio,\n  restrictEdges,\n  restrict,\n  restrictRect,\n  restrictSize,\n  snapEdges,\n  snap,\n  snapSize,\n\n  spring,\n  avoid,\n  transform,\n  rubberband,\n}\n","import type { Plugin } from '@interactjs/core/scope'\nimport snappers from '@interactjs/snappers/plugin'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './all'\nimport './base'\n\nimport all from './all'\nimport base from './base'\n/* eslint-enable import/no-duplicates */\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    modifiers: typeof all\n  }\n}\n\nconst modifiers: Plugin = {\n  id: 'modifiers',\n  install(scope) {\n    const { interactStatic: interact } = scope\n\n    scope.usePlugin(base)\n    scope.usePlugin(snappers)\n\n    interact.modifiers = all\n\n    // for backwrads compatibility\n    for (const type in all) {\n      const { _defaults, _methods } = all[type as keyof typeof all]\n\n      ;(_defaults as any)._methods = _methods\n      ;(scope.defaults.perAction as any)[type] = _defaults\n    }\n  },\n}\n\nexport default modifiers\n","import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { PointerEventType, PointerType, Point } from '@interactjs/core/types'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nexport class PointerEvent<T extends string = any> extends BaseEvent<never> {\n  declare type: T\n  declare originalEvent: PointerEventType\n  declare pointerId: number\n  declare pointerType: string\n  declare double: boolean\n  declare pageX: number\n  declare pageY: number\n  declare clientX: number\n  declare clientY: number\n  declare dt: number\n  declare eventable: any;\n  [key: string]: any\n\n  constructor(\n    type: T,\n    pointer: PointerType | PointerEvent<any>,\n    event: PointerEventType,\n    eventTarget: Node,\n    interaction: Interaction<never>,\n    timeStamp: number,\n  ) {\n    super(interaction)\n    pointerUtils.pointerExtend(this, event)\n\n    if (event !== pointer) {\n      pointerUtils.pointerExtend(this, pointer)\n    }\n\n    this.timeStamp = timeStamp\n    this.originalEvent = event\n    this.type = type\n    this.pointerId = pointerUtils.getPointerId(pointer)\n    this.pointerType = pointerUtils.getPointerType(pointer)\n    this.target = eventTarget\n    this.currentTarget = null\n\n    if (type === 'tap') {\n      const pointerIndex = interaction.getPointerIndex(pointer)\n      this.dt = this.timeStamp - interaction.pointers[pointerIndex].downTime\n\n      const interval = this.timeStamp - interaction.tapTime\n\n      this.double =\n        !!interaction.prevTap &&\n        interaction.prevTap.type !== 'doubletap' &&\n        interaction.prevTap.target === this.target &&\n        interval < 500\n    } else if (type === 'doubletap') {\n      this.dt = (pointer as PointerEvent<'tap'>).timeStamp - interaction.tapTime\n      this.double = true\n    }\n  }\n\n  _subtractOrigin({ x: originX, y: originY }: Point) {\n    this.pageX -= originX\n    this.pageY -= originY\n    this.clientX -= originX\n    this.clientY -= originY\n\n    return this\n  }\n\n  _addOrigin({ x: originX, y: originY }: Point) {\n    this.pageX += originX\n    this.pageY += originY\n    this.clientX += originX\n    this.clientY += originY\n\n    return this\n  }\n\n  /**\n   * Prevent the default behaviour of the original Event\n   */\n  preventDefault() {\n    this.originalEvent.preventDefault()\n  }\n}\n","import type { Eventable } from '@interactjs/core/Eventable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { Point, PointerType, PointerEventType, Element } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\n\nimport { PointerEvent } from './PointerEvent'\n\nexport type EventTargetList = Array<{\n  node: Node\n  eventable: Eventable\n  props: { [key: string]: any }\n}>\n\nexport interface PointerEventOptions extends PerActionDefaults {\n  enabled?: undefined // not used\n  holdDuration?: number\n  ignoreFrom?: any\n  allowFrom?: any\n  origin?: Point | string | Element\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    pointerEvents: typeof pointerEvents\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    prevTap?: PointerEvent<string>\n    tapTime?: number\n  }\n}\n\ndeclare module '@interactjs/core/PointerInfo' {\n  interface PointerInfo {\n    hold?: {\n      duration: number\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    pointerEvents: Options\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'pointerEvents:new': { pointerEvent: PointerEvent<any> }\n    'pointerEvents:fired': {\n      interaction: Interaction<null>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      pointerEvent: PointerEvent<any>\n      targets?: EventTargetList\n      type: string\n    }\n    'pointerEvents:collect-targets': {\n      interaction: Interaction<any>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      targets?: EventTargetList\n      type: string\n      path: Node[]\n      node: null\n    }\n  }\n}\n\nconst defaults: PointerEventOptions = {\n  holdDuration: 600,\n  ignoreFrom: null,\n  allowFrom: null,\n  origin: { x: 0, y: 0 },\n}\n\nconst pointerEvents: Plugin = {\n  id: 'pointer-events/base',\n  before: ['inertia', 'modifiers', 'auto-start', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': addInteractionProps,\n    'interactions:update-pointer': addHoldInfo,\n    'interactions:move': moveAndClearHold,\n    'interactions:down': (arg, scope) => {\n      downAndStartHold(arg, scope)\n      fire(arg, scope)\n    },\n    'interactions:up': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n      tapAfterUp(arg, scope)\n    },\n    'interactions:cancel': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n    },\n  },\n  PointerEvent,\n  fire,\n  collectEventTargets,\n  defaults,\n  types: {\n    down: true,\n    move: true,\n    up: true,\n    cancel: true,\n    tap: true,\n    doubletap: true,\n    hold: true,\n  } as { [type: string]: true },\n}\n\nfunction fire<T extends string>(\n  arg: {\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    interaction: Interaction<never>\n    type: T\n    targets?: EventTargetList\n  },\n  scope: Scope,\n) {\n  const { interaction, pointer, event, eventTarget, type, targets = collectEventTargets(arg, scope) } = arg\n\n  const pointerEvent = new PointerEvent(type, pointer, event, eventTarget, interaction, scope.now())\n\n  scope.fire('pointerEvents:new', { pointerEvent })\n\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n    type,\n    pointerEvent,\n  }\n\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i]\n\n    for (const prop in target.props || {}) {\n      ;(pointerEvent as any)[prop] = target.props[prop]\n    }\n\n    const origin = getOriginXY(target.eventable, target.node)\n\n    pointerEvent._subtractOrigin(origin)\n    pointerEvent.eventable = target.eventable\n    pointerEvent.currentTarget = target.node\n\n    target.eventable.fire(pointerEvent)\n\n    pointerEvent._addOrigin(origin)\n\n    if (\n      pointerEvent.immediatePropagationStopped ||\n      (pointerEvent.propagationStopped &&\n        i + 1 < targets.length &&\n        targets[i + 1].node !== pointerEvent.currentTarget)\n    ) {\n      break\n    }\n  }\n\n  scope.fire('pointerEvents:fired', signalArg)\n\n  if (type === 'tap') {\n    // if pointerEvent should make a double tap, create and fire a doubletap\n    // PointerEvent and use that as the prevTap\n    const prevTap = pointerEvent.double\n      ? fire(\n          {\n            interaction,\n            pointer,\n            event,\n            eventTarget,\n            type: 'doubletap',\n          },\n          scope,\n        )\n      : pointerEvent\n\n    interaction.prevTap = prevTap\n    interaction.tapTime = prevTap.timeStamp\n  }\n\n  return pointerEvent\n}\n\nfunction collectEventTargets<T extends string>(\n  {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n  }: {\n    interaction: Interaction<any>\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    type: T\n  },\n  scope: Scope,\n) {\n  const pointerIndex = interaction.getPointerIndex(pointer)\n  const pointerInfo = interaction.pointers[pointerIndex]\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (\n    type === 'tap' &&\n    (interaction.pointerWasMoved ||\n      // or if the pointerup target is different to the pointerdown target\n      !(pointerInfo && pointerInfo.downTarget === eventTarget))\n  ) {\n    return []\n  }\n\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    path,\n    targets: [] as EventTargetList,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (type === 'hold') {\n    signalArg.targets = signalArg.targets.filter(\n      (target) =>\n        target.eventable.options.holdDuration === interaction.pointers[pointerIndex]?.hold?.duration,\n    )\n  }\n\n  return signalArg.targets\n}\n\nfunction addInteractionProps({ interaction }) {\n  interaction.prevTap = null // the most recent tap event on this interaction\n  interaction.tapTime = 0 // time of the most recent tap event\n}\n\nfunction addHoldInfo({ down, pointerInfo }: SignalArgs['interactions:update-pointer']) {\n  if (!down && pointerInfo.hold) {\n    return\n  }\n\n  pointerInfo.hold = { duration: Infinity, timeout: null }\n}\n\nfunction clearHold({ interaction, pointerIndex }) {\n  const hold = interaction.pointers[pointerIndex].hold\n\n  if (hold && hold.timeout) {\n    clearTimeout(hold.timeout)\n    hold.timeout = null\n  }\n}\n\nfunction moveAndClearHold(arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction, pointer, event, eventTarget, duplicate } = arg\n\n  if (!duplicate && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearHold(arg)\n    }\n\n    fire(\n      {\n        interaction,\n        pointer,\n        event,\n        eventTarget: eventTarget as Element,\n        type: 'move',\n      },\n      scope,\n    )\n  }\n}\n\nfunction downAndStartHold(\n  { interaction, pointer, event, eventTarget, pointerIndex }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  const timer = interaction.pointers[pointerIndex].hold!\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type: 'hold',\n    targets: [] as EventTargetList,\n    path,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (!signalArg.targets.length) return\n\n  let minDuration = Infinity\n\n  for (const target of signalArg.targets) {\n    const holdDuration = target.eventable.options.holdDuration\n\n    if (holdDuration < minDuration) {\n      minDuration = holdDuration\n    }\n  }\n\n  timer.duration = minDuration\n  timer.timeout = setTimeout(() => {\n    fire(\n      {\n        interaction,\n        eventTarget,\n        pointer,\n        event,\n        type: 'hold',\n      },\n      scope,\n    )\n  }, minDuration)\n}\n\nfunction tapAfterUp(\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:up'],\n  scope: Scope,\n) {\n  if (!interaction.pointerWasMoved) {\n    fire({ interaction, eventTarget, pointer, event, type: 'tap' }, scope)\n  }\n}\n\nfunction install(scope: Scope) {\n  scope.pointerEvents = pointerEvents\n  scope.defaults.actions.pointerEvents = pointerEvents.defaults\n  extend(scope.actions.phaselessTypes, pointerEvents.types)\n}\n\nexport default pointerEvents\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { ListenerMap, Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport basePlugin from './base'\n/* eslint-enable import/no-duplicates */\nimport { type PointerEvent } from './PointerEvent'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    holdIntervalHandle?: any\n  }\n}\n\ndeclare module '@interactjs/pointer-events/PointerEvent' {\n  interface PointerEvent<T extends string = any> {\n    count?: number\n  }\n}\n\ndeclare module '@interactjs/pointer-events/base' {\n  interface PointerEventOptions {\n    holdRepeatInterval?: number\n  }\n}\n\nfunction install(scope: Scope) {\n  scope.usePlugin(basePlugin)\n\n  const { pointerEvents } = scope\n\n  // don't repeat by default\n  pointerEvents.defaults.holdRepeatInterval = 0\n  pointerEvents.types.holdrepeat = scope.actions.phaselessTypes.holdrepeat = true\n}\n\nfunction onNew({ pointerEvent }: { pointerEvent: PointerEvent<any> }) {\n  if (pointerEvent.type !== 'hold') return\n\n  pointerEvent.count = (pointerEvent.count || 0) + 1\n}\n\nfunction onFired(\n  { interaction, pointerEvent, eventTarget, targets }: SignalArgs['pointerEvents:fired'],\n  scope: Scope,\n) {\n  if (pointerEvent.type !== 'hold' || !targets.length) return\n\n  // get the repeat interval from the first eventable\n  const interval = targets[0].eventable.options.holdRepeatInterval\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) return\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(() => {\n    scope.pointerEvents.fire(\n      {\n        interaction,\n        eventTarget,\n        type: 'hold',\n        pointer: pointerEvent,\n        event: pointerEvent,\n      },\n      scope,\n    )\n  }, interval)\n}\n\nfunction endHoldRepeat({ interaction }: { interaction: Interaction }) {\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle)\n    interaction.holdIntervalHandle = null\n  }\n}\n\nconst holdRepeat: Plugin = {\n  id: 'pointer-events/holdRepeat',\n  install,\n  listeners: ['move', 'up', 'cancel', 'endall'].reduce(\n    (acc, enderTypes) => {\n      ;(acc as any)[`pointerEvents:${enderTypes}`] = endHoldRepeat\n      return acc\n    },\n    {\n      'pointerEvents:new': onNew,\n      'pointerEvents:fired': onFired,\n    } as ListenerMap,\n  ),\n}\n\nexport default holdRepeat\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\n\nimport type { PointerEventOptions } from '@interactjs/pointer-events/base'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    pointerEvents(options: Partial<PointerEventOptions>): this\n    /** @internal */\n    __backCompatOption: (optionName: string, newValue: any) => any\n  }\n}\n\nfunction install(scope: Scope) {\n  const { Interactable } = scope\n\n  Interactable.prototype.pointerEvents = function (\n    this: Interactable,\n    options: Partial<PointerEventOptions>,\n  ) {\n    extend(this.events.options, options)\n\n    return this\n  }\n\n  const __backCompatOption = Interactable.prototype._backCompatOption\n\n  Interactable.prototype._backCompatOption = function (optionName, newValue) {\n    const ret = __backCompatOption.call(this, optionName, newValue)\n\n    if (ret === this) {\n      this.events.options[optionName] = newValue\n    }\n\n    return ret\n  }\n}\n\nconst plugin: Plugin = {\n  id: 'pointer-events/interactableTargets',\n  install,\n  listeners: {\n    'pointerEvents:collect-targets': ({ targets, node, type, eventTarget }, scope) => {\n      scope.interactables.forEachMatch(node, (interactable: Interactable) => {\n        const eventable = interactable.events\n        const options = eventable.options\n\n        if (\n          eventable.types[type] &&\n          eventable.types[type].length &&\n          interactable.testIgnoreAllow(options, node, eventTarget)\n        ) {\n          targets.push({\n            node,\n            eventable,\n            props: { interactable },\n          })\n        }\n      })\n    },\n\n    'interactable:new': ({ interactable }) => {\n      interactable.events.getRect = function (element: Element) {\n        return interactable.getRect(element)\n      }\n    },\n\n    'interactable:set': ({ interactable, options }, scope) => {\n      extend(interactable.events.options, scope.pointerEvents.defaults)\n      extend(interactable.events.options, options.pointerEvents || {})\n    },\n  },\n}\n\nexport default plugin\n","import type { Plugin } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport './holdRepeat'\nimport './interactableTargets'\n\nimport * as pointerEvents from './base'\nimport holdRepeat from './holdRepeat'\nimport interactableTargets from './interactableTargets'\n/* eslint-enable import/no-duplicates */\n\nconst plugin: Plugin = {\n  id: 'pointer-events',\n  install(scope) {\n    scope.usePlugin(pointerEvents)\n    scope.usePlugin(holdRepeat)\n    scope.usePlugin(interactableTargets)\n  },\n}\n\nexport default plugin\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { DoAnyPhaseArg, Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, ActionProps, Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport { copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport { tlbrToXywh } from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-reflow': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-reflow': DoAnyPhaseArg\n    'interactions:after-action-reflow': DoAnyPhaseArg\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    /**\n     * ```js\n     * const interactable = interact(target)\n     * const drag = { name: drag, axis: 'x' }\n     * const resize = { name: resize, edges: { left: true, bottom: true }\n     *\n     * interactable.reflow(drag)\n     * interactable.reflow(resize)\n     * ```\n     *\n     * Start an action sequence to re-apply modifiers, check drops, etc.\n     *\n     * @param { Object } action The action to begin\n     * @param { string } action.name The name of the action\n     * @returns { Promise } A promise that resolves to the `Interactable` when actions on all targets have ended\n     */\n    reflow<T extends ActionName>(action: ActionProps<T>): ReturnType<typeof doReflow>\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    _reflowPromise: Promise<void>\n    _reflowResolve: (...args: unknown[]) => void\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    reflow?: true\n  }\n}\n\nfunction install(scope: Scope) {\n  const { Interactable } = scope\n\n  scope.actions.phases.reflow = true\n\n  Interactable.prototype.reflow = function (action: ActionProps) {\n    return doReflow(this, action, scope)\n  }\n}\n\nfunction doReflow<T extends ActionName>(\n  interactable: Interactable,\n  action: ActionProps<T>,\n  scope: Scope,\n): Promise<Interactable> {\n  const elements = interactable.getAllElements()\n\n  // tslint:disable-next-line variable-name\n  const Promise = (scope.window as any).Promise\n  const promises: Array<Promise<null>> | null = Promise ? [] : null\n\n  for (const element of elements) {\n    const rect = interactable.getRect(element as HTMLElement | SVGElement)\n\n    if (!rect) {\n      break\n    }\n\n    const runningInteraction = arr.find(scope.interactions.list, (interaction: Interaction) => {\n      return (\n        interaction.interacting() &&\n        interaction.interactable === interactable &&\n        interaction.element === element &&\n        interaction.prepared.name === action.name\n      )\n    })\n    let reflowPromise: Promise<null>\n\n    if (runningInteraction) {\n      runningInteraction.move()\n\n      if (promises) {\n        reflowPromise =\n          runningInteraction._reflowPromise ||\n          new Promise((resolve: any) => {\n            runningInteraction._reflowResolve = resolve\n          })\n      }\n    } else {\n      const xywh = tlbrToXywh(rect)\n      const coords = {\n        page: { x: xywh.x, y: xywh.y },\n        client: { x: xywh.x, y: xywh.y },\n        timeStamp: scope.now(),\n      }\n\n      const event = pointerUtils.coordsToEvent(coords)\n      reflowPromise = startReflow<T>(scope, interactable, element, action, event)\n    }\n\n    if (promises) {\n      promises.push(reflowPromise)\n    }\n  }\n\n  return promises && Promise.all(promises).then(() => interactable)\n}\n\nfunction startReflow<T extends ActionName>(\n  scope: Scope,\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  event: any,\n) {\n  const interaction = scope.interactions.new({ pointerType: 'reflow' })\n  const signalArg = {\n    interaction,\n    event,\n    pointer: event,\n    eventTarget: element,\n    phase: 'reflow',\n  } as const\n\n  interaction.interactable = interactable\n  interaction.element = element\n  interaction.prevEvent = event\n  interaction.updatePointer(event, event, element, true)\n  pointerUtils.setZeroCoords(interaction.coords.delta)\n\n  copyAction(interaction.prepared, action)\n  interaction._doPhase(signalArg)\n\n  const { Promise } = scope.window as unknown as { Promise: PromiseConstructor }\n  const reflowPromise = Promise\n    ? new Promise<undefined>((resolve) => {\n        interaction._reflowResolve = resolve\n      })\n    : undefined\n\n  interaction._reflowPromise = reflowPromise\n  interaction.start(action, interactable, element)\n\n  if (interaction._interacting) {\n    interaction.move(signalArg)\n    interaction.end(event)\n  } else {\n    interaction.stop()\n    interaction._reflowResolve()\n  }\n\n  interaction.removePointer(event, event)\n\n  return reflowPromise\n}\n\nconst reflow: Plugin = {\n  id: 'reflow',\n  install,\n  listeners: {\n    // remove completed reflow interactions\n    'interactions:stop': ({ interaction }, scope) => {\n      if (interaction.pointerType === 'reflow') {\n        if (interaction._reflowResolve) {\n          interaction._reflowResolve()\n        }\n\n        arr.remove(scope.interactions.list, interaction)\n      }\n    },\n  },\n}\n\nexport default reflow\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport interact from '@interactjs/interactjs'\n\nexport default interact\n\nif (typeof module === 'object' && !!module) {\n  try {\n    module.exports = interact\n  } catch {}\n}\n\n;(interact as any).default = interact\n","/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '@interactjs/actions/plugin'\nimport '@interactjs/auto-scroll/plugin'\nimport '@interactjs/auto-start/plugin'\nimport '@interactjs/core/interactablePreventDefault'\nimport '@interactjs/dev-tools/plugin'\nimport '@interactjs/inertia/plugin'\nimport '@interactjs/interact'\nimport '@interactjs/modifiers/plugin'\nimport '@interactjs/offset/plugin'\nimport '@interactjs/pointer-events/plugin'\nimport '@interactjs/reflow/plugin'\n\nimport actions from '@interactjs/actions/plugin'\nimport autoScroll from '@interactjs/auto-scroll/plugin'\nimport autoStart from '@interactjs/auto-start/plugin'\nimport interactablePreventDefault from '@interactjs/core/interactablePreventDefault'\nimport devTools from '@interactjs/dev-tools/plugin'\nimport inertia from '@interactjs/inertia/plugin'\nimport interact from '@interactjs/interact'\nimport modifiers from '@interactjs/modifiers/plugin'\nimport offset from '@interactjs/offset/plugin'\nimport pointerEvents from '@interactjs/pointer-events/plugin'\nimport reflow from '@interactjs/reflow/plugin'\n/* eslint-enable import/no-duplicates */\n\ninteract.use(interactablePreventDefault)\n\ninteract.use(offset)\n\n// pointerEvents\ninteract.use(pointerEvents)\n\n// inertia\ninteract.use(inertia)\n\n// snap, resize, etc.\ninteract.use(modifiers)\n\n// autoStart, hold\ninteract.use(autoStart)\n\n// drag and drop, resize, gesture\ninteract.use(actions)\n\n// autoScroll\ninteract.use(autoScroll)\n\n// reflow\ninteract.use(reflow)\n\n// eslint-disable-next-line no-undef\nif (process.env.NODE_ENV !== 'production') {\n  interact.use(devTools)\n}\n\nexport default interact\n;(interact as any).default = interact\n"],"names":["isWindow","thing","Window","realWindow","win","init","window","el","document","createTextNode","ownerDocument","wrap","getWindow","node","defaultView","object","func","is","docFrag","nodeType","number","bool","string","element","_window","test","Element","nodeName","plainObject","constructor","toString","array","length","splice","beforeMove","interaction","prepared","name","axis","coords","cur","page","y","start","client","velocity","x","move","iEvent","opposite","delta","drag","id","scope","actions","Interactable","defaults","prototype","draggable","map","methodDict","listeners","arg","interactable","buttons","dragOptions","options","enabled","pointerIsDown","pointerType","mouseButtons","action","lockAxis","startAxis","this","setPerAction","setOnEvents","getCursor","filterEventType","type","search","drag$1","domObjects","DocumentFragment","blank","SVGElement","SVGSVGElement","SVGElementInstance","HTMLElement","Event","Touch","PointerEvent","MSPointerEvent","domObjects$1","browser","navigator","supportsTouch","DocumentTouch","supportsPointerEvent","pointerEnabled","isIOS","platform","isIOS7","appVersion","isIe9","userAgent","isOperaMobile","appName","prefixedMatchesSelector","pEventTypes","up","down","over","out","cancel","wheelEvent","browser$1","nodeContains","parent","child","contains","parentNode","closest","selector","matchesSelector","host","replace","getParent","getNodeParents","limit","parents","parentParent","unshift","zIndexIsHigherThan","higherNode","lowerNode","parseInt","getComputedStyle","zIndex","matchesUpTo","getActualElement","correspondingUseElement","getElementClientRect","clientRect","getBoundingClientRect","getClientRects","left","right","top","bottom","width","height","getElementRect","scroll","relevantWindow","scrollX","documentElement","scrollLeft","scrollY","scrollTop","getPath","path","push","trySelector","value","querySelector","extend","dest","source","prop","getStringOptionResult","target","getRect","resolveRectLike","functionArgs","returnValue","rectToXY","rect","tlbrToXywh","addEdges","edges","getOriginXY","actionName","actionOptions","origin","normalize","filter","_typeOrPrefix","result","split","forEach","t","_i","_ref","prefix","p","trim","hypot","Math","sqrt","VENDOR_PREFIXES","pointerExtend","__set","some","indexOf","Object","defineProperty","get","set","configurable","copyCoords","src","timeStamp","setZeroCoords","targetObj","isNativePointer","pointer","dom","getXY","xy","getPageXY","getPointerId","pointerId","identifier","setCoords","pointers","pointerAverage","getClientXY","getTouchPair","event","touches","changedTouches","average","pageX","pageY","clientX","clientY","screenX","screenY","touchBBox","minX","min","minY","maxX","max","maxY","touchDistance","deltaSource","sourceX","sourceY","dx","dy","touchAngle","atan2","PI","getPointerType","undefined","getEventTargets","composedPath","domUtils","currentTarget","coordsToEvent","preventDefault","BaseEvent","immediatePropagationStopped","propagationStopped","_interaction","stopPropagation","stopImmediatePropagation","_proxy","merge","item","from","findIndex","i","find","DropEvent","dropzone","dragEvent","relatedTarget","dropState","super","prev","reject","rejected","events","enter","activeDrops","index","arr","deactivateEvent","fire","fireActivationEvents","_i3","slice","_ref3","getActiveDrops","dragElement","interactables","draggableElement","drops","list","drop","accept","_i2","getAllElements","dropzoneElement","collectDropzones","_i4","activeDrop","getDrop","pointerEvent","validDrops","_i5","_ref5","isValid","dropCheck","dropIndex","elements","deepestNodeIndex","deepestNodeParents","currentNode","deepestNode","currentNodeParent","deepestNodeParent","ancestryStart","ownerSVGElement","currentNodeParents","commonIndex","lastChild","previousSibling","getDropEvents","_pointerEvent","dropEvents","leave","activate","deactivate","dragLeave","prevDropzone","dragEnter","fireDropEvents","onEventCreated","dynamicDrop","dropResult","interactStatic","interact","usePlugin","normalized","normalizeListeners","corrected","keys","reduce","acc","prevListeners","off","on","ondrop","ondropactivate","ondropdeactivate","ondragenter","ondragleave","ondropmove","overlap","checker","dropzoneMethod","dropElement","dropped","dropOverlap","pointerUtils","horizontal","vertical","dragRect","cx","cy","dropCheckMethod","newValue","phaselessTypes","dragenter","dragleave","dropactivate","dropdeactivate","dropmove","interactions:before-action-start","interactions:after-action-start","interactions:after-action-move","interactions:action-end","interactions:stop","drop$1","updateGestureProps","phase","starting","ending","distance","box","scale","ds","angle","da","gesture","startDistance","startAngle","prevEvent","Infinity","isNaN","before","gesturable","interactions:new","gestureOptions","gesture$1","checkResizeEdge","interactableElement","margin","abs","edge","updateEventAxes","resizeAxes","resizeEvent","resize","square","axes","cursors","topleft","bottomright","topright","bottomleft","initCursors","defaultMargin","resizable","preserveAspectRatio","_rects","previous","deltaRect","invert","invertible","current","startRect","swap","resizeOptions","resizeEdges","_latestPointer","eventTarget","NaN","cursorKey","_arr","resize$1","install","request","lastTime","raf","callback","token","global","requestAnimationFrame","cancelAnimationFrame","vendors","vendor","bind","currTime","Date","now","timeToCall","setTimeout","clearTimeout","autoScroll","container","speed","isScrolling","prevTime","stop","getContainer","dt","s","scrollBy","prevScroll","getScroll","curScroll","check","_options$actionName$a","onInteractionMove","interacting","simulation","innerWidth","innerHeight","body","autoScrollPlugin","autoscroll","perAction","interactions:destroy","autoScroll$1","warnOnce","method","message","warned","console","warn","apply","arguments","copyAction","styleCursor","actionChecker","InteractableMethods","getAction","button","defaultActionChecker","ignoreFrom","_backCompatOption","allowFrom","validateAction","testIgnoreAllow","withinInteractionLimit","validateMatches","matches","matchElements","len","match","matchElement","matchAction","getActionInfo","pushMatches","forEachMatch","actionInfo","manualStart","prepare","setInteractionCursor","maxActions","maxPerElement","autoStartMax","autoStart","maxInteractions","activeInteractions","interactableCount","elementCount","interactions","otherAction","setCursor","cursor","cursorElement","prevCursorElement","style","cursorChecker","_interacting","base","interactions:move","prepareOnMove","pointerWasMoved","startOnMove","autoStart$2","dragAxis","absX","absY","targetOptions","currentAxis","getDraggable","downPointer","downEvent","thisAxis","checkStartAxis","getHoldDuration","hold","delay","basePlugin","autoStartHoldTimer","autoStart:prepared","duplicate","autoStart:before-start","hold$1","onInteractionEvent","checkAndPreventDefault","interactablePreventDefault","setting","supportsPassive","doc","docOptions","getDocOptions","passive","docEvents","listener","eventType","isNonNativeEvent","substr","phases","clone","Modification","states","startOffset","startDelta","endResult","startEdges","createResult","pageCoords","modifierList","actionModifiers","modifiers","methods","_methods","m","getModifierList","prepareStates","fillArg","preEnd","startAll","setAll","state","skipModifiers","unmodifiedRect","unmodifiedEdges","newResult","_state$methods","lastModifierCoords","shouldDo","rectUtils","eventProps","rectDelta","prevCoords","prevRect","rectChanged","changed","applyToInteraction","curCoords","startCoords","curDelta","coordsSet","setAndApply","modifiedCoords","adjustment","beforeEnd","doPreend","endPosition","modifierArg","restoreInteractionCoords","modification","coordsAndDeltas","_i6","_ref6","requireEndOnly","endOnly","setStart","copyFrom","other","destroy","makeModifier","module","modifier","_options","enable","disable","_defaults","addEventModifiers","modifiersBase","ret","InteractEvent","ctrlKey","shiftKey","altKey","metaKey","x0","y0","t0","duration","clientX0","clientY0","swipe","downTime","getSwipe","velocityY","velocityX","defineProperties","PointerInfo","downTarget","_ProxyValues","_ProxyMethods","idCounter","Interaction","_scopeFire","_ending","_stopped","pointerMoveTolerance","doMove","signalArg","_id","scopeFire","that","key","args","pointerDown","pointerIndex","updatePointer","pointerInfo","_doPhase","pointerMove","duplicateMove","getPointerIndex","pointerUp","curEventTarget","end","removePointer","documentBlur","endPhaseResult","currentAction","curPointer","getPointerInfo","_now","_updateLatestPointer","_createPreparedEvent","_fireEvent","_this$interactable","beforeAction","applyPending","offset","pending","hasPending","addToCoords","offsetBy","total","interactions:update-pointer","addTotal","offset$1","InertiaState","active","isModified","smoothEnd","allowResume","modifierCount","v0","te","targetOffset","modifiedOffset","currentOffset","lambda_v0","one_ve_v0","timeout","getOptions","velocityClient","pointerSpeed","minSpeed","endSpeed","startInertia","startSmoothEnd","startVelocity","lambda","resistance","inertiaDur","log","onNextFrame","inertiaTick","smoothEndTick","tickFn","progress","exp","newOffset","startX","startY","cpX","cpY","endX","endY","_getQBezierValue","position","smoothEndDuration","easeOutQuad","resume","inertia","inertiastart","p1","p2","p3","iT","b","c","d","inertia$1","fireUntilImmediateStopped","Eventable","types","eventList","subListener","_element","FakeEvent","originalEvent","pExtend","preventOriginalDefault","param","capture","optionsMatch","a","_scope$document","targets","delegatedEvents","documents","eventsMethods","add","remove","addDelegate","context","optionalArg","delegateListener","delegateUseCapture","delegates","delegate","removeDelegate","matchFound","entry","supportsOptions","addEventListener","l","removeEventListener","targetIndex","hasOwnProperty","typeIsEmpty","typeListeners","fakeEvent","createElement","finder","methodOrder","details","simulationResume","mouseOrPen","firstNonActive","hasPointerId","hasPointer","idle","finder$1","methodNames","doOnInteractions","prevTouchTime","searchDetails","getInteraction","invalidPointer","new","onDocSignal","eventMethodName","eventMethod","eventOptions","_i7","releasePointersOnRemovedEls","InteractionBase","interactable:unset","interactions$1","OnOffMethod","_actions","_context","_win","_doc","_scopeEvents","defaultContext","scopeEvents","onstart","onmove","onend","oninertiastart","updatePerActionListeners","_this$_actions$map$ac","actionFilter","_onOff","Off","On","optionName_","optionName","optionValue","rectChecker","Array","querySelectorAll","inContext","targetNode","testIgnore","testAllow","typeArg","listenerArg","actionName_","methodName","unset","delegated","InteractableSet","selectorMap","addListeners","interactablesOnTarget","addDocument","getExisting","isSelector","pluginIdRoot","floor","random","isInitialized","listenerMaps","globalEvents","getPointerAverage","getTouchBBox","getTouchDistance","getTouchAngle","version","process","use","plugin","isSet","debug","removeDocument","createInteractStatic","_plugins","InteractableBase","onWindowUnload","initScope","pluginIsInstalled","otherId","getDocIndex","docIndex","interact$1","_global","globalThis","grid","coordFields","xField","yField","gridFunc","range","limits","gridx","round","gridy","snappersPlugin","snappers","allSnappers","createSnapGrid","aspectRatio","ratio","equalDelta","linkedEdges","xIsPrimaryAxis","sign","edgeSign","subModification","initialCoords","aspectMethod","setEqualDelta","setRatio","correctedRect","newHeight","newWidth","aspectRatio$1","noop","rubberband","getRestrictionRect","restrict","elementRect","restriction","widthDiff","heightDiff","restrict$1","noInner","noOuter","fixRect","restrictEdges","inner","outer","restrictEdges$1","_","restrictRect$1","noMin","noMax","restrictSize$1","minSize","maxSize","snap","offsetWithOrigin","optionsOrigin","getOrigin","snapOffset","offsetRect","relativePoints","offsets","relativePoint","relativeX","relativeY","snapTarget","inRange","snap$1","snapSize","targetFields","relative","_ref2","snapSize$1","all","restrictRect","restrictSize","spring","avoid","transform","modifiers$1","interval","tapTime","double","prevTap","_subtractOrigin","originX","originY","_addOrigin","pointerEvents","clearHold","interactions:down","timer","minDuration","holdDuration","eventable","downAndStartHold","interactions:up","tapAfterUp","interactions:cancel","collectEventTargets","tap","doubletap","props","_interaction$pointers","endHoldRepeat","holdIntervalHandle","clearInterval","holdRepeat","holdRepeatInterval","holdrepeat","enderTypes","count","holdRepeat$1","__backCompatOption","call","pointerEvents:collect-targets","interactable:new","interactable:set","interactableTargets","startReflow","Promise","reflowPromise","resolve","_reflowResolve","_reflowPromise","reflow","promises","runningInteraction","xywh","then","doReflow","reflow$1","default","exports","_unused"],"mappings":"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"}