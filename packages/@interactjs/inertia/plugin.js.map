{
	"version": 3,
	"names": [
		"modifiers",
		"Modification",
		"offset",
		"dom",
		"hypot",
		"is",
		"copyCoords",
		"raf",
		"install",
		"scope",
		"defaults",
		"usePlugin",
		"default",
		"actions",
		"phases",
		"inertiastart",
		"resume",
		"perAction",
		"inertia",
		"enabled",
		"resistance",
		"minSpeed",
		"endSpeed",
		"allowResume",
		"smoothEndDuration",
		"InertiaState",
		"active",
		"isModified",
		"smoothEnd",
		"modification",
		"modifierCount",
		"modifierArg",
		"startCoords",
		"t0",
		"v0",
		"te",
		"targetOffset",
		"modifiedOffset",
		"currentOffset",
		"lambda_v0",
		"one_ve_v0",
		"timeout",
		"interaction",
		"constructor",
		"start",
		"event",
		"options",
		"getOptions",
		"client",
		"velocityClient",
		"coords",
		"velocity",
		"pointerSpeed",
		"x",
		"y",
		"copyFrom",
		"_now",
		"cur",
		"page",
		"fillArg",
		"pageCoords",
		"preEnd",
		"phase",
		"thrown",
		"timeStamp",
		"startInertia",
		"result",
		"setAll",
		"changed",
		"startSmoothEnd",
		"rect",
		"offsetBy",
		"_doPhase",
		"simulation",
		"startVelocity",
		"lambda",
		"inertiaDur",
		"Math",
		"log",
		"delta",
		"onNextFrame",
		"inertiaTick",
		"smoothEndTick",
		"tickFn",
		"request",
		"t",
		"progress",
		"exp",
		"newOffset",
		"getQuadraticCurvePoint",
		"move",
		"end",
		"duration",
		"easeOutQuad",
		"skipModifiers",
		"pointer",
		"eventTarget",
		"updatePointer",
		"prev",
		"stop",
		"cancel",
		"_interacting",
		"started",
		"arg",
		"state",
		"element",
		"parentNode",
		"interactable",
		"prepared",
		"name",
		"id",
		"before",
		"listeners",
		"interactions:new",
		"applyToInteraction",
		"setAndApply",
		"addEventModifiers",
		"restoreInteractionCoords",
		"_getQBezierValue",
		"p1",
		"p2",
		"p3",
		"iT",
		"startX",
		"startY",
		"cpX",
		"cpY",
		"endX",
		"endY",
		"position",
		"b",
		"c",
		"d"
	],
	"sources": [
		"plugin.ts"
	],
	"sourcesContent": [
		"import type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Point, PointerEventType } from '@interactjs/core/types'\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '@interactjs/modifiers/base'\nimport '@interactjs/offset/plugin'\nimport * as modifiers from '@interactjs/modifiers/base'\nimport { Modification } from '@interactjs/modifiers/Modification'\nimport type { ModifierArg } from '@interactjs/modifiers/types'\nimport offset from '@interactjs/offset/plugin'\n/* eslint-enable import/no-duplicates */\nimport * as dom from '@interactjs/utils/domUtils'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { copyCoords } from '@interactjs/utils/pointerUtils'\nimport raf from '@interactjs/utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    resume?: true\n    inertiastart?: true\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: InertiaState\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean\n      resistance?: number // the lambda in exponential decay\n      minSpeed?: number // target speed must be above this for inertia to start\n      endSpeed?: number // the speed at which inertia is slow enough to stop\n      allowResume?: true // allow resuming an action in inertia phase\n      smoothEndDuration?: number // animate to snap/restrict endOnly if there's no inertia\n    }\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-inertiastart': Omit<DoPhaseArg<ActionName, 'inertiastart'>, 'iEvent'>\n    'interactions:action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:after-action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:before-action-resume': Omit<DoPhaseArg<ActionName, 'resume'>, 'iEvent'>\n    'interactions:action-resume': DoPhaseArg<ActionName, 'resume'>\n    'interactions:after-action-resume': DoPhaseArg<ActionName, 'resume'>\n  }\n}\n\nfunction install(scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(offset)\n  scope.usePlugin(modifiers.default)\n  scope.actions.phases.inertiastart = true\n  scope.actions.phases.resume = true\n\n  defaults.perAction.inertia = {\n    enabled: false,\n    resistance: 10, // the lambda in exponential decay\n    minSpeed: 100, // target speed must be above this for inertia to start\n    endSpeed: 10, // the speed at which inertia is slow enough to stop\n    allowResume: true, // allow resuming an action in inertia phase\n    smoothEndDuration: 300, // animate to snap/restrict endOnly if there's no inertia\n  }\n}\n\nexport class InertiaState {\n  active = false\n  isModified = false\n  smoothEnd = false\n  allowResume = false\n\n  modification!: Modification\n  modifierCount = 0\n  modifierArg!: ModifierArg\n\n  startCoords!: Point\n  t0 = 0\n  v0 = 0\n\n  te = 0\n  targetOffset!: Point\n  modifiedOffset!: Point\n  currentOffset!: Point\n\n  lambda_v0? = 0 // eslint-disable-line camelcase\n  one_ve_v0? = 0 // eslint-disable-line camelcase\n  timeout!: number\n  readonly interaction: Interaction\n\n  constructor(interaction: Interaction) {\n    this.interaction = interaction\n  }\n\n  start(event: PointerEventType) {\n    const { interaction } = this\n    const options = getOptions(interaction)\n\n    if (!options || !options.enabled) {\n      return false\n    }\n\n    const { client: velocityClient } = interaction.coords.velocity\n    const pointerSpeed = hypot(velocityClient.x, velocityClient.y)\n    const modification = this.modification || (this.modification = new Modification(interaction))\n\n    modification.copyFrom(interaction.modification)\n\n    this.t0 = interaction._now()\n    this.allowResume = options.allowResume\n    this.v0 = pointerSpeed\n    this.currentOffset = { x: 0, y: 0 }\n    this.startCoords = interaction.coords.cur.page\n\n    this.modifierArg = modification.fillArg({\n      pageCoords: this.startCoords,\n      preEnd: true,\n      phase: 'inertiastart',\n    })\n\n    const thrown =\n      this.t0 - interaction.coords.cur.timeStamp < 50 &&\n      pointerSpeed > options.minSpeed &&\n      pointerSpeed > options.endSpeed\n\n    if (thrown) {\n      this.startInertia()\n    } else {\n      modification.result = modification.setAll(this.modifierArg)\n\n      if (!modification.result.changed) {\n        return false\n      }\n\n      this.startSmoothEnd()\n    }\n\n    // force modification change\n    interaction.modification.result.rect = null\n\n    // bring inertiastart event to the target coords\n    interaction.offsetBy(this.targetOffset)\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'inertiastart',\n    })\n    interaction.offsetBy({ x: -this.targetOffset.x, y: -this.targetOffset.y })\n    // force modification change\n    interaction.modification.result.rect = null\n\n    this.active = true\n    interaction.simulation = this\n\n    return true\n  }\n\n  startInertia() {\n    const startVelocity = this.interaction.coords.velocity.client\n    const options = getOptions(this.interaction)\n    const lambda = options.resistance\n    const inertiaDur = -Math.log(options.endSpeed / this.v0) / lambda\n\n    this.targetOffset = {\n      x: (startVelocity.x - inertiaDur) / lambda,\n      y: (startVelocity.y - inertiaDur) / lambda,\n    }\n\n    this.te = inertiaDur\n    this.lambda_v0 = lambda / this.v0\n    this.one_ve_v0 = 1 - options.endSpeed / this.v0\n\n    const { modification, modifierArg } = this\n\n    modifierArg.pageCoords = {\n      x: this.startCoords.x + this.targetOffset.x,\n      y: this.startCoords.y + this.targetOffset.y,\n    }\n\n    modification.result = modification.setAll(modifierArg)\n\n    if (modification.result.changed) {\n      this.isModified = true\n      this.modifiedOffset = {\n        x: this.targetOffset.x + modification.result.delta.x,\n        y: this.targetOffset.y + modification.result.delta.y,\n      }\n    }\n\n    this.onNextFrame(() => this.inertiaTick())\n  }\n\n  startSmoothEnd() {\n    this.smoothEnd = true\n    this.isModified = true\n    this.targetOffset = {\n      x: this.modification.result.delta.x,\n      y: this.modification.result.delta.y,\n    }\n\n    this.onNextFrame(() => this.smoothEndTick())\n  }\n\n  onNextFrame(tickFn: () => void) {\n    this.timeout = raf.request(() => {\n      if (this.active) {\n        tickFn()\n      }\n    })\n  }\n\n  inertiaTick() {\n    const { interaction } = this\n    const options = getOptions(interaction)\n    const lambda = options.resistance\n    const t = (interaction._now() - this.t0) / 1000\n\n    if (t < this.te) {\n      const progress = 1 - (Math.exp(-lambda * t) - this.lambda_v0) / this.one_ve_v0\n      let newOffset: Point\n\n      if (this.isModified) {\n        newOffset = getQuadraticCurvePoint(\n          0,\n          0,\n          this.targetOffset.x,\n          this.targetOffset.y,\n          this.modifiedOffset.x,\n          this.modifiedOffset.y,\n          progress,\n        )\n      } else {\n        newOffset = {\n          x: this.targetOffset.x * progress,\n          y: this.targetOffset.y * progress,\n        }\n      }\n\n      const delta = { x: newOffset.x - this.currentOffset.x, y: newOffset.y - this.currentOffset.y }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move()\n\n      this.onNextFrame(() => this.inertiaTick())\n    } else {\n      interaction.offsetBy({\n        x: this.modifiedOffset.x - this.currentOffset.x,\n        y: this.modifiedOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  smoothEndTick() {\n    const { interaction } = this\n    const t = interaction._now() - this.t0\n    const { smoothEndDuration: duration } = getOptions(interaction)\n\n    if (t < duration) {\n      const newOffset = {\n        x: easeOutQuad(t, 0, this.targetOffset.x, duration),\n        y: easeOutQuad(t, 0, this.targetOffset.y, duration),\n      }\n      const delta = {\n        x: newOffset.x - this.currentOffset.x,\n        y: newOffset.y - this.currentOffset.y,\n      }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move({ skipModifiers: this.modifierCount })\n\n      this.onNextFrame(() => this.smoothEndTick())\n    } else {\n      interaction.offsetBy({\n        x: this.targetOffset.x - this.currentOffset.x,\n        y: this.targetOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  resume({ pointer, event, eventTarget }: SignalArgs['interactions:down']) {\n    const { interaction } = this\n\n    // undo inertia changes to interaction coords\n    interaction.offsetBy({\n      x: -this.currentOffset.x,\n      y: -this.currentOffset.y,\n    })\n\n    // update pointer at pointer down position\n    interaction.updatePointer(pointer, event, eventTarget, true)\n\n    // fire resume signals and event\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'resume',\n    })\n    copyCoords(interaction.coords.prev, interaction.coords.cur)\n\n    this.stop()\n  }\n\n  end() {\n    this.interaction.move()\n    this.interaction.end()\n    this.stop()\n  }\n\n  stop() {\n    this.active = this.smoothEnd = false\n    this.interaction.simulation = null\n    raf.cancel(this.timeout)\n  }\n}\n\nfunction start({ interaction, event }: DoPhaseArg<ActionName, 'end'>) {\n  if (!interaction._interacting || interaction.simulation) {\n    return null\n  }\n\n  const started = interaction.inertia.start(event)\n\n  // prevent action end if inertia or smoothEnd\n  return started ? false : null\n}\n\n// Check if the down event hits the current inertia target\n// control should be return to the user\nfunction resume(arg: SignalArgs['interactions:down']) {\n  const { interaction, eventTarget } = arg\n  const state = interaction.inertia\n\n  if (!state.active) return\n\n  let element = eventTarget as Node\n\n  // climb up the DOM tree from the event target\n  while (is.element(element)) {\n    // if interaction element is the current inertia target element\n    if (element === interaction.element) {\n      state.resume(arg)\n      break\n    }\n\n    element = dom.parentNode(element)\n  }\n}\n\nfunction stop({ interaction }: { interaction: Interaction }) {\n  const state = interaction.inertia\n\n  if (state.active) {\n    state.stop()\n  }\n}\n\nfunction getOptions({ interactable, prepared }: Interaction) {\n  return interactable && interactable.options && prepared.name && interactable.options[prepared.name].inertia\n}\n\nconst inertia: Plugin = {\n  id: 'inertia',\n  before: ['modifiers', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.inertia = new InertiaState(interaction)\n    },\n\n    'interactions:before-action-end': start,\n    'interactions:down': resume,\n    'interactions:stop': stop,\n\n    'interactions:before-action-resume': (arg) => {\n      const { modification } = arg.interaction\n\n      modification.stop(arg)\n      modification.start(arg, arg.interaction.coords.cur.page)\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-inertiastart': (arg) => arg.interaction.modification.setAndApply(arg),\n    'interactions:action-resume': modifiers.addEventModifiers,\n    'interactions:action-inertiastart': modifiers.addEventModifiers,\n    'interactions:after-action-inertiastart': (arg) =>\n      arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-resume': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n  },\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nfunction _getQBezierValue(t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nfunction getQuadraticCurvePoint(\n  startX: number,\n  startY: number,\n  cpX: number,\n  cpY: number,\n  endX: number,\n  endY: number,\n  position: number,\n) {\n  return {\n    x: _getQBezierValue(position, startX, cpX, endX),\n    y: _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nfunction easeOutQuad(t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport default inertia\n"
	],
	"mappings": "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"
}