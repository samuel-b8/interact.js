{
	"version": 3,
	"names": [
		"modifiers",
		"_interopRequireWildcard",
		"require",
		"_pluginProd",
		"_interopRequireDefault",
		"_ModificationProd",
		"dom",
		"_hypotProd",
		"_isProd",
		"_pointerUtilsProd",
		"_rafProd",
		"obj",
		"__esModule",
		"default",
		"_getRequireWildcardCache",
		"e",
		"WeakMap",
		"r",
		"t",
		"has",
		"get",
		"n",
		"__proto__",
		"a",
		"Object",
		"defineProperty",
		"getOwnPropertyDescriptor",
		"u",
		"prototype",
		"hasOwnProperty",
		"call",
		"i",
		"set",
		"InertiaState",
		"active",
		"isModified",
		"smoothEnd",
		"allowResume",
		"modification",
		"modifierCount",
		"modifierArg",
		"startCoords",
		"t0",
		"v0",
		"te",
		"targetOffset",
		"modifiedOffset",
		"currentOffset",
		"lambda_v0",
		"one_ve_v0",
		"timeout",
		"interaction",
		"constructor",
		"this",
		"start",
		"event",
		"options",
		"getOptions",
		"enabled",
		"client",
		"velocityClient",
		"coords",
		"velocity",
		"pointerSpeed",
		"hypot",
		"x",
		"y",
		"Modification",
		"copyFrom",
		"_now",
		"cur",
		"page",
		"fillArg",
		"pageCoords",
		"preEnd",
		"phase",
		"timeStamp",
		"minSpeed",
		"endSpeed",
		"startInertia",
		"result",
		"setAll",
		"changed",
		"startSmoothEnd",
		"rect",
		"offsetBy",
		"_doPhase",
		"simulation",
		"startVelocity",
		"lambda",
		"resistance",
		"inertiaDur",
		"Math",
		"log",
		"delta",
		"onNextFrame",
		"inertiaTick",
		"smoothEndTick",
		"tickFn",
		"raf",
		"request",
		"progress",
		"exp",
		"newOffset",
		"cpX",
		"cpY",
		"endX",
		"endY",
		"_getQBezierValue",
		"position",
		"move",
		"end",
		"smoothEndDuration",
		"duration",
		"easeOutQuad",
		"skipModifiers",
		"resume",
		"pointer",
		"eventTarget",
		"updatePointer",
		"copyCoords",
		"prev",
		"stop",
		"cancel",
		"interactable",
		"prepared",
		"name",
		"inertia",
		"exports",
		"id",
		"before",
		"install",
		"scope",
		"defaults",
		"usePlugin",
		"offset",
		"actions",
		"phases",
		"inertiastart",
		"perAction",
		"listeners",
		"_interacting",
		"arg",
		"state",
		"element",
		"is",
		"parentNode",
		"applyToInteraction",
		"setAndApply",
		"addEventModifiers",
		"restoreInteractionCoords",
		"p1",
		"p2",
		"p3",
		"iT",
		"b",
		"c",
		"d"
	],
	"sources": [
		"plugin.ts"
	],
	"sourcesContent": [
		"import type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Point, PointerEventType } from '@interactjs/core/types'\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '@interactjs/modifiers/base'\nimport '@interactjs/offset/plugin'\nimport * as modifiers from '@interactjs/modifiers/base'\nimport { Modification } from '@interactjs/modifiers/Modification'\nimport type { ModifierArg } from '@interactjs/modifiers/types'\nimport offset from '@interactjs/offset/plugin'\n/* eslint-enable import/no-duplicates */\nimport * as dom from '@interactjs/utils/domUtils'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { copyCoords } from '@interactjs/utils/pointerUtils'\nimport raf from '@interactjs/utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    resume?: true\n    inertiastart?: true\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: InertiaState\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean\n      resistance?: number // the lambda in exponential decay\n      minSpeed?: number // target speed must be above this for inertia to start\n      endSpeed?: number // the speed at which inertia is slow enough to stop\n      allowResume?: true // allow resuming an action in inertia phase\n      smoothEndDuration?: number // animate to snap/restrict endOnly if there's no inertia\n    }\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-inertiastart': Omit<DoPhaseArg<ActionName, 'inertiastart'>, 'iEvent'>\n    'interactions:action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:after-action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:before-action-resume': Omit<DoPhaseArg<ActionName, 'resume'>, 'iEvent'>\n    'interactions:action-resume': DoPhaseArg<ActionName, 'resume'>\n    'interactions:after-action-resume': DoPhaseArg<ActionName, 'resume'>\n  }\n}\n\nfunction install(scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(offset)\n  scope.usePlugin(modifiers.default)\n  scope.actions.phases.inertiastart = true\n  scope.actions.phases.resume = true\n\n  defaults.perAction.inertia = {\n    enabled: false,\n    resistance: 10, // the lambda in exponential decay\n    minSpeed: 100, // target speed must be above this for inertia to start\n    endSpeed: 10, // the speed at which inertia is slow enough to stop\n    allowResume: true, // allow resuming an action in inertia phase\n    smoothEndDuration: 300, // animate to snap/restrict endOnly if there's no inertia\n  }\n}\n\nexport class InertiaState {\n  active = false\n  isModified = false\n  smoothEnd = false\n  allowResume = false\n\n  modification!: Modification\n  modifierCount = 0\n  modifierArg!: ModifierArg\n\n  startCoords!: Point\n  t0 = 0\n  v0 = 0\n\n  te = 0\n  targetOffset!: Point\n  modifiedOffset!: Point\n  currentOffset!: Point\n\n  lambda_v0? = 0 // eslint-disable-line camelcase\n  one_ve_v0? = 0 // eslint-disable-line camelcase\n  timeout!: number\n  readonly interaction: Interaction\n\n  constructor(interaction: Interaction) {\n    this.interaction = interaction\n  }\n\n  start(event: PointerEventType) {\n    const { interaction } = this\n    const options = getOptions(interaction)\n\n    if (!options || !options.enabled) {\n      return false\n    }\n\n    const { client: velocityClient } = interaction.coords.velocity\n    const pointerSpeed = hypot(velocityClient.x, velocityClient.y)\n    const modification = this.modification || (this.modification = new Modification(interaction))\n\n    modification.copyFrom(interaction.modification)\n\n    this.t0 = interaction._now()\n    this.allowResume = options.allowResume\n    this.v0 = pointerSpeed\n    this.currentOffset = { x: 0, y: 0 }\n    this.startCoords = interaction.coords.cur.page\n\n    this.modifierArg = modification.fillArg({\n      pageCoords: this.startCoords,\n      preEnd: true,\n      phase: 'inertiastart',\n    })\n\n    const thrown =\n      this.t0 - interaction.coords.cur.timeStamp < 50 &&\n      pointerSpeed > options.minSpeed &&\n      pointerSpeed > options.endSpeed\n\n    if (thrown) {\n      this.startInertia()\n    } else {\n      modification.result = modification.setAll(this.modifierArg)\n\n      if (!modification.result.changed) {\n        return false\n      }\n\n      this.startSmoothEnd()\n    }\n\n    // force modification change\n    interaction.modification.result.rect = null\n\n    // bring inertiastart event to the target coords\n    interaction.offsetBy(this.targetOffset)\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'inertiastart',\n    })\n    interaction.offsetBy({ x: -this.targetOffset.x, y: -this.targetOffset.y })\n    // force modification change\n    interaction.modification.result.rect = null\n\n    this.active = true\n    interaction.simulation = this\n\n    return true\n  }\n\n  startInertia() {\n    const startVelocity = this.interaction.coords.velocity.client\n    const options = getOptions(this.interaction)\n    const lambda = options.resistance\n    const inertiaDur = -Math.log(options.endSpeed / this.v0) / lambda\n\n    this.targetOffset = {\n      x: (startVelocity.x - inertiaDur) / lambda,\n      y: (startVelocity.y - inertiaDur) / lambda,\n    }\n\n    this.te = inertiaDur\n    this.lambda_v0 = lambda / this.v0\n    this.one_ve_v0 = 1 - options.endSpeed / this.v0\n\n    const { modification, modifierArg } = this\n\n    modifierArg.pageCoords = {\n      x: this.startCoords.x + this.targetOffset.x,\n      y: this.startCoords.y + this.targetOffset.y,\n    }\n\n    modification.result = modification.setAll(modifierArg)\n\n    if (modification.result.changed) {\n      this.isModified = true\n      this.modifiedOffset = {\n        x: this.targetOffset.x + modification.result.delta.x,\n        y: this.targetOffset.y + modification.result.delta.y,\n      }\n    }\n\n    this.onNextFrame(() => this.inertiaTick())\n  }\n\n  startSmoothEnd() {\n    this.smoothEnd = true\n    this.isModified = true\n    this.targetOffset = {\n      x: this.modification.result.delta.x,\n      y: this.modification.result.delta.y,\n    }\n\n    this.onNextFrame(() => this.smoothEndTick())\n  }\n\n  onNextFrame(tickFn: () => void) {\n    this.timeout = raf.request(() => {\n      if (this.active) {\n        tickFn()\n      }\n    })\n  }\n\n  inertiaTick() {\n    const { interaction } = this\n    const options = getOptions(interaction)\n    const lambda = options.resistance\n    const t = (interaction._now() - this.t0) / 1000\n\n    if (t < this.te) {\n      const progress = 1 - (Math.exp(-lambda * t) - this.lambda_v0) / this.one_ve_v0\n      let newOffset: Point\n\n      if (this.isModified) {\n        newOffset = getQuadraticCurvePoint(\n          0,\n          0,\n          this.targetOffset.x,\n          this.targetOffset.y,\n          this.modifiedOffset.x,\n          this.modifiedOffset.y,\n          progress,\n        )\n      } else {\n        newOffset = {\n          x: this.targetOffset.x * progress,\n          y: this.targetOffset.y * progress,\n        }\n      }\n\n      const delta = { x: newOffset.x - this.currentOffset.x, y: newOffset.y - this.currentOffset.y }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move()\n\n      this.onNextFrame(() => this.inertiaTick())\n    } else {\n      interaction.offsetBy({\n        x: this.modifiedOffset.x - this.currentOffset.x,\n        y: this.modifiedOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  smoothEndTick() {\n    const { interaction } = this\n    const t = interaction._now() - this.t0\n    const { smoothEndDuration: duration } = getOptions(interaction)\n\n    if (t < duration) {\n      const newOffset = {\n        x: easeOutQuad(t, 0, this.targetOffset.x, duration),\n        y: easeOutQuad(t, 0, this.targetOffset.y, duration),\n      }\n      const delta = {\n        x: newOffset.x - this.currentOffset.x,\n        y: newOffset.y - this.currentOffset.y,\n      }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move({ skipModifiers: this.modifierCount })\n\n      this.onNextFrame(() => this.smoothEndTick())\n    } else {\n      interaction.offsetBy({\n        x: this.targetOffset.x - this.currentOffset.x,\n        y: this.targetOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  resume({ pointer, event, eventTarget }: SignalArgs['interactions:down']) {\n    const { interaction } = this\n\n    // undo inertia changes to interaction coords\n    interaction.offsetBy({\n      x: -this.currentOffset.x,\n      y: -this.currentOffset.y,\n    })\n\n    // update pointer at pointer down position\n    interaction.updatePointer(pointer, event, eventTarget, true)\n\n    // fire resume signals and event\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'resume',\n    })\n    copyCoords(interaction.coords.prev, interaction.coords.cur)\n\n    this.stop()\n  }\n\n  end() {\n    this.interaction.move()\n    this.interaction.end()\n    this.stop()\n  }\n\n  stop() {\n    this.active = this.smoothEnd = false\n    this.interaction.simulation = null\n    raf.cancel(this.timeout)\n  }\n}\n\nfunction start({ interaction, event }: DoPhaseArg<ActionName, 'end'>) {\n  if (!interaction._interacting || interaction.simulation) {\n    return null\n  }\n\n  const started = interaction.inertia.start(event)\n\n  // prevent action end if inertia or smoothEnd\n  return started ? false : null\n}\n\n// Check if the down event hits the current inertia target\n// control should be return to the user\nfunction resume(arg: SignalArgs['interactions:down']) {\n  const { interaction, eventTarget } = arg\n  const state = interaction.inertia\n\n  if (!state.active) return\n\n  let element = eventTarget as Node\n\n  // climb up the DOM tree from the event target\n  while (is.element(element)) {\n    // if interaction element is the current inertia target element\n    if (element === interaction.element) {\n      state.resume(arg)\n      break\n    }\n\n    element = dom.parentNode(element)\n  }\n}\n\nfunction stop({ interaction }: { interaction: Interaction }) {\n  const state = interaction.inertia\n\n  if (state.active) {\n    state.stop()\n  }\n}\n\nfunction getOptions({ interactable, prepared }: Interaction) {\n  return interactable && interactable.options && prepared.name && interactable.options[prepared.name].inertia\n}\n\nconst inertia: Plugin = {\n  id: 'inertia',\n  before: ['modifiers', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.inertia = new InertiaState(interaction)\n    },\n\n    'interactions:before-action-end': start,\n    'interactions:down': resume,\n    'interactions:stop': stop,\n\n    'interactions:before-action-resume': (arg) => {\n      const { modification } = arg.interaction\n\n      modification.stop(arg)\n      modification.start(arg, arg.interaction.coords.cur.page)\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-inertiastart': (arg) => arg.interaction.modification.setAndApply(arg),\n    'interactions:action-resume': modifiers.addEventModifiers,\n    'interactions:action-inertiastart': modifiers.addEventModifiers,\n    'interactions:after-action-inertiastart': (arg) =>\n      arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-resume': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n  },\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nfunction _getQBezierValue(t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nfunction getQuadraticCurvePoint(\n  startX: number,\n  startY: number,\n  cpX: number,\n  cpY: number,\n  endX: number,\n  endY: number,\n  position: number,\n) {\n  return {\n    x: _getQBezierValue(position, startX, cpX, endX),\n    y: _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nfunction easeOutQuad(t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport default inertia\n"
	],
	"mappings": "mGAIA,IAAAA,EAAAC,EAAAC,QAAA,8BACAC,EAAAC,EAAAF,QAAA,6BAEAG,EAAAH,QAAA,qCAIAI,EAAAL,EAAAC,QAAA,8BACAK,EAAAH,EAAAF,QAAA,2BACAM,EAAAJ,EAAAF,QAAA,wBACAO,EAAAP,QAAA,iCACAQ,EAAAN,EAAAF,QAAA,yBAAuC,SAAAE,EAAAO,GAAA,OAAAA,KAAAC,WAAAD,EAAA,CAAAE,QAAAF,EAAA,UAAAG,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAAC,KAAAG,EAAAD,GAAAF,EAAA,UAAAd,EAAAc,EAAAE,GAAA,IAAAA,GAAAF,KAAAH,WAAA,OAAAG,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAF,QAAAE,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,KAAAC,IAAAJ,GAAA,OAAAG,EAAAE,IAAAL,GAAA,IAAAM,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAZ,EAAA,eAAAY,GAAAH,OAAAI,UAAAC,eAAAC,KAAAf,EAAAY,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAX,EAAAY,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAZ,EAAAY,EAAA,QAAAN,EAAAR,QAAAE,EAAAG,KAAAc,IAAAjB,EAAAM,IAAA,CAyDhC,MAAMY,EACXC,QAAS,EACTC,YAAa,EACbC,WAAY,EACZC,aAAc,EAEdC,aACAC,cAAgB,EAChBC,YAEAC,YACAC,GAAK,EACLC,GAAK,EAELC,GAAK,EACLC,aACAC,eACAC,cAEAC,UAAa,EACbC,UAAa,EACbC,QACSC,YAETC,YAAYD,GACVE,KAAKF,YAAcA,CACrB,CAEAG,MAAMC,GACJ,MAAMJ,YAAEA,GAAgBE,KAClBG,EAAUC,EAAWN,GAE3B,IAAKK,IAAYA,EAAQE,QACvB,OAAO,EAGT,MAAQC,OAAQC,GAAmBT,EAAYU,OAAOC,SAChDC,GAAe,EAAAC,WAAMJ,EAAeK,EAAGL,EAAeM,GACtD5B,EAAee,KAAKf,eAAiBe,KAAKf,aAAe,IAAI6B,eAAahB,IAqBhF,GAnBAb,EAAa8B,SAASjB,EAAYb,cAElCe,KAAKX,GAAKS,EAAYkB,OACtBhB,KAAKhB,YAAcmB,EAAQnB,YAC3BgB,KAAKV,GAAKoB,EACVV,KAAKN,cAAgB,CAAEkB,EAAG,EAAGC,EAAG,GAChCb,KAAKZ,YAAcU,EAAYU,OAAOS,IAAIC,KAE1ClB,KAAKb,YAAcF,EAAakC,QAAQ,CACtCC,WAAYpB,KAAKZ,YACjBiC,QAAQ,EACRC,MAAO,iBAIPtB,KAAKX,GAAKS,EAAYU,OAAOS,IAAIM,UAAY,IAC7Cb,EAAeP,EAAQqB,UACvBd,EAAeP,EAAQsB,SAGvBzB,KAAK0B,mBACA,CAGL,GAFAzC,EAAa0C,OAAS1C,EAAa2C,OAAO5B,KAAKb,cAE1CF,EAAa0C,OAAOE,QACvB,OAAO,EAGT7B,KAAK8B,gBACP,CAmBA,OAhBAhC,EAAYb,aAAa0C,OAAOI,KAAO,KAGvCjC,EAAYkC,SAAShC,KAAKR,cAC1BM,EAAYmC,SAAS,CACnBnC,cACAI,QACAoB,MAAO,iBAETxB,EAAYkC,SAAS,CAAEpB,GAAIZ,KAAKR,aAAaoB,EAAGC,GAAIb,KAAKR,aAAaqB,IAEtEf,EAAYb,aAAa0C,OAAOI,KAAO,KAEvC/B,KAAKnB,QAAS,EACdiB,EAAYoC,WAAalC,MAElB,CACT,CAEA0B,eACE,MAAMS,EAAgBnC,KAAKF,YAAYU,OAAOC,SAASH,OACjDH,EAAUC,EAAWJ,KAAKF,aAC1BsC,EAASjC,EAAQkC,WACjBC,GAAcC,KAAKC,IAAIrC,EAAQsB,SAAWzB,KAAKV,IAAM8C,EAE3DpC,KAAKR,aAAe,CAClBoB,GAAIuB,EAAcvB,EAAI0B,GAAcF,EACpCvB,GAAIsB,EAActB,EAAIyB,GAAcF,GAGtCpC,KAAKT,GAAK+C,EACVtC,KAAKL,UAAYyC,EAASpC,KAAKV,GAC/BU,KAAKJ,UAAY,EAAIO,EAAQsB,SAAWzB,KAAKV,GAE7C,MAAML,aAAEA,EAAYE,YAAEA,GAAgBa,KAEtCb,EAAYiC,WAAa,CACvBR,EAAGZ,KAAKZ,YAAYwB,EAAIZ,KAAKR,aAAaoB,EAC1CC,EAAGb,KAAKZ,YAAYyB,EAAIb,KAAKR,aAAaqB,GAG5C5B,EAAa0C,OAAS1C,EAAa2C,OAAOzC,GAEtCF,EAAa0C,OAAOE,UACtB7B,KAAKlB,YAAa,EAClBkB,KAAKP,eAAiB,CACpBmB,EAAGZ,KAAKR,aAAaoB,EAAI3B,EAAa0C,OAAOc,MAAM7B,EACnDC,EAAGb,KAAKR,aAAaqB,EAAI5B,EAAa0C,OAAOc,MAAM5B,IAIvDb,KAAK0C,aAAY,IAAM1C,KAAK2C,eAC9B,CAEAb,iBACE9B,KAAKjB,WAAY,EACjBiB,KAAKlB,YAAa,EAClBkB,KAAKR,aAAe,CAClBoB,EAAGZ,KAAKf,aAAa0C,OAAOc,MAAM7B,EAClCC,EAAGb,KAAKf,aAAa0C,OAAOc,MAAM5B,GAGpCb,KAAK0C,aAAY,IAAM1C,KAAK4C,iBAC9B,CAEAF,YAAYG,GACV7C,KAAKH,QAAUiD,UAAIC,SAAQ,KACrB/C,KAAKnB,QACPgE,GACF,GAEJ,CAEAF,cACE,MAAM7C,YAAEA,GAAgBE,KAElBoC,EADUhC,EAAWN,GACJuC,WACjBxE,GAAKiC,EAAYkB,OAAShB,KAAKX,IAAM,IAE3C,GAAIxB,EAAImC,KAAKT,GAAI,CACf,MAAMyD,EAAW,GAAKT,KAAKU,KAAKb,EAASvE,GAAKmC,KAAKL,WAAaK,KAAKJ,UACrE,IAAIsD,EAEAlD,KAAKlB,YAEL,EACA,EAyLRqE,EAxLQnD,KAAKR,aAAaoB,EAyL1BwC,EAxLQpD,KAAKR,aAAaqB,EAyL1BwC,EAxLQrD,KAAKP,eAAemB,EAyL5B0C,EAxLQtD,KAAKP,eAAeoB,EANtBqC,EAiMC,CACLtC,EAAG2C,EAHLC,EAxLQR,EANA,EAiMgCG,EAAKE,GAC3CxC,EAAG0C,EAAiBC,EAjMd,EAiMgCJ,EAAKE,KAzLvCJ,EAAY,CACVtC,EAAGZ,KAAKR,aAAaoB,EAAIoC,EACzBnC,EAAGb,KAAKR,aAAaqB,EAAImC,GAI7B,MAAMP,EAAQ,CAAE7B,EAAGsC,EAAUtC,EAAIZ,KAAKN,cAAckB,EAAGC,EAAGqC,EAAUrC,EAAIb,KAAKN,cAAcmB,GAE3Fb,KAAKN,cAAckB,GAAK6B,EAAM7B,EAC9BZ,KAAKN,cAAcmB,GAAK4B,EAAM5B,EAE9Bf,EAAYkC,SAASS,GACrB3C,EAAY2D,OAEZzD,KAAK0C,aAAY,IAAM1C,KAAK2C,eAC9B,MACE7C,EAAYkC,SAAS,CACnBpB,EAAGZ,KAAKP,eAAemB,EAAIZ,KAAKN,cAAckB,EAC9CC,EAAGb,KAAKP,eAAeoB,EAAIb,KAAKN,cAAcmB,IAGhDb,KAAK0D,MAyJX,IAGEP,EACAC,EACAC,EACAC,EACAE,CA9JA,CAEAZ,gBACE,MAAM9C,YAAEA,GAAgBE,KAClBnC,EAAIiC,EAAYkB,OAAShB,KAAKX,IAC5BsE,kBAAmBC,GAAaxD,EAAWN,GAEnD,GAAIjC,EAAI+F,EAAU,CAChB,MAAMV,EAAY,CAChBtC,EAAGiD,EAAYhG,EAAG,EAAGmC,KAAKR,aAAaoB,EAAGgD,GAC1C/C,EAAGgD,EAAYhG,EAAG,EAAGmC,KAAKR,aAAaqB,EAAG+C,IAEtCnB,EAAQ,CACZ7B,EAAGsC,EAAUtC,EAAIZ,KAAKN,cAAckB,EACpCC,EAAGqC,EAAUrC,EAAIb,KAAKN,cAAcmB,GAGtCb,KAAKN,cAAckB,GAAK6B,EAAM7B,EAC9BZ,KAAKN,cAAcmB,GAAK4B,EAAM5B,EAE9Bf,EAAYkC,SAASS,GACrB3C,EAAY2D,KAAK,CAAEK,cAAe9D,KAAKd,gBAEvCc,KAAK0C,aAAY,IAAM1C,KAAK4C,iBAC9B,MACE9C,EAAYkC,SAAS,CACnBpB,EAAGZ,KAAKR,aAAaoB,EAAIZ,KAAKN,cAAckB,EAC5CC,EAAGb,KAAKR,aAAaqB,EAAIb,KAAKN,cAAcmB,IAG9Cb,KAAK0D,KAET,CAEAK,QAAOC,QAAEA,EAAO9D,MAAEA,EAAK+D,YAAEA,IACvB,MAAMnE,YAAEA,GAAgBE,KAGxBF,EAAYkC,SAAS,CACnBpB,GAAIZ,KAAKN,cAAckB,EACvBC,GAAIb,KAAKN,cAAcmB,IAIzBf,EAAYoE,cAAcF,EAAS9D,EAAO+D,GAAa,GAGvDnE,EAAYmC,SAAS,CACnBnC,cACAI,QACAoB,MAAO,YAET,EAAA6C,cAAWrE,EAAYU,OAAO4D,KAAMtE,EAAYU,OAAOS,KAEvDjB,KAAKqE,MACP,CAEAX,MACE1D,KAAKF,YAAY2D,OACjBzD,KAAKF,YAAY4D,MACjB1D,KAAKqE,MACP,CAEAA,OACErE,KAAKnB,OAASmB,KAAKjB,WAAY,EAC/BiB,KAAKF,YAAYoC,WAAa,KAC9BY,UAAIwB,OAAOtE,KAAKH,QAClB,EA4CF,SAASO,GAAWmE,aAAEA,EAAYC,SAAEA,IAClC,OAAOD,GAAgBA,EAAapE,SAAWqE,EAASC,MAAQF,EAAapE,QAAQqE,EAASC,MAAMC,OACtG,CA7CCC,QAAA/F,eA+CD,MAAM8F,EAAkB,CACtBE,GAAI,UACJC,OAAQ,CAAC,YAAa,WACtBC,QArUeC,GACf,MAAMC,SAAEA,GAAaD,EAErBA,EAAME,UAAUC,WAChBH,EAAME,UAAUtI,EAAUa,SAC1BuH,EAAMI,QAAQC,OAAOC,cAAe,EACpCN,EAAMI,QAAQC,OAAOrB,QAAS,EAE9BiB,EAASM,UAAUZ,QAAU,CAC3BrE,SAAS,EACTgC,WAAY,GACZb,SAAU,IACVC,SAAU,GACVzC,aAAa,EACb2E,kBAAmB,IAEvB,EAsTE4B,UAAW,CACT,kBAEA,EAFuBzF,gBACrBA,EAAY4E,QAAU,IAAI9F,EAAakB,EAAY,EAGrD,iCAtDJ,EAAeA,YAAEA,EAAWI,MAAEA,OACvBJ,EAAY0F,cAAgB1F,EAAYoC,aAI7BpC,EAAY4E,QAAQzE,MAAMC,KAHjC,KAqDP,mBAAqB6D,CA1CT0B,GACd,MAAM3F,YAAEA,EAAWmE,YAAEA,GAAgBwB,EAC/BC,EAAQ5F,EAAY4E,QAE1B,IAAKgB,EAAM7G,OAAQ,OAEnB,IAAI8G,EAAU1B,EAGd,KAAO2B,UAAGD,QAAQA,IAAU,CAE1B,GAAIA,IAAY7F,EAAY6F,QAAS,CACnCD,EAAM3B,OAAO0B,GACb,KACF,CAEAE,EAAU1I,EAAI4I,WAAWF,EAC3B,CACF,EAyBI,mBAAqBtB,EAvBXvE,YAAEA,IACd,MAAM4F,EAAQ5F,EAAY4E,QAEtBgB,EAAM7G,QACR6G,EAAMrB,MAEV,EAmBI,mCAMA,CANsCoB,GACpC,MAAMxG,aAAEA,GAAiBwG,EAAI3F,YAE7Bb,EAAaoF,KAAKoB,GAClBxG,EAAagB,MAAMwF,EAAKA,EAAI3F,YAAYU,OAAOS,IAAIC,MACnDjC,EAAa6G,mBAAmBL,EAAI,EAGtC,0CAA4CA,GAAQA,EAAI3F,YAAYb,aAAa8G,YAAYN,GAC7F,6BAA8B9I,EAAUqJ,kBACxC,mCAAoCrJ,EAAUqJ,kBAC9C,yCAA2CP,GACzCA,EAAI3F,YAAYb,aAAagH,yBAAyBR,GACxD,mCAAqCA,GAAQA,EAAI3F,YAAYb,aAAagH,yBAAyBR,KAKvG,SAASlC,EAAiB1F,EAAWqI,EAAYC,EAAYC,GAC3D,MAAMC,EAAK,EAAIxI,EACf,OAAOwI,EAAKA,EAAKH,EAAK,EAAIG,EAAKxI,EAAIsI,EAAKtI,EAAIA,EAAIuI,CAClD,CAkBA,SAASvC,EAAYhG,EAAWyI,EAAWC,EAAWC,GAEpD,OAAQD,GADR1I,GAAK2I,IACY3I,EAAI,GAAKyI,CAC5B,CAAC3B,QAAAnH,QAEckH"
}