{
	"version": 3,
	"names": [
		"container",
		"is",
		"window",
		"document",
		"body",
		"x",
		"scrollWidth",
		"y",
		"scrollHeight",
		"interaction",
		"element",
		"func",
		"scrollOptions",
		"interactable",
		"options",
		"prepared",
		"name",
		"autoScroll",
		"enabled",
		"scrollContainer",
		"getContainer",
		"prevSize",
		"getScroll",
		"curSize",
		"domUtils",
		"e",
		"r",
		"__esModule",
		"default",
		"t",
		"_getRequireWildcardCache",
		"has",
		"get",
		"n",
		"__proto__",
		"a",
		"Object",
		"defineProperty",
		"getOwnPropertyDescriptor",
		"u",
		"prototype",
		"hasOwnProperty",
		"call",
		"i",
		"set",
		"_interopRequireWildcard",
		"require",
		"_isProd",
		"_interopRequireDefault",
		"_rafProd",
		"_rectProd",
		"_windowProd",
		"obj",
		"WeakMap",
		"defaults",
		"margin",
		"speed",
		"now",
		"Date",
		"isScrolling",
		"prevTime",
		"start",
		"raf",
		"cancel",
		"request",
		"scroll",
		"stop",
		"actionName",
		"dt",
		"s",
		"scrollBy",
		"prevScroll",
		"scrollLeft",
		"scrollTop",
		"curScroll",
		"delta",
		"fire",
		"type",
		"target",
		"check",
		"_options$actionName$a",
		"onInteractionMove",
		"pointer",
		"interacting",
		"simulation",
		"top",
		"right",
		"bottom",
		"left",
		"clientX",
		"clientY",
		"innerWidth",
		"innerHeight",
		"rect",
		"getElementClientRect",
		"value",
		"string",
		"getStringOptionResult",
		"getWindow",
		"autoScrollPlugin",
		"id",
		"install",
		"scope",
		"actions",
		"phaselessTypes",
		"autoscroll",
		"perAction",
		"listeners",
		"arg",
		"exports"
	],
	"sources": [
		"plugin.ts"
	],
	"sourcesContent": [
		"import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, PointerType } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport { getStringOptionResult } from '@interactjs/utils/rect'\nimport { getWindow } from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoScroll: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoScroll?: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    autoScroll?: AutoScrollOptions\n  }\n}\n\nexport interface AutoScrollOptions {\n  container?: Window | HTMLElement | string\n  margin?: number\n  distance?: number\n  interval?: number\n  speed?: number\n  enabled?: boolean\n}\n\nfunction install(scope: Scope) {\n  const { defaults, actions } = scope\n\n  scope.autoScroll = autoScroll\n  autoScroll.now = () => scope.now()\n\n  actions.phaselessTypes.autoscroll = true\n  defaults.perAction.autoScroll = autoScroll.defaults\n}\n\nconst autoScroll = {\n  defaults: {\n    enabled: false,\n    margin: 60,\n\n    // the item that is scrolled (Window or HTMLElement)\n    container: null as AutoScrollOptions['container'],\n\n    // the scroll speed in pixels per second\n    speed: 300,\n  } as AutoScrollOptions,\n\n  now: Date.now,\n\n  interaction: null as Interaction<ActionName> | null,\n  i: 0, // the handle returned by window.setInterval\n\n  // Direction each pulse is to scroll in\n  x: 0,\n  y: 0,\n\n  isScrolling: false,\n  prevTime: 0,\n  margin: 0,\n  speed: 0,\n\n  start(interaction: Interaction) {\n    autoScroll.isScrolling = true\n    raf.cancel(autoScroll.i)\n\n    interaction.autoScroll = autoScroll\n    autoScroll.interaction = interaction\n    autoScroll.prevTime = autoScroll.now()\n    autoScroll.i = raf.request(autoScroll.scroll)\n  },\n\n  stop() {\n    autoScroll.isScrolling = false\n    if (autoScroll.interaction) {\n      autoScroll.interaction.autoScroll = null\n    }\n    raf.cancel(autoScroll.i)\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll() {\n    const { interaction } = autoScroll\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n    const now = autoScroll.now()\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000\n    // displacement\n    const s = options.speed * dt\n\n    if (s >= 1) {\n      const scrollBy = {\n        x: autoScroll.x * s,\n        y: autoScroll.y * s,\n      }\n\n      if (scrollBy.x || scrollBy.y) {\n        const prevScroll = getScroll(container)\n\n        if (is.window(container)) {\n          container.scrollBy(scrollBy.x, scrollBy.y)\n        } else if (container) {\n          container.scrollLeft += scrollBy.x\n          container.scrollTop += scrollBy.y\n        }\n\n        const curScroll = getScroll(container)\n        const delta = {\n          x: curScroll.x - prevScroll.x,\n          y: curScroll.y - prevScroll.y,\n        }\n\n        if (delta.x || delta.y) {\n          interactable.fire({\n            type: 'autoscroll',\n            target: element,\n            interactable,\n            delta,\n            interaction,\n            container,\n          })\n        }\n      }\n\n      autoScroll.prevTime = now\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i)\n      autoScroll.i = raf.request(autoScroll.scroll)\n    }\n  },\n  check(interactable: Interactable, actionName: ActionName) {\n    const options = interactable.options\n\n    return options[actionName].autoScroll?.enabled\n  },\n  onInteractionMove<T extends ActionName>({\n    interaction,\n    pointer,\n  }: {\n    interaction: Interaction<T>\n    pointer: PointerType\n  }) {\n    if (\n      !(interaction.interacting() && autoScroll.check(interaction.interactable, interaction.prepared.name))\n    ) {\n      return\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0\n      return\n    }\n\n    let top: boolean\n    let right: boolean\n    let bottom: boolean\n    let left: boolean\n\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n\n    if (is.window(container)) {\n      left = pointer.clientX < autoScroll.margin\n      top = pointer.clientY < autoScroll.margin\n      right = pointer.clientX > container.innerWidth - autoScroll.margin\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin\n    } else {\n      const rect = domUtils.getElementClientRect(container)\n\n      left = pointer.clientX < rect.left + autoScroll.margin\n      top = pointer.clientY < rect.top + autoScroll.margin\n      right = pointer.clientX > rect.right - autoScroll.margin\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin\n    }\n\n    autoScroll.x = right ? 1 : left ? -1 : 0\n    autoScroll.y = bottom ? 1 : top ? -1 : 0\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin\n      autoScroll.speed = options.speed\n\n      autoScroll.start(interaction)\n    }\n  },\n}\n\nexport function getContainer(value: any, interactable: Interactable, element: Element) {\n  return (\n    (is.string(value) ? getStringOptionResult(value, interactable, element) : value) || getWindow(element)\n  )\n}\n\nexport function getScroll(container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollLeft, y: container.scrollTop }\n}\n\nexport function getScrollSize(container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollWidth, y: container.scrollHeight }\n}\n\nexport function getScrollSizeDelta<T extends ActionName>(\n  {\n    interaction,\n    element,\n  }: {\n    interaction: Partial<Interaction<T>>\n    element: Element\n  },\n  func: any,\n) {\n  const scrollOptions = interaction && interaction.interactable.options[interaction.prepared.name].autoScroll\n\n  if (!scrollOptions || !scrollOptions.enabled) {\n    func()\n    return { x: 0, y: 0 }\n  }\n\n  const scrollContainer = getContainer(scrollOptions.container, interaction.interactable, element)\n\n  const prevSize = getScroll(scrollContainer)\n  func()\n  const curSize = getScroll(scrollContainer)\n\n  return {\n    x: curSize.x - prevSize.x,\n    y: curSize.y - prevSize.y,\n  }\n}\n\nconst autoScrollPlugin: Plugin = {\n  id: 'auto-scroll',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoScroll = null\n    },\n\n    'interactions:destroy': ({ interaction }) => {\n      interaction.autoScroll = null\n      autoScroll.stop()\n      if (autoScroll.interaction) {\n        autoScroll.interaction = null\n      }\n    },\n\n    'interactions:stop': autoScroll.stop,\n\n    'interactions:action-move': (arg: any) => autoScroll.onInteractionMove(arg),\n  },\n}\n\nexport default autoScrollPlugin\n"
	],
	"mappings": "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"
}