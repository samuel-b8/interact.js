{
	"version": 3,
	"names": [
		"_InteractionProd",
		"require",
		"rectUtils",
		"e",
		"r",
		"__esModule",
		"default",
		"t",
		"_getRequireWildcardCache",
		"has",
		"get",
		"n",
		"__proto__",
		"a",
		"Object",
		"defineProperty",
		"getOwnPropertyDescriptor",
		"u",
		"prototype",
		"hasOwnProperty",
		"call",
		"i",
		"set",
		"_interopRequireWildcard",
		"WeakMap",
		"addTotal",
		"interaction",
		"pointerIsDown",
		"addToCoords",
		"coords",
		"cur",
		"offset",
		"total",
		"pending",
		"x",
		"y",
		"beforeAction",
		"applyPending",
		"hasPending",
		"delta",
		"addEdges",
		"edges",
		"rect",
		"offsetBy",
		"this",
		"page",
		"client",
		"_ProxyMethods",
		"id",
		"before",
		"install",
		"scope",
		"Interaction",
		"listeners",
		"interactions:update-pointer",
		"beforeEnd",
		"move",
		"end",
		"exports"
	],
	"sources": [
		"plugin.ts"
	],
	"sourcesContent": [
		"import type Interaction from '@interactjs/core/Interaction'\nimport { _ProxyMethods } from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\nimport type { Point } from '@interactjs/core/types'\nimport * as rectUtils from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    offsetBy?: typeof offsetBy\n    offset: {\n      total: Point\n      pending: Point\n    }\n  }\n\n  enum _ProxyMethods {\n    offsetBy = '',\n  }\n}\n\n;(_ProxyMethods as any).offsetBy = ''\n\nexport function addTotal(interaction: Interaction) {\n  if (!interaction.pointerIsDown) {\n    return\n  }\n\n  addToCoords(interaction.coords.cur, interaction.offset.total)\n\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nfunction beforeAction({ interaction }: { interaction: Interaction }) {\n  applyPending(interaction)\n}\n\nfunction beforeEnd({ interaction }: { interaction: Interaction }): boolean | void {\n  const hadPending = applyPending(interaction)\n\n  if (!hadPending) return\n\n  interaction.move({ offset: true })\n  interaction.end()\n\n  return false\n}\n\nfunction end({ interaction }: { interaction: Interaction }) {\n  interaction.offset.total.x = 0\n  interaction.offset.total.y = 0\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nexport function applyPending(interaction: Interaction) {\n  if (!hasPending(interaction)) {\n    return false\n  }\n\n  const { pending } = interaction.offset\n\n  addToCoords(interaction.coords.cur, pending)\n  addToCoords(interaction.coords.delta, pending)\n  rectUtils.addEdges(interaction.edges, interaction.rect, pending)\n\n  pending.x = 0\n  pending.y = 0\n\n  return true\n}\n\nfunction offsetBy(this: Interaction, { x, y }: Point) {\n  this.offset.pending.x += x\n  this.offset.pending.y += y\n\n  this.offset.total.x += x\n  this.offset.total.y += y\n}\n\nfunction addToCoords({ page, client }, { x, y }: Point) {\n  page.x += x\n  page.y += y\n  client.x += x\n  client.y += y\n}\n\nfunction hasPending(interaction: Interaction) {\n  return !!(interaction.offset.pending.x || interaction.offset.pending.y)\n}\n\nconst offset: Plugin = {\n  id: 'offset',\n  before: ['modifiers', 'pointer-events', 'actions', 'inertia'],\n  install(scope) {\n    scope.Interaction.prototype.offsetBy = offsetBy\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.offset = {\n        total: { x: 0, y: 0 },\n        pending: { x: 0, y: 0 },\n      }\n    },\n    'interactions:update-pointer': ({ interaction }) => addTotal(interaction),\n    'interactions:before-action-start': beforeAction,\n    'interactions:before-action-move': beforeAction,\n    'interactions:before-action-end': beforeEnd,\n    'interactions:stop': end,\n  },\n}\n\nexport default offset\n"
	],
	"mappings": "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"
}