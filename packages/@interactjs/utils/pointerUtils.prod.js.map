{
	"version": 3,
	"names": [
		"coords",
		"page",
		"this",
		"client",
		"timeStamp",
		"pageX",
		"x",
		"pageY",
		"y",
		"clientX",
		"clientY",
		"pointerId",
		"target",
		"type",
		"pointerType",
		"buttons",
		"preventDefault",
		"dest",
		"src",
		"event",
		"path",
		"is",
		"func",
		"composedPath",
		"domUtils",
		"getActualElement",
		"currentTarget",
		"pointer",
		"number",
		"identifier",
		"string",
		"undefined",
		"test",
		"dom",
		"Touch",
		"targetObj",
		"prev",
		"cur",
		"delta",
		"dt",
		"Math",
		"max",
		"pointers",
		"length",
		"pointerAverage",
		"getPageXY",
		"getClientXY",
		"deltaSource",
		"sourceX",
		"sourceY",
		"touches",
		"getTouchPair",
		"dx",
		"dy",
		"atan2",
		"PI",
		"minX",
		"min",
		"minY",
		"maxX",
		"maxY",
		"left",
		"top",
		"right",
		"bottom",
		"width",
		"height",
		"hypot",
		"_browser",
		"_interopRequireDefault",
		"require",
		"_domObjects",
		"e",
		"r",
		"__esModule",
		"default",
		"t",
		"_getRequireWildcardCache",
		"has",
		"get",
		"n",
		"__proto__",
		"a",
		"Object",
		"defineProperty",
		"getOwnPropertyDescriptor",
		"u",
		"prototype",
		"hasOwnProperty",
		"call",
		"i",
		"set",
		"_interopRequireWildcard",
		"_hypot",
		"_is",
		"_pointerExtend",
		"WeakMap",
		"obj",
		"isNativePointer",
		"Event",
		"getXY",
		"xy",
		"browser",
		"isOperaMobile",
		"window",
		"scrollX",
		"scrollY",
		"array",
		"changedTouches",
		"average",
		"screenX",
		"screenY",
		"prop"
	],
	"sources": [
		"pointerUtils.ts"
	],
	"sourcesContent": [
		"import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { CoordsSetMember, PointerType, Point, PointerEventType, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport is from './is'\nimport pointerExtend from './pointerExtend'\n\nexport function copyCoords(dest: CoordsSetMember, src: CoordsSetMember) {\n  dest.page = dest.page || ({} as any)\n  dest.page.x = src.page.x\n  dest.page.y = src.page.y\n\n  dest.client = dest.client || ({} as any)\n  dest.client.x = src.client.x\n  dest.client.y = src.client.y\n\n  dest.timeStamp = src.timeStamp\n}\n\nexport function setCoordDeltas(targetObj: CoordsSetMember, prev: CoordsSetMember, cur: CoordsSetMember) {\n  targetObj.page.x = cur.page.x - prev.page.x\n  targetObj.page.y = cur.page.y - prev.page.y\n  targetObj.client.x = cur.client.x - prev.client.x\n  targetObj.client.y = cur.client.y - prev.client.y\n  targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n}\n\nexport function setCoordVelocity(targetObj: CoordsSetMember, delta: CoordsSetMember) {\n  const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n  targetObj.page.x = delta.page.x / dt\n  targetObj.page.y = delta.page.y / dt\n  targetObj.client.x = delta.client.x / dt\n  targetObj.client.y = delta.client.y / dt\n  targetObj.timeStamp = dt\n}\n\nexport function setZeroCoords(targetObj: CoordsSetMember) {\n  targetObj.page.x = 0\n  targetObj.page.y = 0\n  targetObj.client.x = 0\n  targetObj.client.y = 0\n}\n\nexport function isNativePointer(pointer: any) {\n  return pointer instanceof dom.Event || pointer instanceof dom.Touch\n}\n\n// Get specified X/Y coords for mouse or event.touches[0]\nexport function getXY(type: string, pointer: PointerType | InteractEvent, xy: Point) {\n  xy = xy || ({} as Point)\n  type = type || 'page'\n\n  xy.x = pointer[(type + 'X') as 'pageX']\n  xy.y = pointer[(type + 'Y') as 'pageY']\n\n  return xy\n}\n\nexport function getPageXY(pointer: PointerType | InteractEvent, page?: Point) {\n  page = page || { x: 0, y: 0 }\n\n  // Opera Mobile handles the viewport and scrolling oddly\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    getXY('screen', pointer, page)\n\n    page.x += window.scrollX\n    page.y += window.scrollY\n  } else {\n    getXY('page', pointer, page)\n  }\n\n  return page\n}\n\nexport function getClientXY(pointer: PointerType, client: Point) {\n  client = client || ({} as any)\n\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    // Opera Mobile handles the viewport and scrolling oddly\n    getXY('screen', pointer, client)\n  } else {\n    getXY('client', pointer, client)\n  }\n\n  return client\n}\n\nexport function getPointerId(pointer: { pointerId?: number; identifier?: number; type?: string }) {\n  return is.number(pointer.pointerId) ? pointer.pointerId! : pointer.identifier!\n}\n\nexport function setCoords(dest: CoordsSetMember, pointers: any[], timeStamp: number) {\n  const pointer = pointers.length > 1 ? pointerAverage(pointers) : pointers[0]\n\n  getPageXY(pointer, dest.page)\n  getClientXY(pointer, dest.client)\n\n  dest.timeStamp = timeStamp\n}\n\nexport function getTouchPair(event: TouchEvent | PointerType[]) {\n  const touches: PointerType[] = []\n\n  // array of touches is supplied\n  if (is.array(event)) {\n    touches[0] = event[0]\n    touches[1] = event[1]\n  }\n  // an event\n  else {\n    if (event.type === 'touchend') {\n      if (event.touches.length === 1) {\n        touches[0] = event.touches[0]\n        touches[1] = event.changedTouches[0]\n      } else if (event.touches.length === 0) {\n        touches[0] = event.changedTouches[0]\n        touches[1] = event.changedTouches[1]\n      }\n    } else {\n      touches[0] = event.touches[0]\n      touches[1] = event.touches[1]\n    }\n  }\n\n  return touches\n}\n\nexport function pointerAverage(pointers: PointerType[]) {\n  const average = {\n    pageX: 0,\n    pageY: 0,\n    clientX: 0,\n    clientY: 0,\n    screenX: 0,\n    screenY: 0,\n  }\n\n  type CoordKeys = keyof typeof average\n\n  for (const pointer of pointers) {\n    for (const prop in average) {\n      average[prop as CoordKeys] += pointer[prop as CoordKeys]\n    }\n  }\n  for (const prop in average) {\n    average[prop as CoordKeys] /= pointers.length\n  }\n\n  return average\n}\n\nexport function touchBBox(event: PointerType[]) {\n  if (!event.length) {\n    return null\n  }\n\n  const touches = getTouchPair(event)\n  const minX = Math.min(touches[0].pageX, touches[1].pageX)\n  const minY = Math.min(touches[0].pageY, touches[1].pageY)\n  const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n  const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n  return {\n    x: minX,\n    y: minY,\n    left: minX,\n    top: minY,\n    right: maxX,\n    bottom: maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  }\n}\n\nexport function touchDistance(event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n\n  const dx = touches[0][sourceX] - touches[1][sourceX]\n  const dy = touches[0][sourceY] - touches[1][sourceY]\n\n  return hypot(dx, dy)\n}\n\nexport function touchAngle(event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n  const dx = touches[1][sourceX] - touches[0][sourceX]\n  const dy = touches[1][sourceY] - touches[0][sourceY]\n  const angle = (180 * Math.atan2(dy, dx)) / Math.PI\n\n  return angle\n}\n\nexport function getPointerType(pointer: { pointerType?: string; identifier?: number; type?: string }) {\n  return is.string(pointer.pointerType)\n    ? pointer.pointerType\n    : is.number(pointer.pointerType)\n      ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]!\n      : // if the PointerEvent API isn't available, then the \"pointer\" must\n        // be either a MouseEvent, TouchEvent, or Touch object\n        /touch/.test(pointer.type || '') || pointer instanceof dom.Touch\n        ? 'touch'\n        : 'mouse'\n}\n\n// [ event.target, event.currentTarget ]\nexport function getEventTargets(event: Event) {\n  const path = is.func(event.composedPath)\n    ? (event.composedPath() as Element[])\n    : (event as unknown as { path: Element[] }).path\n\n  return [\n    domUtils.getActualElement(path ? path[0] : (event.target as Element)),\n    domUtils.getActualElement(event.currentTarget as Element),\n  ]\n}\n\nexport function newCoords(): CoordsSetMember {\n  return {\n    page: { x: 0, y: 0 },\n    client: { x: 0, y: 0 },\n    timeStamp: 0,\n  }\n}\n\nexport function coordsToEvent(coords: MockCoords) {\n  const event = {\n    coords,\n    get page() {\n      return this.coords.page\n    },\n    get client() {\n      return this.coords.client\n    },\n    get timeStamp() {\n      return this.coords.timeStamp\n    },\n    get pageX() {\n      return this.coords.page.x\n    },\n    get pageY() {\n      return this.coords.page.y\n    },\n    get clientX() {\n      return this.coords.client.x\n    },\n    get clientY() {\n      return this.coords.client.y\n    },\n    get pointerId() {\n      return this.coords.pointerId\n    },\n    get target() {\n      return this.coords.target\n    },\n    get type() {\n      return this.coords.type\n    },\n    get pointerType() {\n      return this.coords.pointerType\n    },\n    get buttons() {\n      return this.coords.buttons\n    },\n    preventDefault() {},\n  }\n\n  return event as typeof event & PointerType & PointerEventType\n}\n\nexport interface MockCoords {\n  page: Point\n  client: Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n  buttons?: number\n}\n\nexport { pointerExtend }\n"
	],
	"mappings": "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"
}