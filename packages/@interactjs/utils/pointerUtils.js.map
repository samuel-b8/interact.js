{
	"version": 3,
	"names": [
		"_browser",
		"_interopRequireDefault",
		"require",
		"_domObjects",
		"domUtils",
		"_interopRequireWildcard",
		"_hypot",
		"_is",
		"_pointerExtend",
		"_getRequireWildcardCache",
		"e",
		"WeakMap",
		"r",
		"t",
		"__esModule",
		"default",
		"has",
		"get",
		"n",
		"__proto__",
		"a",
		"Object",
		"defineProperty",
		"getOwnPropertyDescriptor",
		"u",
		"prototype",
		"hasOwnProperty",
		"call",
		"i",
		"set",
		"obj",
		"copyCoords",
		"dest",
		"src",
		"page",
		"x",
		"y",
		"client",
		"timeStamp",
		"setCoordDeltas",
		"targetObj",
		"prev",
		"cur",
		"setCoordVelocity",
		"delta",
		"dt",
		"Math",
		"max",
		"setZeroCoords",
		"isNativePointer",
		"pointer",
		"dom",
		"Event",
		"Touch",
		"getXY",
		"type",
		"xy",
		"getPageXY",
		"browser",
		"isOperaMobile",
		"window",
		"scrollX",
		"scrollY",
		"getClientXY",
		"getPointerId",
		"is",
		"number",
		"pointerId",
		"identifier",
		"setCoords",
		"pointers",
		"length",
		"pointerAverage",
		"getTouchPair",
		"event",
		"touches",
		"array",
		"changedTouches",
		"average",
		"pageX",
		"pageY",
		"clientX",
		"clientY",
		"screenX",
		"screenY",
		"prop",
		"touchBBox",
		"minX",
		"min",
		"minY",
		"maxX",
		"maxY",
		"left",
		"top",
		"right",
		"bottom",
		"width",
		"height",
		"touchDistance",
		"deltaSource",
		"sourceX",
		"sourceY",
		"dx",
		"dy",
		"hypot",
		"touchAngle",
		"angle",
		"atan2",
		"PI",
		"getPointerType",
		"string",
		"pointerType",
		"undefined",
		"test",
		"getEventTargets",
		"path",
		"func",
		"composedPath",
		"getActualElement",
		"target",
		"currentTarget",
		"newCoords",
		"coordsToEvent",
		"coords",
		"buttons",
		"preventDefault"
	],
	"sources": [
		"pointerUtils.ts"
	],
	"sourcesContent": [
		"import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { CoordsSetMember, PointerType, Point, PointerEventType, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport is from './is'\nimport pointerExtend from './pointerExtend'\n\nexport function copyCoords(dest: CoordsSetMember, src: CoordsSetMember) {\n  dest.page = dest.page || ({} as any)\n  dest.page.x = src.page.x\n  dest.page.y = src.page.y\n\n  dest.client = dest.client || ({} as any)\n  dest.client.x = src.client.x\n  dest.client.y = src.client.y\n\n  dest.timeStamp = src.timeStamp\n}\n\nexport function setCoordDeltas(targetObj: CoordsSetMember, prev: CoordsSetMember, cur: CoordsSetMember) {\n  targetObj.page.x = cur.page.x - prev.page.x\n  targetObj.page.y = cur.page.y - prev.page.y\n  targetObj.client.x = cur.client.x - prev.client.x\n  targetObj.client.y = cur.client.y - prev.client.y\n  targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n}\n\nexport function setCoordVelocity(targetObj: CoordsSetMember, delta: CoordsSetMember) {\n  const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n  targetObj.page.x = delta.page.x / dt\n  targetObj.page.y = delta.page.y / dt\n  targetObj.client.x = delta.client.x / dt\n  targetObj.client.y = delta.client.y / dt\n  targetObj.timeStamp = dt\n}\n\nexport function setZeroCoords(targetObj: CoordsSetMember) {\n  targetObj.page.x = 0\n  targetObj.page.y = 0\n  targetObj.client.x = 0\n  targetObj.client.y = 0\n}\n\nexport function isNativePointer(pointer: any) {\n  return pointer instanceof dom.Event || pointer instanceof dom.Touch\n}\n\n// Get specified X/Y coords for mouse or event.touches[0]\nexport function getXY(type: string, pointer: PointerType | InteractEvent, xy: Point) {\n  xy = xy || ({} as Point)\n  type = type || 'page'\n\n  xy.x = pointer[(type + 'X') as 'pageX']\n  xy.y = pointer[(type + 'Y') as 'pageY']\n\n  return xy\n}\n\nexport function getPageXY(pointer: PointerType | InteractEvent, page?: Point) {\n  page = page || { x: 0, y: 0 }\n\n  // Opera Mobile handles the viewport and scrolling oddly\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    getXY('screen', pointer, page)\n\n    page.x += window.scrollX\n    page.y += window.scrollY\n  } else {\n    getXY('page', pointer, page)\n  }\n\n  return page\n}\n\nexport function getClientXY(pointer: PointerType, client: Point) {\n  client = client || ({} as any)\n\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    // Opera Mobile handles the viewport and scrolling oddly\n    getXY('screen', pointer, client)\n  } else {\n    getXY('client', pointer, client)\n  }\n\n  return client\n}\n\nexport function getPointerId(pointer: { pointerId?: number; identifier?: number; type?: string }) {\n  return is.number(pointer.pointerId) ? pointer.pointerId! : pointer.identifier!\n}\n\nexport function setCoords(dest: CoordsSetMember, pointers: any[], timeStamp: number) {\n  const pointer = pointers.length > 1 ? pointerAverage(pointers) : pointers[0]\n\n  getPageXY(pointer, dest.page)\n  getClientXY(pointer, dest.client)\n\n  dest.timeStamp = timeStamp\n}\n\nexport function getTouchPair(event: TouchEvent | PointerType[]) {\n  const touches: PointerType[] = []\n\n  // array of touches is supplied\n  if (is.array(event)) {\n    touches[0] = event[0]\n    touches[1] = event[1]\n  }\n  // an event\n  else {\n    if (event.type === 'touchend') {\n      if (event.touches.length === 1) {\n        touches[0] = event.touches[0]\n        touches[1] = event.changedTouches[0]\n      } else if (event.touches.length === 0) {\n        touches[0] = event.changedTouches[0]\n        touches[1] = event.changedTouches[1]\n      }\n    } else {\n      touches[0] = event.touches[0]\n      touches[1] = event.touches[1]\n    }\n  }\n\n  return touches\n}\n\nexport function pointerAverage(pointers: PointerType[]) {\n  const average = {\n    pageX: 0,\n    pageY: 0,\n    clientX: 0,\n    clientY: 0,\n    screenX: 0,\n    screenY: 0,\n  }\n\n  type CoordKeys = keyof typeof average\n\n  for (const pointer of pointers) {\n    for (const prop in average) {\n      average[prop as CoordKeys] += pointer[prop as CoordKeys]\n    }\n  }\n  for (const prop in average) {\n    average[prop as CoordKeys] /= pointers.length\n  }\n\n  return average\n}\n\nexport function touchBBox(event: PointerType[]) {\n  if (!event.length) {\n    return null\n  }\n\n  const touches = getTouchPair(event)\n  const minX = Math.min(touches[0].pageX, touches[1].pageX)\n  const minY = Math.min(touches[0].pageY, touches[1].pageY)\n  const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n  const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n  return {\n    x: minX,\n    y: minY,\n    left: minX,\n    top: minY,\n    right: maxX,\n    bottom: maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  }\n}\n\nexport function touchDistance(event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n\n  const dx = touches[0][sourceX] - touches[1][sourceX]\n  const dy = touches[0][sourceY] - touches[1][sourceY]\n\n  return hypot(dx, dy)\n}\n\nexport function touchAngle(event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n  const dx = touches[1][sourceX] - touches[0][sourceX]\n  const dy = touches[1][sourceY] - touches[0][sourceY]\n  const angle = (180 * Math.atan2(dy, dx)) / Math.PI\n\n  return angle\n}\n\nexport function getPointerType(pointer: { pointerType?: string; identifier?: number; type?: string }) {\n  return is.string(pointer.pointerType)\n    ? pointer.pointerType\n    : is.number(pointer.pointerType)\n      ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]!\n      : // if the PointerEvent API isn't available, then the \"pointer\" must\n        // be either a MouseEvent, TouchEvent, or Touch object\n        /touch/.test(pointer.type || '') || pointer instanceof dom.Touch\n        ? 'touch'\n        : 'mouse'\n}\n\n// [ event.target, event.currentTarget ]\nexport function getEventTargets(event: Event) {\n  const path = is.func(event.composedPath)\n    ? (event.composedPath() as Element[])\n    : (event as unknown as { path: Element[] }).path\n\n  return [\n    domUtils.getActualElement(path ? path[0] : (event.target as Element)),\n    domUtils.getActualElement(event.currentTarget as Element),\n  ]\n}\n\nexport function newCoords(): CoordsSetMember {\n  return {\n    page: { x: 0, y: 0 },\n    client: { x: 0, y: 0 },\n    timeStamp: 0,\n  }\n}\n\nexport function coordsToEvent(coords: MockCoords) {\n  const event = {\n    coords,\n    get page() {\n      return this.coords.page\n    },\n    get client() {\n      return this.coords.client\n    },\n    get timeStamp() {\n      return this.coords.timeStamp\n    },\n    get pageX() {\n      return this.coords.page.x\n    },\n    get pageY() {\n      return this.coords.page.y\n    },\n    get clientX() {\n      return this.coords.client.x\n    },\n    get clientY() {\n      return this.coords.client.y\n    },\n    get pointerId() {\n      return this.coords.pointerId\n    },\n    get target() {\n      return this.coords.target\n    },\n    get type() {\n      return this.coords.type\n    },\n    get pointerType() {\n      return this.coords.pointerType\n    },\n    get buttons() {\n      return this.coords.buttons\n    },\n    preventDefault() {},\n  }\n\n  return event as typeof event & PointerType & PointerEventType\n}\n\nexport interface MockCoords {\n  page: Point\n  client: Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n  buttons?: number\n}\n\nexport { pointerExtend }\n"
	],
	"mappings": "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"
}