{
	"version": 3,
	"names": [
		"browser",
		"domObjects",
		"is",
		"win",
		"nodeContains",
		"parent",
		"child",
		"contains",
		"parentNode",
		"closest",
		"element",
		"selector",
		"matchesSelector",
		"node",
		"docFrag",
		"host",
		"window",
		"realWindow",
		"replace",
		"prefixedMatchesSelector",
		"getParent",
		"el",
		"indexOfDeepestElement",
		"elements",
		"deepestNodeParents",
		"deepestNodeIndex",
		"i",
		"length",
		"currentNode",
		"deepestNode",
		"currentNodeParent",
		"deepestNodeParent",
		"ownerDocument",
		"zIndexIsHigherThan",
		"getNodeParents",
		"ancestryStart",
		"HTMLElement",
		"SVGElement",
		"SVGSVGElement",
		"ownerSVGElement",
		"currentNodeParents",
		"commonIndex",
		"parents",
		"lastChild",
		"previousSibling",
		"limit",
		"parentParent",
		"unshift",
		"higherNode",
		"lowerNode",
		"higherIndex",
		"parseInt",
		"getWindow",
		"getComputedStyle",
		"zIndex",
		"lowerIndex",
		"matchesUpTo",
		"getActualElement",
		"correspondingUseElement",
		"getScrollXY",
		"relevantWindow",
		"x",
		"scrollX",
		"document",
		"documentElement",
		"scrollLeft",
		"y",
		"scrollY",
		"scrollTop",
		"getElementClientRect",
		"clientRect",
		"getBoundingClientRect",
		"getClientRects",
		"left",
		"right",
		"top",
		"bottom",
		"width",
		"height",
		"getElementRect",
		"isIOS7",
		"scroll",
		"getPath",
		"path",
		"push",
		"trySelector",
		"value",
		"string",
		"querySelector"
	],
	"sources": [
		"domUtils.ts"
	],
	"sourcesContent": [
		"import type { Rect, Target, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport domObjects from './domObjects'\nimport is from './is'\nimport * as win from './window'\n\nexport function nodeContains(parent: Node, child: Node) {\n  if (parent.contains) {\n    return parent.contains(child as Node)\n  }\n\n  while (child) {\n    if (child === parent) {\n      return true\n    }\n\n    child = (child as Node).parentNode\n  }\n\n  return false\n}\n\nexport function closest(element: Node, selector: string) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return element\n    }\n\n    element = parentNode(element)\n  }\n\n  return null\n}\n\nexport function parentNode(node: Node | Document) {\n  let parent = node.parentNode\n\n  if (is.docFrag(parent)) {\n    // skip past #shado-root fragments\n    // tslint:disable-next-line\n    while ((parent = (parent as any).host) && is.docFrag(parent)) {\n      continue\n    }\n\n    return parent\n  }\n\n  return parent\n}\n\nexport function matchesSelector(element: Element, selector: string) {\n  // remove /deep/ from selectors if shadowDOM polyfill is used\n  if (win.window !== win.realWindow) {\n    selector = selector.replace(/\\/deep\\//g, ' ')\n  }\n\n  return element[browser.prefixedMatchesSelector](selector)\n}\n\nconst getParent = (el: Node | Document | ShadowRoot) => el.parentNode || (el as ShadowRoot).host\n\n// Test for the element that's \"above\" all other qualifiers\nexport function indexOfDeepestElement(elements: Element[] | NodeListOf<globalThis.Element>) {\n  let deepestNodeParents: Node[] = []\n  let deepestNodeIndex: number\n\n  for (let i = 0; i < elements.length; i++) {\n    const currentNode = elements[i]\n    const deepestNode: Node = elements[deepestNodeIndex]\n\n    // node may appear in elements array multiple times\n    if (!currentNode || i === deepestNodeIndex) {\n      continue\n    }\n\n    if (!deepestNode) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    const currentNodeParent = getParent(currentNode)\n    const deepestNodeParent = getParent(deepestNode)\n\n    // check if the deepest or current are document.documentElement/rootElement\n    // - if the current node is, do nothing and continue\n    if (currentNodeParent === currentNode.ownerDocument) {\n      continue\n    }\n    // - if deepest is, update with the current node and continue to next\n    else if (deepestNodeParent === currentNode.ownerDocument) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    // compare zIndex of siblings\n    if (currentNodeParent === deepestNodeParent) {\n      if (zIndexIsHigherThan(currentNode, deepestNode)) {\n        deepestNodeIndex = i\n      }\n\n      continue\n    }\n\n    // populate the ancestry array for the latest deepest node\n    deepestNodeParents = deepestNodeParents.length ? deepestNodeParents : getNodeParents(deepestNode)\n\n    let ancestryStart: Node\n\n    // if the deepest node is an HTMLElement and the current node is a non root svg element\n    if (\n      deepestNode instanceof domObjects.HTMLElement &&\n      currentNode instanceof domObjects.SVGElement &&\n      !(currentNode instanceof domObjects.SVGSVGElement)\n    ) {\n      // TODO: is this check necessary? Was this for HTML elements embedded in SVG?\n      if (currentNode === deepestNodeParent) {\n        continue\n      }\n\n      ancestryStart = currentNode.ownerSVGElement\n    } else {\n      ancestryStart = currentNode\n    }\n\n    const currentNodeParents = getNodeParents(ancestryStart, deepestNode.ownerDocument)\n    let commonIndex = 0\n\n    // get (position of closest common ancestor) + 1\n    while (\n      currentNodeParents[commonIndex] &&\n      currentNodeParents[commonIndex] === deepestNodeParents[commonIndex]\n    ) {\n      commonIndex++\n    }\n\n    const parents = [\n      currentNodeParents[commonIndex - 1],\n      currentNodeParents[commonIndex],\n      deepestNodeParents[commonIndex],\n    ]\n\n    if (parents[0]) {\n      let child = parents[0].lastChild\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestNodeIndex = i\n          deepestNodeParents = currentNodeParents\n\n          break\n        } else if (child === parents[2]) {\n          break\n        }\n\n        child = child.previousSibling\n      }\n    }\n  }\n\n  return deepestNodeIndex\n}\n\nfunction getNodeParents(node: Node, limit?: Node) {\n  const parents: Node[] = []\n  let parent: Node = node\n  let parentParent: Node\n\n  while ((parentParent = getParent(parent)) && parent !== limit && parentParent !== parent.ownerDocument) {\n    parents.unshift(parent)\n    parent = parentParent\n  }\n\n  return parents\n}\n\nfunction zIndexIsHigherThan(higherNode: Node, lowerNode: Node) {\n  const higherIndex = parseInt(win.getWindow(higherNode).getComputedStyle(higherNode).zIndex, 10) || 0\n  const lowerIndex = parseInt(win.getWindow(lowerNode).getComputedStyle(lowerNode).zIndex, 10) || 0\n\n  return higherIndex >= lowerIndex\n}\n\nexport function matchesUpTo(element: Element, selector: string, limit: Node) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return true\n    }\n\n    element = parentNode(element) as Element\n\n    if (element === limit) {\n      return matchesSelector(element, selector)\n    }\n  }\n\n  return false\n}\n\nexport function getActualElement(element: Element) {\n  return (element as any).correspondingUseElement || element\n}\n\nexport function getScrollXY(relevantWindow?: Window) {\n  relevantWindow = relevantWindow || win.window\n  return {\n    x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n    y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n  }\n}\n\nexport function getElementClientRect(element: Element): Required<Rect> {\n  const clientRect =\n    element instanceof domObjects.SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0]\n\n  return (\n    clientRect && {\n      left: clientRect.left,\n      right: clientRect.right,\n      top: clientRect.top,\n      bottom: clientRect.bottom,\n      width: clientRect.width || clientRect.right - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    }\n  )\n}\n\nexport function getElementRect(element: Element) {\n  const clientRect = getElementClientRect(element)\n\n  if (!browser.isIOS7 && clientRect) {\n    const scroll = getScrollXY(win.getWindow(element))\n\n    clientRect.left += scroll.x\n    clientRect.right += scroll.x\n    clientRect.top += scroll.y\n    clientRect.bottom += scroll.y\n  }\n\n  return clientRect\n}\n\nexport function getPath(node: Node | Document) {\n  const path = []\n\n  while (node) {\n    path.push(node)\n    node = parentNode(node)\n  }\n\n  return path\n}\n\nexport function trySelector(value: Target) {\n  if (!is.string(value)) {\n    return false\n  }\n\n  // an exception will be raised if it is invalid\n  domObjects.document.querySelector(value)\n  return true\n}\n"
	],
	"mappings": "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"
}