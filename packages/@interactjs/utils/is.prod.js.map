{
	"version": 3,
	"names": [
		"obj",
		"_isWindow",
		"require",
		"__esModule",
		"default",
		"win",
		"e",
		"r",
		"t",
		"_getRequireWildcardCache",
		"has",
		"get",
		"n",
		"__proto__",
		"a",
		"Object",
		"defineProperty",
		"getOwnPropertyDescriptor",
		"u",
		"prototype",
		"hasOwnProperty",
		"call",
		"i",
		"set",
		"_interopRequireWildcard",
		"WeakMap",
		"object",
		"thing",
		"func",
		"exports",
		"window",
		"isWindow",
		"docFrag",
		"nodeType",
		"number",
		"bool",
		"string",
		"element",
		"_window",
		"getWindow",
		"test",
		"Element",
		"nodeName",
		"plainObject",
		"constructor",
		"toString",
		"array",
		"length",
		"splice"
	],
	"sources": [
		"is.ts"
	],
	"sourcesContent": [
		"import isWindow from './isWindow'\nimport * as win from './window'\n\nconst window = (thing: any): thing is Window => thing === win.window || isWindow(thing)\n\nconst docFrag = (thing: any): thing is DocumentFragment => object(thing) && thing.nodeType === 11\n\nconst object = (thing: any): thing is { [index: string]: any } => !!thing && typeof thing === 'object'\n\nconst func = (thing: any): thing is (...args: any[]) => any => typeof thing === 'function'\n\nconst number = (thing: any): thing is number => typeof thing === 'number'\n\nconst bool = (thing: any): thing is boolean => typeof thing === 'boolean'\n\nconst string = (thing: any): thing is string => typeof thing === 'string'\n\nconst element = (thing: any): thing is HTMLElement | SVGElement => {\n  if (!thing || typeof thing !== 'object') {\n    return false\n  }\n\n  const _window = win.getWindow(thing) || win.window\n\n  return /object|function/.test(typeof Element)\n    ? thing instanceof Element || thing instanceof _window.Element\n    : thing.nodeType === 1 && typeof thing.nodeName === 'string'\n}\n\nconst plainObject: typeof object = (thing: any): thing is { [index: string]: any } =>\n  object(thing) && !!thing.constructor && /function Object\\b/.test(thing.constructor.toString())\n\nconst array = <T extends unknown>(thing: any): thing is T[] =>\n  object(thing) && typeof thing.length !== 'undefined' && func(thing.splice)\n\nexport default {\n  window,\n  docFrag,\n  object,\n  func,\n  number,\n  bool,\n  string,\n  element,\n  plainObject,\n  array,\n}\n"
	],
	"mappings": "8EAAA,IAC+BA,EAD/BC,GAC+BD,EAD/BE,QAAA,gBAC+BF,EAAAG,WAAAH,EAAA,CAAAI,QAAAJ,GAA/BK,EAA+B,EAAAC,EAAAC,KAAA,GAAAD,KAAAH,WAAA,OAAAG,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAF,QAAAE,GAAA,IAAAE,EAAAC,EAAAF,GAAA,GAAAC,KAAAE,IAAAJ,GAAA,OAAAE,EAAAG,IAAAL,GAAA,IAAAM,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAZ,EAAA,eAAAY,GAAAH,OAAAI,UAAAC,eAAAC,KAAAf,EAAAY,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAX,EAAAY,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAZ,EAAAY,EAAA,QAAAN,EAAAR,QAAAE,EAAAE,KAAAe,IAAAjB,EAAAM,IAAA,EAA/BY,CAAAtB,QAAA,aAA+B,SAAAO,EAAAH,GAAA,sBAAAmB,QAAA,gBAAAlB,EAAA,IAAAkB,QAAAjB,EAAA,IAAAiB,QAAA,OAAAhB,EAAAH,KAAAE,EAAAD,GAAAD,EAAA,CAE/B,MAIMoB,EAAUC,KAAoDA,GAA0B,iBAAVA,EAE9EC,EAAQD,GAAkE,mBAAVA,EAwBME,QAAAzB,QAE7D,CACb0B,OAjCcH,GAAgCA,IAAUtB,EAAIyB,SAAU,EAAAC,WAASJ,GAkC/EK,QAhCeL,GAA0CD,EAAOC,IAA6B,KAAnBA,EAAMM,SAiChFP,SACAE,OACAM,OA7BcP,GAAiD,iBAAVA,EA8BrDQ,KA5BYR,GAAkD,kBAAVA,EA6BpDS,OA3BcT,GAAiD,iBAAVA,EA4BrDU,QA1BeV,GACf,IAAKA,GAA0B,iBAAVA,EACnB,OAAO,EAGT,MAAMW,EAAUjC,EAAIkC,UAAUZ,IAAUtB,EAAIyB,OAE5C,MAAO,kBAAkBU,YAAYC,SACjCd,aAAiBc,SAAWd,aAAiBW,EAAQG,QAClC,IAAnBd,EAAMM,UAA4C,iBAAnBN,EAAMe,QAAqB,EAkB9DC,YAfkChB,GAClCD,EAAOC,MAAYA,EAAMiB,aAAe,oBAAoBJ,KAAKb,EAAMiB,YAAYC,YAenFC,MAbgCnB,GAChCD,EAAOC,SAAkC,IAAjBA,EAAMoB,QAA0BnB,EAAKD,EAAMqB"
}