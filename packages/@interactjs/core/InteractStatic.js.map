{
	"version": 3,
	"names": [
		"browser",
		"domUtils",
		"is",
		"isNonNativeEvent",
		"warnOnce",
		"pointerUtils",
		"createInteractStatic",
		"scope",
		"interact",
		"target",
		"options",
		"interactable",
		"interactables",
		"getExisting",
		"new",
		"events",
		"global",
		"globalEvents",
		"getPointerAverage",
		"pointerAverage",
		"getTouchBBox",
		"touchBBox",
		"getTouchDistance",
		"touchDistance",
		"getTouchAngle",
		"touchAngle",
		"getElementRect",
		"getElementClientRect",
		"matchesSelector",
		"closest",
		"version",
		"use",
		"plugin",
		"usePlugin",
		"isSet",
		"get",
		"context",
		"on",
		"type",
		"listener",
		"string",
		"search",
		"trim",
		"split",
		"array",
		"eventType",
		"object",
		"prop",
		"actions",
		"push",
		"add",
		"document",
		"off",
		"index",
		"indexOf",
		"splice",
		"remove",
		"debug",
		"supportsTouch",
		"supportsPointerEvent",
		"stop",
		"interaction",
		"interactions",
		"list",
		"pointerMoveTolerance",
		"newValue",
		"number",
		"addDocument",
		"doc",
		"removeDocument"
	],
	"sources": [
		"InteractStatic.ts"
	],
	"sourcesContent": [
		"import browser from '@interactjs/utils/browser'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport isNonNativeEvent from '@interactjs/utils/isNonNativeEvent'\nimport { warnOnce } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Context, EventTypes, Listener, ListenersArg, Target } from '@interactjs/core/types'\n\nimport type { Interactable } from './Interactable'\nimport type { Options } from './options'\n\n/**\n * ```js\n * interact('#draggable').draggable(true)\n *\n * var rectables = interact('rect')\n * rectables\n *   .gesturable(true)\n *   .on('gesturemove', function (event) {\n *       // ...\n *   })\n * ```\n *\n * The methods of this variable can be used to set elements as interactables\n * and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to configure\n * it.\n *\n * @param {Element | string} target The HTML or SVG Element to interact with\n * or CSS selector\n * @return {Interactable}\n */\nexport interface InteractStatic {\n  (target: Target, options?: Options): Interactable\n  getPointerAverage: typeof pointerUtils.pointerAverage\n  getTouchBBox: typeof pointerUtils.touchBBox\n  getTouchDistance: typeof pointerUtils.touchDistance\n  getTouchAngle: typeof pointerUtils.touchAngle\n  getElementRect: typeof domUtils.getElementRect\n  getElementClientRect: typeof domUtils.getElementClientRect\n  matchesSelector: typeof domUtils.matchesSelector\n  closest: typeof domUtils.closest\n  /** @internal */ globalEvents: any\n  version: string\n  /** @internal */ scope: Scope\n  /**\n   * Use a plugin\n   */\n  use(\n    plugin: Plugin,\n    options?: {\n      [key: string]: any\n    },\n  ): any\n  /**\n   * Check if an element or selector has been set with the `interact(target)`\n   * function\n   *\n   * @return {boolean} Indicates if the element or CSS selector was previously\n   * passed to interact\n   */\n  isSet(\n    /* The Element or string being searched for */\n    target: Target,\n    options?: any,\n  ): boolean\n  on(type: string | EventTypes, listener: ListenersArg, options?: object): any\n  off(type: EventTypes, listener: any, options?: object): any\n  debug(): any\n  /**\n   * Whether or not the browser supports touch input\n   */\n  supportsTouch(): boolean\n  /**\n   * Whether or not the browser supports PointerEvents\n   */\n  supportsPointerEvent(): boolean\n  /**\n   * Cancels all interactions (end events are not fired)\n   */\n  stop(): InteractStatic\n  /**\n   * Returns or sets the distance the pointer must be moved before an action\n   * sequence occurs. This also affects tolerance for tap events.\n   */\n  pointerMoveTolerance(\n    /** The movement from the start position must be greater than this value */\n    newValue?: number,\n  ): InteractStatic | number\n  addDocument(doc: Document, options?: object): void\n  removeDocument(doc: Document): void\n}\n\nexport function createInteractStatic(scope: Scope): InteractStatic {\n  const interact = ((target: Target, options: Options) => {\n    let interactable = scope.interactables.getExisting(target, options)\n\n    if (!interactable) {\n      interactable = scope.interactables.new(target, options)\n      interactable.events.global = interact.globalEvents\n    }\n\n    return interactable\n  }) as InteractStatic\n\n  // expose the functions used to calculate multi-touch properties\n  interact.getPointerAverage = pointerUtils.pointerAverage\n  interact.getTouchBBox = pointerUtils.touchBBox\n  interact.getTouchDistance = pointerUtils.touchDistance\n  interact.getTouchAngle = pointerUtils.touchAngle\n\n  interact.getElementRect = domUtils.getElementRect\n  interact.getElementClientRect = domUtils.getElementClientRect\n  interact.matchesSelector = domUtils.matchesSelector\n  interact.closest = domUtils.closest\n\n  interact.globalEvents = {} as any\n\n  // eslint-disable-next-line no-undef\n  interact.version = process.env.npm_package_version\n  interact.scope = scope\n  interact.use = function (plugin, options) {\n    this.scope.usePlugin(plugin, options)\n\n    return this\n  }\n\n  interact.isSet = function (target: Target, options?: { context?: Context }): boolean {\n    return !!this.scope.interactables.get(target, options && options.context)\n  }\n\n  interact.on = warnOnce(function on(type: string | EventTypes, listener: ListenersArg, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type as any[]) {\n        this.on(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.on(prop, (type as any)[prop], listener)\n      }\n\n      return this\n    }\n\n    // if it is an InteractEvent type, add listener to globalEvents\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      // if this type of event was never bound\n      if (!this.globalEvents[type]) {\n        this.globalEvents[type] = [listener]\n      } else {\n        this.globalEvents[type].push(listener)\n      }\n    }\n    // If non InteractEvent type, addEventListener to document\n    else {\n      this.scope.events.add(this.scope.document, type, listener as Listener, { options })\n    }\n\n    return this\n  }, 'The interact.on() method is being deprecated')\n\n  interact.off = warnOnce(function off(type: EventTypes, listener: any, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type) {\n        this.off(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.off(prop, type[prop], listener)\n      }\n\n      return this\n    }\n\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      let index: number\n\n      if (type in this.globalEvents && (index = this.globalEvents[type].indexOf(listener)) !== -1) {\n        this.globalEvents[type].splice(index, 1)\n      }\n    } else {\n      this.scope.events.remove(this.scope.document, type, listener, options)\n    }\n\n    return this\n  }, 'The interact.off() method is being deprecated')\n\n  interact.debug = function () {\n    return this.scope\n  }\n\n  interact.supportsTouch = function () {\n    return browser.supportsTouch\n  }\n\n  interact.supportsPointerEvent = function () {\n    return browser.supportsPointerEvent\n  }\n\n  interact.stop = function () {\n    for (const interaction of this.scope.interactions.list) {\n      interaction.stop()\n    }\n\n    return this\n  }\n\n  interact.pointerMoveTolerance = function (newValue?: number) {\n    if (is.number(newValue)) {\n      this.scope.interactions.pointerMoveTolerance = newValue\n\n      return this\n    }\n\n    return this.scope.interactions.pointerMoveTolerance\n  }\n\n  interact.addDocument = function (doc: Document, options?: object) {\n    this.scope.addDocument(doc, options)\n  }\n\n  interact.removeDocument = function (doc: Document) {\n    this.scope.removeDocument(doc)\n  }\n\n  return interact\n}\n"
	],
	"mappings": "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"
}