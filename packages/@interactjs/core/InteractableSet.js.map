{
	"version": 3,
	"names": [
		"arr",
		"domUtils",
		"extend",
		"is",
		"InteractableSet",
		"list",
		"selectorMap",
		"scope",
		"constructor",
		"addListeners",
		"interactable:unset",
		"interactable",
		"target",
		"interactablesOnTarget",
		"string",
		"id",
		"targetIndex",
		"findIndex",
		"i",
		"splice",
		"new",
		"options",
		"actions",
		"Interactable",
		"document",
		"events",
		"addDocument",
		"_doc",
		"push",
		"Object",
		"defineProperty",
		"value",
		"configurable",
		"fire",
		"win",
		"_win",
		"getExisting",
		"context",
		"isSelector",
		"undefined",
		"find",
		"_context",
		"inContext",
		"forEachMatch",
		"node",
		"callback",
		"ret",
		"element",
		"matchesSelector"
	],
	"sources": [
		"InteractableSet.ts"
	],
	"sourcesContent": [
		"import * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { OptionsArg, Options } from '@interactjs/core/options'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { Target } from '@interactjs/core/types'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactable:new': {\n      interactable: Interactable\n      target: Target\n      options: OptionsArg\n      win: Window\n    }\n  }\n}\n\nexport class InteractableSet {\n  // all set interactables\n  list: Interactable[] = []\n\n  selectorMap: {\n    [selector: string]: Interactable[]\n  } = {}\n\n  scope: Scope\n\n  constructor(scope: Scope) {\n    this.scope = scope\n    scope.addListeners({\n      'interactable:unset': ({ interactable }) => {\n        const { target } = interactable\n        const interactablesOnTarget: Interactable[] = is.string(target)\n          ? this.selectorMap[target]\n          : (target as any)[this.scope.id]\n\n        const targetIndex = arr.findIndex(interactablesOnTarget, (i) => i === interactable)\n        interactablesOnTarget.splice(targetIndex, 1)\n      },\n    })\n  }\n\n  new(target: Target, options?: any): Interactable {\n    options = extend(options || {}, {\n      actions: this.scope.actions,\n    })\n    const interactable = new this.scope.Interactable(target, options, this.scope.document, this.scope.events)\n\n    this.scope.addDocument(interactable._doc)\n    this.list.push(interactable)\n\n    if (is.string(target)) {\n      if (!this.selectorMap[target]) {\n        this.selectorMap[target] = []\n      }\n      this.selectorMap[target].push(interactable)\n    } else {\n      if (!(interactable.target as any)[this.scope.id]) {\n        Object.defineProperty(target, this.scope.id, {\n          value: [],\n          configurable: true,\n        })\n      }\n\n      ;(target as any)[this.scope.id].push(interactable)\n    }\n\n    this.scope.fire('interactable:new', {\n      target,\n      options,\n      interactable,\n      win: this.scope._win,\n    })\n\n    return interactable\n  }\n\n  getExisting(target: Target, options?: Options) {\n    const context = (options && options.context) || this.scope.document\n    const isSelector = is.string(target)\n    const interactablesOnTarget: Interactable[] = isSelector\n      ? this.selectorMap[target as string]\n      : (target as any)[this.scope.id]\n\n    if (!interactablesOnTarget) return undefined\n\n    return arr.find(\n      interactablesOnTarget,\n      (interactable) =>\n        interactable._context === context && (isSelector || interactable.inContext(target as any)),\n    )\n  }\n\n  forEachMatch<T>(node: Node, callback: (interactable: Interactable) => T): T | void {\n    for (const interactable of this.list) {\n      let ret: T\n\n      if (\n        (is.string(interactable.target)\n          ? // target is a selector and the element matches\n            is.element(node) && domUtils.matchesSelector(node, interactable.target)\n          : // target is the element\n            node === interactable.target) &&\n        // the element is in context\n        interactable.inContext(node)\n      ) {\n        ret = callback(interactable)\n      }\n\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  }\n}\n"
	],
	"mappings": "AAAA,OAAO,KAAKA,GAAG,MAAM,iBAAuB;AAC5C,OAAO,KAAKC,QAAQ,MAAM,sBAA4B;AACtD,OAAOC,MAAM,MAAM,oBAA0B;AAC7C,OAAOC,EAAE,MAAM,gBAAsB;AAkBrC,OAAO,MAAMC,eAAe,CAAC;EAC3B;EACAC,IAAI,GAAmB,EAAE;EAEzBC,WAAW,GAEP,CAAC,CAAC;EAENC,KAAK;EAELC,WAAWA,CAACD,KAAY,EAAE;IACxB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClBA,KAAK,CAACE,YAAY,CAAC;MACjB,oBAAoB,EAAEC,CAAC;QAAEC;MAAa,CAAC,KAAK;QAC1C,MAAM;UAAEC;QAAO,CAAC,GAAGD,YAAY;QAC/B,MAAME,qBAAqC,GAAGV,EAAE,CAACW,MAAM,CAACF,MAAM,CAAC,GAC3D,IAAI,CAACN,WAAW,CAACM,MAAM,CAAC,GACvBA,MAAM,CAAS,IAAI,CAACL,KAAK,CAACQ,EAAE,CAAC;QAElC,MAAMC,WAAW,GAAGhB,GAAG,CAACiB,SAAS,CAACJ,qBAAqB,EAAGK,CAAC,IAAKA,CAAC,KAAKP,YAAY,CAAC;QACnFE,qBAAqB,CAACM,MAAM,CAACH,WAAW,EAAE,CAAC,CAAC;MAC9C;IACF,CAAC,CAAC;EACJ;EAEAI,GAAGA,CAACR,MAAc,EAAES,OAAa,EAAgB;IAC/CA,OAAO,GAAGnB,MAAM,CAACmB,OAAO,IAAI,CAAC,CAAC,EAAE;MAC9BC,OAAO,EAAE,IAAI,CAACf,KAAK,CAACe;IACtB,CAAC,CAAC;IACF,MAAMX,YAAY,GAAG,IAAI,IAAI,CAACJ,KAAK,CAACgB,YAAY,CAACX,MAAM,EAAES,OAAO,EAAE,IAAI,CAACd,KAAK,CAACiB,QAAQ,EAAE,IAAI,CAACjB,KAAK,CAACkB,MAAM,CAAC;IAEzG,IAAI,CAAClB,KAAK,CAACmB,WAAW,CAACf,YAAY,CAACgB,IAAI,CAAC;IACzC,IAAI,CAACtB,IAAI,CAACuB,IAAI,CAACjB,YAAY,CAAC;IAE5B,IAAIR,EAAE,CAACW,MAAM,CAACF,MAAM,CAAC,EAAE;MACrB,IAAI,CAAC,IAAI,CAACN,WAAW,CAACM,MAAM,CAAC,EAAE;QAC7B,IAAI,CAACN,WAAW,CAACM,MAAM,CAAC,GAAG,EAAE;MAC/B;MACA,IAAI,CAACN,WAAW,CAACM,MAAM,CAAC,CAACgB,IAAI,CAACjB,YAAY,CAAC;IAC7C,CAAC,MAAM;MACL,IAAI,CAAEA,YAAY,CAACC,MAAM,CAAS,IAAI,CAACL,KAAK,CAACQ,EAAE,CAAC,EAAE;QAChDc,MAAM,CAACC,cAAc,CAAClB,MAAM,EAAE,IAAI,CAACL,KAAK,CAACQ,EAAE,EAAE;UAC3CgB,KAAK,EAAE,EAAE;UACTC,YAAY,EAAE;QAChB,CAAC,CAAC;MACJ;MAEA;MAAEpB,MAAM,CAAS,IAAI,CAACL,KAAK,CAACQ,EAAE,CAAC,CAACa,IAAI,CAACjB,YAAY,CAAC;IACpD;IAEA,IAAI,CAACJ,KAAK,CAAC0B,IAAI,CAAC,kBAAkB,EAAE;MAClCrB,MAAM;MACNS,OAAO;MACPV,YAAY;MACZuB,GAAG,EAAE,IAAI,CAAC3B,KAAK,CAAC4B;IAClB,CAAC,CAAC;IAEF,OAAOxB,YAAY;EACrB;EAEAyB,WAAWA,CAACxB,MAAc,EAAES,OAAiB,EAAE;IAC7C,MAAMgB,OAAO,GAAIhB,OAAO,IAAIA,OAAO,CAACgB,OAAO,IAAK,IAAI,CAAC9B,KAAK,CAACiB,QAAQ;IACnE,MAAMc,UAAU,GAAGnC,EAAE,CAACW,MAAM,CAACF,MAAM,CAAC;IACpC,MAAMC,qBAAqC,GAAGyB,UAAU,GACpD,IAAI,CAAChC,WAAW,CAACM,MAAM,CAAW,GACjCA,MAAM,CAAS,IAAI,CAACL,KAAK,CAACQ,EAAE,CAAC;IAElC,IAAI,CAACF,qBAAqB,EAAE,OAAO0B,SAAS;IAE5C,OAAOvC,GAAG,CAACwC,IAAI,CACb3B,qBAAqB,EACpBF,YAAY,IACXA,YAAY,CAAC8B,QAAQ,KAAKJ,OAAO,KAAKC,UAAU,IAAI3B,YAAY,CAAC+B,SAAS,CAAC9B,MAAa,CAAC,CAC7F,CAAC;EACH;EAEA+B,YAAYA,CAAIC,IAAU,EAAEC,QAA2C,EAAY;IACjF,KAAK,MAAMlC,YAAY,IAAI,IAAI,CAACN,IAAI,EAAE;MACpC,IAAIyC,GAAM;MAEV,IACE,CAAC3C,EAAE,CAACW,MAAM,CAACH,YAAY,CAACC,MAAM,CAAC;MAC3B;MACAT,EAAE,CAAC4C,OAAO,CAACH,IAAI,CAAC,IAAI3C,QAAQ,CAAC+C,eAAe,CAACJ,IAAI,EAAEjC,YAAY,CAACC,MAAM,CAAC;MACvE;MACAgC,IAAI,KAAKjC,YAAY,CAACC,MAAM;MAChC;MACAD,YAAY,CAAC+B,SAAS,CAACE,IAAI,CAAC,EAC5B;QACAE,GAAG,GAAGD,QAAQ,CAAClC,YAAY,CAAC;MAC9B;MAEA,IAAImC,GAAG,KAAKP,SAAS,EAAE;QACrB,OAAOO,GAAG;MACZ;IACF;EACF;AACF"
}