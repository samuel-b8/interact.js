{
	"version": 3,
	"names": [
		"browser",
		"clone",
		"domObjects",
		"extend",
		"is",
		"raf",
		"win",
		"Eventable",
		"events",
		"InteractableBase",
		"InteractableSet",
		"InteractEvent",
		"interactions",
		"createInteractStatic",
		"defaults",
		"Scope",
		"id",
		"Math",
		"floor",
		"random",
		"isInitialized",
		"listenerMaps",
		"actions",
		"map",
		"phases",
		"start",
		"move",
		"end",
		"methodDict",
		"phaselessTypes",
		"interactStatic",
		"this",
		"Interactable",
		"interactables",
		"_win",
		"document",
		"window",
		"documents",
		"_plugins",
		"list",
		"constructor",
		"scope",
		"_defaults",
		"set",
		"options",
		"super",
		"fire",
		"interactable",
		"unset",
		"index",
		"indexOf",
		"splice",
		"addListeners",
		"push",
		"name",
		"arg",
		"listener",
		"onWindowUnload",
		"event",
		"removeDocument",
		"target",
		"init",
		"initScope",
		"pluginIsInstalled",
		"plugin",
		"usePlugin",
		"install",
		"listeners",
		"before",
		"len",
		"length",
		"reduce",
		"acc",
		"pluginIdRoot",
		"otherId",
		"addDocument",
		"doc",
		"getDocIndex",
		"getWindow",
		"add",
		"remove",
		"i",
		"getDocOptions",
		"docIndex",
		"now",
		"Date",
		"replace"
	],
	"sources": [
		"scope.ts"
	],
	"sourcesContent": [
		"import browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport domObjects from '@interactjs/utils/domObjects'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport * as win from '@interactjs/utils/window'\n\nimport type Interaction from '@interactjs/core/Interaction'\n\nimport { Eventable } from './Eventable'\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './events'\nimport './interactions'\nimport events from './events'\nimport { Interactable as InteractableBase } from './Interactable'\nimport { InteractableSet } from './InteractableSet'\nimport { InteractEvent } from './InteractEvent'\nimport interactions from './interactions'\n/* eslint-enable import/no-duplicates */\nimport { createInteractStatic } from './InteractStatic'\nimport type { OptionsArg } from './options'\nimport { defaults } from './options'\nimport type { Actions } from './types'\n\nexport interface SignalArgs {\n  'scope:add-document': DocSignalArg\n  'scope:remove-document': DocSignalArg\n  'interactable:unset': { interactable: InteractableBase }\n  'interactable:set': { interactable: InteractableBase; options: OptionsArg }\n  'interactions:destroy': { interaction: Interaction }\n}\n\nexport type ListenerName = keyof SignalArgs\n\nexport type ListenerMap = {\n  [P in ListenerName]?: (arg: SignalArgs[P], scope: Scope, signalName: P) => void | boolean\n}\n\ninterface DocSignalArg {\n  doc: Document\n  window: Window\n  scope: Scope\n  options: Record<string, any>\n}\n\n/** @internal */\nexport interface Plugin {\n  [key: string]: any\n  id?: string\n  listeners?: ListenerMap\n  before?: string[]\n  install?(scope: Scope, options?: any): void\n}\n\n/** @internal */\nexport class Scope {\n  id = `__interact_scope_${Math.floor(Math.random() * 100)}`\n  isInitialized = false\n  listenerMaps: Array<{\n    map: ListenerMap\n    id?: string\n  }> = []\n\n  browser = browser\n  defaults = clone(defaults) as typeof defaults\n  Eventable = Eventable\n  actions: Actions = {\n    map: {},\n    phases: {\n      start: true,\n      move: true,\n      end: true,\n    },\n    methodDict: {} as any,\n    phaselessTypes: {},\n  }\n\n  interactStatic = createInteractStatic(this)\n  InteractEvent = InteractEvent\n  Interactable: typeof InteractableBase\n  interactables = new InteractableSet(this)\n\n  // main window\n  _win!: Window\n\n  // main document\n  document!: Document\n\n  // main window\n  window!: Window\n\n  // all documents being listened to\n  documents: Array<{ doc: Document; options: any }> = []\n\n  _plugins: {\n    list: Plugin[]\n    map: { [id: string]: Plugin }\n  } = {\n    list: [],\n    map: {},\n  }\n\n  constructor() {\n    const scope = this\n\n    this.Interactable = class extends InteractableBase {\n      get _defaults() {\n        return scope.defaults\n      }\n\n      set<T extends InteractableBase>(this: T, options: OptionsArg) {\n        super.set(options)\n\n        scope.fire('interactable:set', {\n          options,\n          interactable: this,\n        })\n\n        return this\n      }\n\n      unset(this: InteractableBase) {\n        super.unset()\n\n        const index = scope.interactables.list.indexOf(this)\n        if (index < 0) return\n\n        scope.interactables.list.splice(index, 1)\n        scope.fire('interactable:unset', { interactable: this })\n      }\n    }\n  }\n\n  addListeners(map: ListenerMap, id?: string) {\n    this.listenerMaps.push({ id, map })\n  }\n\n  fire<T extends ListenerName>(name: T, arg: SignalArgs[T]): void | false {\n    for (const {\n      map: { [name]: listener },\n    } of this.listenerMaps) {\n      if (!!listener && listener(arg as any, this, name as never) === false) {\n        return false\n      }\n    }\n  }\n\n  onWindowUnload = (event: BeforeUnloadEvent) => this.removeDocument(event.target as Document)\n\n  init(window: Window | typeof globalThis) {\n    return this.isInitialized ? this : initScope(this, window)\n  }\n\n  pluginIsInstalled(plugin: Plugin) {\n    const { id } = plugin\n    return id ? !!this._plugins.map[id] : this._plugins.list.indexOf(plugin) !== -1\n  }\n\n  usePlugin(plugin: Plugin, options?: { [key: string]: any }) {\n    if (!this.isInitialized) {\n      return this\n    }\n\n    if (this.pluginIsInstalled(plugin)) {\n      return this\n    }\n\n    if (plugin.id) {\n      this._plugins.map[plugin.id] = plugin\n    }\n    this._plugins.list.push(plugin)\n\n    if (plugin.install) {\n      plugin.install(this, options)\n    }\n\n    if (plugin.listeners && plugin.before) {\n      let index = 0\n      const len = this.listenerMaps.length\n      const before = plugin.before.reduce((acc, id) => {\n        acc[id] = true\n        acc[pluginIdRoot(id)] = true\n        return acc\n      }, {})\n\n      for (; index < len; index++) {\n        const otherId = this.listenerMaps[index].id\n\n        if (otherId && (before[otherId] || before[pluginIdRoot(otherId)])) {\n          break\n        }\n      }\n\n      this.listenerMaps.splice(index, 0, { id: plugin.id, map: plugin.listeners })\n    } else if (plugin.listeners) {\n      this.listenerMaps.push({ id: plugin.id, map: plugin.listeners })\n    }\n\n    return this\n  }\n\n  addDocument(doc: Document, options?: any): void | false {\n    // do nothing if document is already known\n    if (this.getDocIndex(doc) !== -1) {\n      return false\n    }\n\n    const window = win.getWindow(doc)\n\n    options = options ? extend({}, options) : {}\n\n    this.documents.push({ doc, options })\n    this.events.documents.push(doc)\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== this.document) {\n      this.events.add(window, 'unload', this.onWindowUnload)\n    }\n\n    this.fire('scope:add-document', { doc, window, scope: this, options })\n  }\n\n  removeDocument(doc: Document) {\n    const index = this.getDocIndex(doc)\n\n    const window = win.getWindow(doc)\n    const options = this.documents[index].options\n\n    this.events.remove(window, 'unload', this.onWindowUnload)\n\n    this.documents.splice(index, 1)\n    this.events.documents.splice(index, 1)\n\n    this.fire('scope:remove-document', { doc, window, scope: this, options })\n  }\n\n  getDocIndex(doc: Document) {\n    for (let i = 0; i < this.documents.length; i++) {\n      if (this.documents[i].doc === doc) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getDocOptions(doc: Document) {\n    const docIndex = this.getDocIndex(doc)\n\n    return docIndex === -1 ? null : this.documents[docIndex].options\n  }\n\n  now() {\n    return (((this.window as any).Date as typeof Date) || Date).now()\n  }\n}\n\n/** @internal */\nexport function initScope(scope: Scope, window: Window | typeof globalThis) {\n  scope.isInitialized = true\n\n  if (is.window(window)) {\n    win.init(window)\n  }\n\n  domObjects.init(window)\n  browser.init(window)\n  raf.init(window)\n\n  // @ts-expect-error\n  scope.window = window\n  scope.document = window.document\n\n  scope.usePlugin(interactions)\n  scope.usePlugin(events)\n\n  return scope\n}\n\nfunction pluginIdRoot(id: string) {\n  return id && id.replace(/\\/.*$/, '')\n}\n"
	],
	"mappings": "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"
}