{
	"version": 3,
	"names": [
		"arr",
		"_interopRequireWildcard",
		"require",
		"_extend",
		"_interopRequireDefault",
		"_hypot",
		"_misc",
		"pointerUtils",
		"rectUtils",
		"_InteractEvent",
		"_PointerInfo",
		"obj",
		"__esModule",
		"default",
		"_getRequireWildcardCache",
		"e",
		"WeakMap",
		"r",
		"t",
		"has",
		"get",
		"n",
		"__proto__",
		"a",
		"Object",
		"defineProperty",
		"getOwnPropertyDescriptor",
		"u",
		"prototype",
		"hasOwnProperty",
		"call",
		"i",
		"set",
		"_ProxyValues",
		"exports",
		"_ProxyMethods",
		"idCounter",
		"Interaction",
		"interactable",
		"element",
		"rect",
		"_rects",
		"edges",
		"_scopeFire",
		"prepared",
		"name",
		"axis",
		"pointerType",
		"pointers",
		"downEvent",
		"downPointer",
		"_latestPointer",
		"pointer",
		"event",
		"eventTarget",
		"prevEvent",
		"pointerIsDown",
		"pointerWasMoved",
		"_interacting",
		"_ending",
		"_stopped",
		"_proxy",
		"simulation",
		"pointerMoveTolerance",
		"doMove",
		"warnOnce",
		"signalArg",
		"move",
		"coords",
		"start",
		"newCoords",
		"prev",
		"cur",
		"delta",
		"velocity",
		"_id",
		"constructor",
		"scopeFire",
		"that",
		"key",
		"value",
		"args",
		"interaction",
		"pointerDown",
		"pointerIndex",
		"updatePointer",
		"pointerInfo",
		"type",
		"action",
		"interacting",
		"length",
		"options",
		"enabled",
		"copyAction",
		"getRect",
		"extend",
		"left",
		"right",
		"top",
		"bottom",
		"_doPhase",
		"phase",
		"pointerMove",
		"modification",
		"endResult",
		"duplicateMove",
		"page",
		"x",
		"y",
		"client",
		"dx",
		"dy",
		"hypot",
		"getPointerIndex",
		"duplicate",
		"setCoordVelocity",
		"copyCoords",
		"setZeroCoords",
		"pointerUp",
		"curEventTarget",
		"test",
		"end",
		"removePointer",
		"documentBlur",
		"endPhaseResult",
		"stop",
		"currentAction",
		"pointerId",
		"getPointerId",
		"findIndex",
		"curPointer",
		"id",
		"getPointerInfo",
		"down",
		"PointerInfo",
		"push",
		"setCoords",
		"map",
		"p",
		"_now",
		"setCoordDeltas",
		"downTime",
		"timeStamp",
		"downTarget",
		"pointerExtend",
		"_updateLatestPointer",
		"splice",
		"destroy",
		"_createPreparedEvent",
		"preEnd",
		"InteractEvent",
		"_fireEvent",
		"iEvent",
		"_this$interactable",
		"fire",
		"addEdges",
		"deltaSource",
		"width",
		"height",
		"beforeResult",
		"Date",
		"now",
		"_default"
	],
	"sources": [
		"Interaction.ts"
	],
	"sourcesContent": [
		"import * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport hypot from '@interactjs/utils/hypot'\nimport { warnOnce, copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type {\n  Element,\n  EdgeOptions,\n  PointerEventType,\n  PointerType,\n  FullRect,\n  CoordsSet,\n  ActionName,\n  ActionProps,\n} from '@interactjs/core/types'\n\nimport type { Interactable } from './Interactable'\nimport type { EventPhase } from './InteractEvent'\nimport { InteractEvent } from './InteractEvent'\nimport type { ActionDefaults } from './options'\nimport { PointerInfo } from './PointerInfo'\nimport type { Scope } from './scope'\n\nexport enum _ProxyValues {\n  interactable = '',\n  element = '',\n  prepared = '',\n  pointerIsDown = '',\n  pointerWasMoved = '',\n  _proxy = '',\n}\n\nexport enum _ProxyMethods {\n  start = '',\n  move = '',\n  end = '',\n  stop = '',\n  interacting = '',\n}\n\nexport type PointerArgProps<T extends {} = {}> = {\n  pointer: PointerType\n  event: PointerEventType\n  eventTarget: Node\n  pointerIndex: number\n  pointerInfo: PointerInfo\n  interaction: Interaction<never>\n} & T\n\nexport interface DoPhaseArg<T extends ActionName, P extends EventPhase> {\n  event: PointerEventType\n  phase: EventPhase\n  interaction: Interaction<T>\n  iEvent: InteractEvent<T, P>\n  preEnd?: boolean\n  type?: string\n}\n\nexport type DoAnyPhaseArg = DoPhaseArg<ActionName, EventPhase>\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:new': { interaction: Interaction<ActionName> }\n    'interactions:down': PointerArgProps<{\n      type: 'down'\n    }>\n    'interactions:move': PointerArgProps<{\n      type: 'move'\n      dx: number\n      dy: number\n      duplicate: boolean\n    }>\n    'interactions:up': PointerArgProps<{\n      type: 'up'\n      curEventTarget: EventTarget\n    }>\n    'interactions:cancel': SignalArgs['interactions:up'] & {\n      type: 'cancel'\n      curEventTarget: EventTarget\n    }\n    'interactions:update-pointer': PointerArgProps<{\n      down: boolean\n    }>\n    'interactions:remove-pointer': PointerArgProps\n    'interactions:blur': { interaction: Interaction<never>; event: Event; type: 'blur' }\n    'interactions:before-action-start': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-start': DoAnyPhaseArg\n    'interactions:after-action-start': DoAnyPhaseArg\n    'interactions:before-action-move': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-move': DoAnyPhaseArg\n    'interactions:after-action-move': DoAnyPhaseArg\n    'interactions:before-action-end': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-end': DoAnyPhaseArg\n    'interactions:after-action-end': DoAnyPhaseArg\n    'interactions:stop': { interaction: Interaction }\n  }\n}\n\nexport type InteractionProxy<T extends ActionName | null = never> = Pick<\n  Interaction<T>,\n  keyof typeof _ProxyValues | keyof typeof _ProxyMethods\n>\n\nlet idCounter = 0\n\nexport class Interaction<T extends ActionName | null = ActionName> {\n  /** current interactable being interacted with */\n  interactable: Interactable | null = null\n\n  /** the target element of the interactable */\n  element: Element | null = null\n  rect: FullRect | null = null\n  /** @internal */\n  _rects?: {\n    start: FullRect\n    corrected: FullRect\n    previous: FullRect\n    delta: FullRect\n  }\n  /** @internal */\n  edges: EdgeOptions | null = null\n\n  /** @internal */\n  _scopeFire: Scope['fire']\n\n  // action that's ready to be fired on next move event\n  prepared: ActionProps<T> = {\n    name: null,\n    axis: null,\n    edges: null,\n  }\n\n  pointerType: string\n\n  /** @internal keep track of added pointers */\n  pointers: PointerInfo[] = []\n\n  /** @internal pointerdown/mousedown/touchstart event */\n  downEvent: PointerEventType | null = null\n\n  /** @internal */ downPointer: PointerType = {} as PointerType\n\n  /** @internal */\n  _latestPointer: {\n    pointer: PointerType\n    event: PointerEventType\n    eventTarget: Node\n  } = {\n    pointer: null,\n    event: null,\n    eventTarget: null,\n  }\n\n  /** @internal */ prevEvent: InteractEvent<T, EventPhase> = null\n\n  pointerIsDown = false\n  pointerWasMoved = false\n  /** @internal */ _interacting = false\n  /** @internal */ _ending = false\n  /** @internal */ _stopped = true\n  /** @internal */ _proxy: InteractionProxy<T>\n\n  /** @internal */ simulation = null\n\n  /** @internal */ get pointerMoveTolerance() {\n    return 1\n  }\n\n  doMove = warnOnce(function (this: Interaction, signalArg: any) {\n    this.move(signalArg)\n  }, 'The interaction.doMove() method has been renamed to interaction.move()')\n\n  coords: CoordsSet = {\n    // Starting InteractEvent pointer coordinates\n    start: pointerUtils.newCoords(),\n    // Previous native pointer move event coordinates\n    prev: pointerUtils.newCoords(),\n    // current native pointer move event coordinates\n    cur: pointerUtils.newCoords(),\n    // Change in coordinates and time of the pointer\n    delta: pointerUtils.newCoords(),\n    // pointer velocity\n    velocity: pointerUtils.newCoords(),\n  }\n\n  /** @internal */ readonly _id: number = idCounter++\n\n  constructor({ pointerType, scopeFire }: { pointerType?: string; scopeFire: Scope['fire'] }) {\n    this._scopeFire = scopeFire\n    this.pointerType = pointerType\n\n    const that = this\n\n    this._proxy = {} as InteractionProxy<T>\n\n    for (const key in _ProxyValues) {\n      Object.defineProperty(this._proxy, key, {\n        get() {\n          return that[key]\n        },\n      })\n    }\n\n    for (const key in _ProxyMethods) {\n      Object.defineProperty(this._proxy, key, {\n        value: (...args: any[]) => that[key](...args),\n      })\n    }\n\n    this._scopeFire('interactions:new', { interaction: this })\n  }\n\n  pointerDown(pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    const pointerIndex = this.updatePointer(pointer, event, eventTarget, true)\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      pointerInfo,\n      type: 'down',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget)\n   *     }\n   * })\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param action - The action to be performed - drag, resize, etc.\n   * @param target - The Interactable to target\n   * @param element - The DOM Element to target\n   * @returns Whether the interaction was successfully started\n   */\n  start<A extends ActionName>(action: ActionProps<A>, interactable: Interactable, element: Element): boolean {\n    if (\n      this.interacting() ||\n      !this.pointerIsDown ||\n      this.pointers.length < (action.name === 'gesture' ? 2 : 1) ||\n      !interactable.options[action.name as keyof ActionDefaults].enabled\n    ) {\n      return false\n    }\n\n    copyAction(this.prepared, action)\n\n    this.interactable = interactable\n    this.element = element\n    this.rect = interactable.getRect(element)\n    this.edges = this.prepared.edges\n      ? extend({}, this.prepared.edges)\n      : { left: true, right: true, top: true, bottom: true }\n    this._stopped = false\n    this._interacting =\n      this._doPhase({\n        interaction: this,\n        event: this.downEvent,\n        phase: 'start',\n      }) && !this._stopped\n\n    return this._interacting\n  }\n\n  pointerMove(pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    if (!this.simulation && !(this.modification && this.modification.endResult)) {\n      this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const duplicateMove =\n      this.coords.cur.page.x === this.coords.prev.page.x &&\n      this.coords.cur.page.y === this.coords.prev.page.y &&\n      this.coords.cur.client.x === this.coords.prev.client.x &&\n      this.coords.cur.client.y === this.coords.prev.client.y\n\n    let dx: number\n    let dy: number\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.coords.cur.client.x - this.coords.start.client.x\n      dy = this.coords.cur.client.y - this.coords.start.client.y\n\n      this.pointerWasMoved = hypot(dx, dy) > this.pointerMoveTolerance\n    }\n\n    const pointerIndex = this.getPointerIndex(pointer)\n    const signalArg = {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      type: 'move' as const,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this as unknown as Interaction<never>,\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and velocity\n      pointerUtils.setCoordVelocity(this.coords.velocity, this.coords.delta)\n    }\n\n    this._scopeFire('interactions:move', signalArg)\n\n    if (!duplicateMove && !this.simulation) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        signalArg.type = null\n        this.move(signalArg)\n      }\n\n      if (this.pointerWasMoved) {\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }})\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move()\n   *     }\n   *   })\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  move(signalArg?: any) {\n    if (!signalArg || !signalArg.event) {\n      pointerUtils.setZeroCoords(this.coords.delta)\n    }\n\n    signalArg = extend(\n      {\n        pointer: this._latestPointer.pointer,\n        event: this._latestPointer.event,\n        eventTarget: this._latestPointer.eventTarget,\n        interaction: this,\n      },\n      signalArg || {},\n    )\n\n    signalArg.phase = 'move'\n\n    this._doPhase(signalArg)\n  }\n\n  /**\n   * @internal\n   * End interact move events and stop auto-scroll unless simulation is running\n   */\n  pointerUp(pointer: PointerType, event: PointerEventType, eventTarget: Node, curEventTarget: EventTarget) {\n    let pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) {\n      pointerIndex = this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const type = /cancel$/i.test(event.type) ? 'cancel' : 'up'\n\n    this._scopeFire(`interactions:${type}` as 'interactions:up' | 'interactions:cancel', {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      eventTarget,\n      type: type as any,\n      curEventTarget,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    if (!this.simulation) {\n      this.end(event)\n    }\n\n    this.removePointer(pointer, event)\n  }\n\n  /** @internal */\n  documentBlur(event: Event) {\n    this.end(event as any)\n    this._scopeFire('interactions:blur', {\n      event,\n      type: 'blur',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end()\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation()\n   *     }\n   *   })\n   * ```\n   */\n  end(event?: PointerEventType) {\n    this._ending = true\n    event = event || this._latestPointer.event\n    let endPhaseResult: boolean\n\n    if (this.interacting()) {\n      endPhaseResult = this._doPhase({\n        event,\n        interaction: this,\n        phase: 'end',\n      })\n    }\n\n    this._ending = false\n\n    if (endPhaseResult === true) {\n      this.stop()\n    }\n  }\n\n  currentAction() {\n    return this._interacting ? this.prepared.name : null\n  }\n\n  interacting() {\n    return this._interacting\n  }\n\n  stop() {\n    this._scopeFire('interactions:stop', { interaction: this })\n\n    this.interactable = this.element = null\n\n    this._interacting = false\n    this._stopped = true\n    this.prepared.name = this.prevEvent = null\n  }\n\n  /** @internal */\n  getPointerIndex(pointer: any) {\n    const pointerId = pointerUtils.getPointerId(pointer)\n\n    // mouse and pen interactions may have only one pointer\n    return this.pointerType === 'mouse' || this.pointerType === 'pen'\n      ? this.pointers.length - 1\n      : arr.findIndex(this.pointers, (curPointer) => curPointer.id === pointerId)\n  }\n\n  /** @internal */\n  getPointerInfo(pointer: any) {\n    return this.pointers[this.getPointerIndex(pointer)]\n  }\n\n  /** @internal */\n  updatePointer(pointer: PointerType, event: PointerEventType, eventTarget: Node, down?: boolean) {\n    const id = pointerUtils.getPointerId(pointer)\n    let pointerIndex = this.getPointerIndex(pointer)\n    let pointerInfo = this.pointers[pointerIndex]\n\n    down = down === false ? false : down || /(down|start)$/i.test(event.type)\n\n    if (!pointerInfo) {\n      pointerInfo = new PointerInfo(id, pointer, event, null, null)\n\n      pointerIndex = this.pointers.length\n      this.pointers.push(pointerInfo)\n    } else {\n      pointerInfo.pointer = pointer\n    }\n\n    pointerUtils.setCoords(\n      this.coords.cur,\n      this.pointers.map((p) => p.pointer),\n      this._now(),\n    )\n    pointerUtils.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur)\n\n    if (down) {\n      this.pointerIsDown = true\n\n      pointerInfo.downTime = this.coords.cur.timeStamp\n      pointerInfo.downTarget = eventTarget\n      pointerUtils.pointerExtend(this.downPointer, pointer)\n\n      if (!this.interacting()) {\n        pointerUtils.copyCoords(this.coords.start, this.coords.cur)\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n\n        this.downEvent = event\n        this.pointerWasMoved = false\n      }\n    }\n\n    this._updateLatestPointer(pointer, event, eventTarget)\n\n    this._scopeFire('interactions:update-pointer', {\n      pointer,\n      event,\n      eventTarget,\n      down,\n      pointerInfo,\n      pointerIndex,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    return pointerIndex\n  }\n\n  /** @internal */\n  removePointer(pointer: PointerType, event: PointerEventType) {\n    const pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) return\n\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:remove-pointer', {\n      pointer,\n      event,\n      eventTarget: null,\n      pointerIndex,\n      pointerInfo,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    this.pointers.splice(pointerIndex, 1)\n    this.pointerIsDown = false\n  }\n\n  /** @internal */\n  _updateLatestPointer(pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    this._latestPointer.pointer = pointer\n    this._latestPointer.event = event\n    this._latestPointer.eventTarget = eventTarget\n  }\n\n  destroy() {\n    this._latestPointer.pointer = null\n    this._latestPointer.event = null\n    this._latestPointer.eventTarget = null\n  }\n\n  /** @internal */\n  _createPreparedEvent<P extends EventPhase>(\n    event: PointerEventType,\n    phase: P,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    return new InteractEvent<T, P>(this, event, this.prepared.name, phase, this.element, preEnd, type)\n  }\n\n  /** @internal */\n  _fireEvent<P extends EventPhase>(iEvent: InteractEvent<T, P>) {\n    this.interactable?.fire(iEvent)\n\n    if (!this.prevEvent || iEvent.timeStamp >= this.prevEvent.timeStamp) {\n      this.prevEvent = iEvent\n    }\n  }\n\n  /** @internal */\n  _doPhase<P extends EventPhase>(\n    signalArg: Omit<DoPhaseArg<T, P>, 'iEvent'> & { iEvent?: InteractEvent<T, P> },\n  ) {\n    const { event, phase, preEnd, type } = signalArg\n    const { rect } = this\n\n    if (rect && phase === 'move') {\n      // update the rect changes due to pointer move\n      rectUtils.addEdges(this.edges, rect, this.coords.delta[this.interactable.options.deltaSource])\n\n      rect.width = rect.right - rect.left\n      rect.height = rect.bottom - rect.top\n    }\n\n    const beforeResult = this._scopeFire(`interactions:before-action-${phase}` as any, signalArg)\n\n    if (beforeResult === false) {\n      return false\n    }\n\n    const iEvent = (signalArg.iEvent = this._createPreparedEvent(event, phase, preEnd, type))\n\n    this._scopeFire(`interactions:action-${phase}` as any, signalArg)\n\n    if (phase === 'start') {\n      this.prevEvent = iEvent\n    }\n\n    this._fireEvent(iEvent)\n\n    this._scopeFire(`interactions:after-action-${phase}` as any, signalArg)\n\n    return true\n  }\n\n  /** @internal */\n  _now() {\n    return Date.now()\n  }\n}\n\nexport default Interaction\nexport { PointerInfo }\n"
	],
	"mappings": ";;;;;;;;;;;;;AAAA,IAAAA,GAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,MAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,KAAA,GAAAJ,OAAA;AACA,IAAAK,YAAA,GAAAN,uBAAA,CAAAC,OAAA;AACA,IAAAM,SAAA,GAAAP,uBAAA,CAAAC,OAAA;AAeA,IAAAO,cAAA,GAAAP,OAAA;AAEA,IAAAQ,YAAA,GAAAR,OAAA;AAA2C,SAAAE,uBAAAO,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAd,wBAAAc,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAH,UAAA,SAAAG,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAF,OAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAC,GAAA,CAAAJ,CAAA,UAAAG,CAAA,CAAAE,GAAA,CAAAL,CAAA,OAAAM,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAZ,CAAA,oBAAAY,CAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAY,CAAA,SAAAI,CAAA,GAAAR,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAX,CAAA,EAAAY,CAAA,UAAAI,CAAA,KAAAA,CAAA,CAAAX,GAAA,IAAAW,CAAA,CAAAC,GAAA,IAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAI,CAAA,IAAAV,CAAA,CAAAM,CAAA,IAAAZ,CAAA,CAAAY,CAAA,YAAAN,CAAA,CAAAR,OAAA,GAAAE,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAc,GAAA,CAAAjB,CAAA,EAAAM,CAAA,GAAAA,CAAA;AAAA,IAG/BY,YAAY,GAAAC,OAAA,CAAAD,YAAA,0BAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAA,OAAZA,YAAY;AAAA;AAAA,IASZE,aAAa,GAAAD,OAAA,CAAAC,aAAA,0BAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAuEzB,IAAIC,SAAS,GAAG,CAAC;AAEV,MAAMC,WAAW,CAA2C;EACjE;EACAC,YAAY,GAAwB,IAAI;;EAExC;EACAC,OAAO,GAAmB,IAAI;EAC9BC,IAAI,GAAoB,IAAI;EAC5B;EACAC,MAAM;EAMN;EACAC,KAAK,GAAuB,IAAI;;EAEhC;EACAC,UAAU;;EAEV;EACAC,QAAQ,GAAmB;IACzBC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,IAAI;IACVJ,KAAK,EAAE;EACT,CAAC;EAEDK,WAAW;;EAEX;EACAC,QAAQ,GAAkB,EAAE;;EAE5B;EACAC,SAAS,GAA4B,IAAI;;EAEzC;EAAiBC,WAAW,GAAgB,CAAC,CAAC;;EAE9C;EACAC,cAAc,GAIV;IACFC,OAAO,EAAE,IAAI;IACbC,KAAK,EAAE,IAAI;IACXC,WAAW,EAAE;EACf,CAAC;;EAED;EAAiBC,SAAS,GAAiC,IAAI;EAE/DC,aAAa,GAAG,KAAK;EACrBC,eAAe,GAAG,KAAK;EACvB;EAAiBC,YAAY,GAAG,KAAK;EACrC;EAAiBC,OAAO,GAAG,KAAK;EAChC;EAAiBC,QAAQ,GAAG,IAAI;EAChC;EAAiBC,MAAM;;EAEvB;EAAiBC,UAAU,GAAG,IAAI;;EAElC;EAAiB,IAAIC,oBAAoBA,CAAA,EAAG;IAC1C,OAAO,CAAC;EACV;EAEAC,MAAM,GAAG,IAAAC,cAAQ,EAAC,UAA6BC,SAAc,EAAE;IAC7D,IAAI,CAACC,IAAI,CAACD,SAAS,CAAC;EACtB,CAAC,EAAE,wEAAwE,CAAC;EAE5EE,MAAM,GAAc;IAClB;IACAC,KAAK,EAAE9D,YAAY,CAAC+D,SAAS,CAAC,CAAC;IAC/B;IACAC,IAAI,EAAEhE,YAAY,CAAC+D,SAAS,CAAC,CAAC;IAC9B;IACAE,GAAG,EAAEjE,YAAY,CAAC+D,SAAS,CAAC,CAAC;IAC7B;IACAG,KAAK,EAAElE,YAAY,CAAC+D,SAAS,CAAC,CAAC;IAC/B;IACAI,QAAQ,EAAEnE,YAAY,CAAC+D,SAAS,CAAC;EACnC,CAAC;;EAED;EAA0BK,GAAG,GAAWvC,SAAS,EAAE;EAEnDwC,WAAWA,CAAC;IAAE7B,WAAW;IAAE8B;EAA8D,CAAC,EAAE;IAC1F,IAAI,CAAClC,UAAU,GAAGkC,SAAS;IAC3B,IAAI,CAAC9B,WAAW,GAAGA,WAAW;IAE9B,MAAM+B,IAAI,GAAG,IAAI;IAEjB,IAAI,CAACjB,MAAM,GAAG,CAAC,CAAwB;IAEvC,KAAK,MAAMkB,GAAG,IAAI9C,YAAY,EAAE;MAC9BT,MAAM,CAACC,cAAc,CAAC,IAAI,CAACoC,MAAM,EAAEkB,GAAG,EAAE;QACtC3D,GAAGA,CAAA,EAAG;UACJ,OAAO0D,IAAI,CAACC,GAAG,CAAC;QAClB;MACF,CAAC,CAAC;IACJ;IAEA,KAAK,MAAMA,GAAG,IAAI5C,aAAa,EAAE;MAC/BX,MAAM,CAACC,cAAc,CAAC,IAAI,CAACoC,MAAM,EAAEkB,GAAG,EAAE;QACtCC,KAAK,EAAEA,CAAC,GAAGC,IAAW,KAAKH,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGE,IAAI;MAC9C,CAAC,CAAC;IACJ;IAEA,IAAI,CAACtC,UAAU,CAAC,kBAAkB,EAAE;MAAEuC,WAAW,EAAE;IAAK,CAAC,CAAC;EAC5D;EAEAC,WAAWA,CAAC/B,OAAoB,EAAEC,KAAuB,EAAEC,WAAiB,EAAE;IAC5E,MAAM8B,YAAY,GAAG,IAAI,CAACC,aAAa,CAACjC,OAAO,EAAEC,KAAK,EAAEC,WAAW,EAAE,IAAI,CAAC;IAC1E,MAAMgC,WAAW,GAAG,IAAI,CAACtC,QAAQ,CAACoC,YAAY,CAAC;IAE/C,IAAI,CAACzC,UAAU,CAAC,mBAAmB,EAAE;MACnCS,OAAO;MACPC,KAAK;MACLC,WAAW;MACX8B,YAAY;MACZE,WAAW;MACXC,IAAI,EAAE,MAAM;MACZL,WAAW,EAAE;IACf,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEb,KAAKA,CAAuBmB,MAAsB,EAAElD,YAA0B,EAAEC,OAAgB,EAAW;IACzG,IACE,IAAI,CAACkD,WAAW,CAAC,CAAC,IAClB,CAAC,IAAI,CAACjC,aAAa,IACnB,IAAI,CAACR,QAAQ,CAAC0C,MAAM,IAAIF,MAAM,CAAC3C,IAAI,KAAK,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,IAC1D,CAACP,YAAY,CAACqD,OAAO,CAACH,MAAM,CAAC3C,IAAI,CAAyB,CAAC+C,OAAO,EAClE;MACA,OAAO,KAAK;IACd;IAEA,IAAAC,gBAAU,EAAC,IAAI,CAACjD,QAAQ,EAAE4C,MAAM,CAAC;IAEjC,IAAI,CAAClD,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,IAAI,GAAGF,YAAY,CAACwD,OAAO,CAACvD,OAAO,CAAC;IACzC,IAAI,CAACG,KAAK,GAAG,IAAI,CAACE,QAAQ,CAACF,KAAK,GAC5B,IAAAqD,eAAM,EAAC,CAAC,CAAC,EAAE,IAAI,CAACnD,QAAQ,CAACF,KAAK,CAAC,GAC/B;MAAEsD,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE,IAAI;MAAEC,GAAG,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAK,CAAC;IACxD,IAAI,CAACvC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACF,YAAY,GACf,IAAI,CAAC0C,QAAQ,CAAC;MACZlB,WAAW,EAAE,IAAI;MACjB7B,KAAK,EAAE,IAAI,CAACJ,SAAS;MACrBoD,KAAK,EAAE;IACT,CAAC,CAAC,IAAI,CAAC,IAAI,CAACzC,QAAQ;IAEtB,OAAO,IAAI,CAACF,YAAY;EAC1B;EAEA4C,WAAWA,CAAClD,OAAoB,EAAEC,KAAuB,EAAEC,WAAiB,EAAE;IAC5E,IAAI,CAAC,IAAI,CAACQ,UAAU,IAAI,EAAE,IAAI,CAACyC,YAAY,IAAI,IAAI,CAACA,YAAY,CAACC,SAAS,CAAC,EAAE;MAC3E,IAAI,CAACnB,aAAa,CAACjC,OAAO,EAAEC,KAAK,EAAEC,WAAW,EAAE,KAAK,CAAC;IACxD;IAEA,MAAMmD,aAAa,GACjB,IAAI,CAACrC,MAAM,CAACI,GAAG,CAACkC,IAAI,CAACC,CAAC,KAAK,IAAI,CAACvC,MAAM,CAACG,IAAI,CAACmC,IAAI,CAACC,CAAC,IAClD,IAAI,CAACvC,MAAM,CAACI,GAAG,CAACkC,IAAI,CAACE,CAAC,KAAK,IAAI,CAACxC,MAAM,CAACG,IAAI,CAACmC,IAAI,CAACE,CAAC,IAClD,IAAI,CAACxC,MAAM,CAACI,GAAG,CAACqC,MAAM,CAACF,CAAC,KAAK,IAAI,CAACvC,MAAM,CAACG,IAAI,CAACsC,MAAM,CAACF,CAAC,IACtD,IAAI,CAACvC,MAAM,CAACI,GAAG,CAACqC,MAAM,CAACD,CAAC,KAAK,IAAI,CAACxC,MAAM,CAACG,IAAI,CAACsC,MAAM,CAACD,CAAC;IAExD,IAAIE,EAAU;IACd,IAAIC,EAAU;;IAEd;IACA,IAAI,IAAI,CAACvD,aAAa,IAAI,CAAC,IAAI,CAACC,eAAe,EAAE;MAC/CqD,EAAE,GAAG,IAAI,CAAC1C,MAAM,CAACI,GAAG,CAACqC,MAAM,CAACF,CAAC,GAAG,IAAI,CAACvC,MAAM,CAACC,KAAK,CAACwC,MAAM,CAACF,CAAC;MAC1DI,EAAE,GAAG,IAAI,CAAC3C,MAAM,CAACI,GAAG,CAACqC,MAAM,CAACD,CAAC,GAAG,IAAI,CAACxC,MAAM,CAACC,KAAK,CAACwC,MAAM,CAACD,CAAC;MAE1D,IAAI,CAACnD,eAAe,GAAG,IAAAuD,cAAK,EAACF,EAAE,EAAEC,EAAE,CAAC,GAAG,IAAI,CAAChD,oBAAoB;IAClE;IAEA,MAAMqB,YAAY,GAAG,IAAI,CAAC6B,eAAe,CAAC7D,OAAO,CAAC;IAClD,MAAMc,SAAS,GAAG;MAChBd,OAAO;MACPgC,YAAY;MACZE,WAAW,EAAE,IAAI,CAACtC,QAAQ,CAACoC,YAAY,CAAC;MACxC/B,KAAK;MACLkC,IAAI,EAAE,MAAe;MACrBjC,WAAW;MACXwD,EAAE;MACFC,EAAE;MACFG,SAAS,EAAET,aAAa;MACxBvB,WAAW,EAAE;IACf,CAAC;IAED,IAAI,CAACuB,aAAa,EAAE;MAClB;MACAlG,YAAY,CAAC4G,gBAAgB,CAAC,IAAI,CAAC/C,MAAM,CAACM,QAAQ,EAAE,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC;IACxE;IAEA,IAAI,CAAC9B,UAAU,CAAC,mBAAmB,EAAEuB,SAAS,CAAC;IAE/C,IAAI,CAACuC,aAAa,IAAI,CAAC,IAAI,CAAC3C,UAAU,EAAE;MACtC;MACA,IAAI,IAAI,CAAC2B,WAAW,CAAC,CAAC,EAAE;QACtBvB,SAAS,CAACqB,IAAI,GAAG,IAAI;QACrB,IAAI,CAACpB,IAAI,CAACD,SAAS,CAAC;MACtB;MAEA,IAAI,IAAI,CAACT,eAAe,EAAE;QACxBlD,YAAY,CAAC6G,UAAU,CAAC,IAAI,CAAChD,MAAM,CAACG,IAAI,EAAE,IAAI,CAACH,MAAM,CAACI,GAAG,CAAC;MAC5D;IACF;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEL,IAAIA,CAACD,SAAe,EAAE;IACpB,IAAI,CAACA,SAAS,IAAI,CAACA,SAAS,CAACb,KAAK,EAAE;MAClC9C,YAAY,CAAC8G,aAAa,CAAC,IAAI,CAACjD,MAAM,CAACK,KAAK,CAAC;IAC/C;IAEAP,SAAS,GAAG,IAAA6B,eAAM,EAChB;MACE3C,OAAO,EAAE,IAAI,CAACD,cAAc,CAACC,OAAO;MACpCC,KAAK,EAAE,IAAI,CAACF,cAAc,CAACE,KAAK;MAChCC,WAAW,EAAE,IAAI,CAACH,cAAc,CAACG,WAAW;MAC5C4B,WAAW,EAAE;IACf,CAAC,EACDhB,SAAS,IAAI,CAAC,CAChB,CAAC;IAEDA,SAAS,CAACmC,KAAK,GAAG,MAAM;IAExB,IAAI,CAACD,QAAQ,CAAClC,SAAS,CAAC;EAC1B;;EAEA;AACF;AACA;AACA;EACEoD,SAASA,CAAClE,OAAoB,EAAEC,KAAuB,EAAEC,WAAiB,EAAEiE,cAA2B,EAAE;IACvG,IAAInC,YAAY,GAAG,IAAI,CAAC6B,eAAe,CAAC7D,OAAO,CAAC;IAEhD,IAAIgC,YAAY,KAAK,CAAC,CAAC,EAAE;MACvBA,YAAY,GAAG,IAAI,CAACC,aAAa,CAACjC,OAAO,EAAEC,KAAK,EAAEC,WAAW,EAAE,KAAK,CAAC;IACvE;IAEA,MAAMiC,IAAI,GAAG,UAAU,CAACiC,IAAI,CAACnE,KAAK,CAACkC,IAAI,CAAC,GAAG,QAAQ,GAAG,IAAI;IAE1D,IAAI,CAAC5C,UAAU,CAAE,gBAAe4C,IAAK,EAAC,EAA+C;MACnFnC,OAAO;MACPgC,YAAY;MACZE,WAAW,EAAE,IAAI,CAACtC,QAAQ,CAACoC,YAAY,CAAC;MACxC/B,KAAK;MACLC,WAAW;MACXiC,IAAI,EAAEA,IAAW;MACjBgC,cAAc;MACdrC,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,IAAI,CAAC,IAAI,CAACpB,UAAU,EAAE;MACpB,IAAI,CAAC2D,GAAG,CAACpE,KAAK,CAAC;IACjB;IAEA,IAAI,CAACqE,aAAa,CAACtE,OAAO,EAAEC,KAAK,CAAC;EACpC;;EAEA;EACAsE,YAAYA,CAACtE,KAAY,EAAE;IACzB,IAAI,CAACoE,GAAG,CAACpE,KAAY,CAAC;IACtB,IAAI,CAACV,UAAU,CAAC,mBAAmB,EAAE;MACnCU,KAAK;MACLkC,IAAI,EAAE,MAAM;MACZL,WAAW,EAAE;IACf,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEuC,GAAGA,CAACpE,KAAwB,EAAE;IAC5B,IAAI,CAACM,OAAO,GAAG,IAAI;IACnBN,KAAK,GAAGA,KAAK,IAAI,IAAI,CAACF,cAAc,CAACE,KAAK;IAC1C,IAAIuE,cAAuB;IAE3B,IAAI,IAAI,CAACnC,WAAW,CAAC,CAAC,EAAE;MACtBmC,cAAc,GAAG,IAAI,CAACxB,QAAQ,CAAC;QAC7B/C,KAAK;QACL6B,WAAW,EAAE,IAAI;QACjBmB,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;IAEA,IAAI,CAAC1C,OAAO,GAAG,KAAK;IAEpB,IAAIiE,cAAc,KAAK,IAAI,EAAE;MAC3B,IAAI,CAACC,IAAI,CAAC,CAAC;IACb;EACF;EAEAC,aAAaA,CAAA,EAAG;IACd,OAAO,IAAI,CAACpE,YAAY,GAAG,IAAI,CAACd,QAAQ,CAACC,IAAI,GAAG,IAAI;EACtD;EAEA4C,WAAWA,CAAA,EAAG;IACZ,OAAO,IAAI,CAAC/B,YAAY;EAC1B;EAEAmE,IAAIA,CAAA,EAAG;IACL,IAAI,CAAClF,UAAU,CAAC,mBAAmB,EAAE;MAAEuC,WAAW,EAAE;IAAK,CAAC,CAAC;IAE3D,IAAI,CAAC5C,YAAY,GAAG,IAAI,CAACC,OAAO,GAAG,IAAI;IAEvC,IAAI,CAACmB,YAAY,GAAG,KAAK;IACzB,IAAI,CAACE,QAAQ,GAAG,IAAI;IACpB,IAAI,CAAChB,QAAQ,CAACC,IAAI,GAAG,IAAI,CAACU,SAAS,GAAG,IAAI;EAC5C;;EAEA;EACA0D,eAAeA,CAAC7D,OAAY,EAAE;IAC5B,MAAM2E,SAAS,GAAGxH,YAAY,CAACyH,YAAY,CAAC5E,OAAO,CAAC;;IAEpD;IACA,OAAO,IAAI,CAACL,WAAW,KAAK,OAAO,IAAI,IAAI,CAACA,WAAW,KAAK,KAAK,GAC7D,IAAI,CAACC,QAAQ,CAAC0C,MAAM,GAAG,CAAC,GACxB1F,GAAG,CAACiI,SAAS,CAAC,IAAI,CAACjF,QAAQ,EAAGkF,UAAU,IAAKA,UAAU,CAACC,EAAE,KAAKJ,SAAS,CAAC;EAC/E;;EAEA;EACAK,cAAcA,CAAChF,OAAY,EAAE;IAC3B,OAAO,IAAI,CAACJ,QAAQ,CAAC,IAAI,CAACiE,eAAe,CAAC7D,OAAO,CAAC,CAAC;EACrD;;EAEA;EACAiC,aAAaA,CAACjC,OAAoB,EAAEC,KAAuB,EAAEC,WAAiB,EAAE+E,IAAc,EAAE;IAC9F,MAAMF,EAAE,GAAG5H,YAAY,CAACyH,YAAY,CAAC5E,OAAO,CAAC;IAC7C,IAAIgC,YAAY,GAAG,IAAI,CAAC6B,eAAe,CAAC7D,OAAO,CAAC;IAChD,IAAIkC,WAAW,GAAG,IAAI,CAACtC,QAAQ,CAACoC,YAAY,CAAC;IAE7CiD,IAAI,GAAGA,IAAI,KAAK,KAAK,GAAG,KAAK,GAAGA,IAAI,IAAI,gBAAgB,CAACb,IAAI,CAACnE,KAAK,CAACkC,IAAI,CAAC;IAEzE,IAAI,CAACD,WAAW,EAAE;MAChBA,WAAW,GAAG,IAAIgD,wBAAW,CAACH,EAAE,EAAE/E,OAAO,EAAEC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;MAE7D+B,YAAY,GAAG,IAAI,CAACpC,QAAQ,CAAC0C,MAAM;MACnC,IAAI,CAAC1C,QAAQ,CAACuF,IAAI,CAACjD,WAAW,CAAC;IACjC,CAAC,MAAM;MACLA,WAAW,CAAClC,OAAO,GAAGA,OAAO;IAC/B;IAEA7C,YAAY,CAACiI,SAAS,CACpB,IAAI,CAACpE,MAAM,CAACI,GAAG,EACf,IAAI,CAACxB,QAAQ,CAACyF,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACtF,OAAO,CAAC,EACnC,IAAI,CAACuF,IAAI,CAAC,CACZ,CAAC;IACDpI,YAAY,CAACqI,cAAc,CAAC,IAAI,CAACxE,MAAM,CAACK,KAAK,EAAE,IAAI,CAACL,MAAM,CAACG,IAAI,EAAE,IAAI,CAACH,MAAM,CAACI,GAAG,CAAC;IAEjF,IAAI6D,IAAI,EAAE;MACR,IAAI,CAAC7E,aAAa,GAAG,IAAI;MAEzB8B,WAAW,CAACuD,QAAQ,GAAG,IAAI,CAACzE,MAAM,CAACI,GAAG,CAACsE,SAAS;MAChDxD,WAAW,CAACyD,UAAU,GAAGzF,WAAW;MACpC/C,YAAY,CAACyI,aAAa,CAAC,IAAI,CAAC9F,WAAW,EAAEE,OAAO,CAAC;MAErD,IAAI,CAAC,IAAI,CAACqC,WAAW,CAAC,CAAC,EAAE;QACvBlF,YAAY,CAAC6G,UAAU,CAAC,IAAI,CAAChD,MAAM,CAACC,KAAK,EAAE,IAAI,CAACD,MAAM,CAACI,GAAG,CAAC;QAC3DjE,YAAY,CAAC6G,UAAU,CAAC,IAAI,CAAChD,MAAM,CAACG,IAAI,EAAE,IAAI,CAACH,MAAM,CAACI,GAAG,CAAC;QAE1D,IAAI,CAACvB,SAAS,GAAGI,KAAK;QACtB,IAAI,CAACI,eAAe,GAAG,KAAK;MAC9B;IACF;IAEA,IAAI,CAACwF,oBAAoB,CAAC7F,OAAO,EAAEC,KAAK,EAAEC,WAAW,CAAC;IAEtD,IAAI,CAACX,UAAU,CAAC,6BAA6B,EAAE;MAC7CS,OAAO;MACPC,KAAK;MACLC,WAAW;MACX+E,IAAI;MACJ/C,WAAW;MACXF,YAAY;MACZF,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,OAAOE,YAAY;EACrB;;EAEA;EACAsC,aAAaA,CAACtE,OAAoB,EAAEC,KAAuB,EAAE;IAC3D,MAAM+B,YAAY,GAAG,IAAI,CAAC6B,eAAe,CAAC7D,OAAO,CAAC;IAElD,IAAIgC,YAAY,KAAK,CAAC,CAAC,EAAE;IAEzB,MAAME,WAAW,GAAG,IAAI,CAACtC,QAAQ,CAACoC,YAAY,CAAC;IAE/C,IAAI,CAACzC,UAAU,CAAC,6BAA6B,EAAE;MAC7CS,OAAO;MACPC,KAAK;MACLC,WAAW,EAAE,IAAI;MACjB8B,YAAY;MACZE,WAAW;MACXJ,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,IAAI,CAAClC,QAAQ,CAACkG,MAAM,CAAC9D,YAAY,EAAE,CAAC,CAAC;IACrC,IAAI,CAAC5B,aAAa,GAAG,KAAK;EAC5B;;EAEA;EACAyF,oBAAoBA,CAAC7F,OAAoB,EAAEC,KAAuB,EAAEC,WAAiB,EAAE;IACrF,IAAI,CAACH,cAAc,CAACC,OAAO,GAAGA,OAAO;IACrC,IAAI,CAACD,cAAc,CAACE,KAAK,GAAGA,KAAK;IACjC,IAAI,CAACF,cAAc,CAACG,WAAW,GAAGA,WAAW;EAC/C;EAEA6F,OAAOA,CAAA,EAAG;IACR,IAAI,CAAChG,cAAc,CAACC,OAAO,GAAG,IAAI;IAClC,IAAI,CAACD,cAAc,CAACE,KAAK,GAAG,IAAI;IAChC,IAAI,CAACF,cAAc,CAACG,WAAW,GAAG,IAAI;EACxC;;EAEA;EACA8F,oBAAoBA,CAClB/F,KAAuB,EACvBgD,KAAQ,EACRgD,MAAgB,EAChB9D,IAAa,EACb;IACA,OAAO,IAAI+D,4BAAa,CAAO,IAAI,EAAEjG,KAAK,EAAE,IAAI,CAACT,QAAQ,CAACC,IAAI,EAAEwD,KAAK,EAAE,IAAI,CAAC9D,OAAO,EAAE8G,MAAM,EAAE9D,IAAI,CAAC;EACpG;;EAEA;EACAgE,UAAUA,CAAuBC,MAA2B,EAAE;IAAA,IAAAC,kBAAA;IAC5D,CAAAA,kBAAA,OAAI,CAACnH,YAAY,qBAAjBmH,kBAAA,CAAmBC,IAAI,CAACF,MAAM,CAAC;IAE/B,IAAI,CAAC,IAAI,CAACjG,SAAS,IAAIiG,MAAM,CAACV,SAAS,IAAI,IAAI,CAACvF,SAAS,CAACuF,SAAS,EAAE;MACnE,IAAI,CAACvF,SAAS,GAAGiG,MAAM;IACzB;EACF;;EAEA;EACApD,QAAQA,CACNlC,SAA8E,EAC9E;IACA,MAAM;MAAEb,KAAK;MAAEgD,KAAK;MAAEgD,MAAM;MAAE9D;IAAK,CAAC,GAAGrB,SAAS;IAChD,MAAM;MAAE1B;IAAK,CAAC,GAAG,IAAI;IAErB,IAAIA,IAAI,IAAI6D,KAAK,KAAK,MAAM,EAAE;MAC5B;MACA7F,SAAS,CAACmJ,QAAQ,CAAC,IAAI,CAACjH,KAAK,EAAEF,IAAI,EAAE,IAAI,CAAC4B,MAAM,CAACK,KAAK,CAAC,IAAI,CAACnC,YAAY,CAACqD,OAAO,CAACiE,WAAW,CAAC,CAAC;MAE9FpH,IAAI,CAACqH,KAAK,GAAGrH,IAAI,CAACyD,KAAK,GAAGzD,IAAI,CAACwD,IAAI;MACnCxD,IAAI,CAACsH,MAAM,GAAGtH,IAAI,CAAC2D,MAAM,GAAG3D,IAAI,CAAC0D,GAAG;IACtC;IAEA,MAAM6D,YAAY,GAAG,IAAI,CAACpH,UAAU,CAAE,8BAA6B0D,KAAM,EAAC,EAASnC,SAAS,CAAC;IAE7F,IAAI6F,YAAY,KAAK,KAAK,EAAE;MAC1B,OAAO,KAAK;IACd;IAEA,MAAMP,MAAM,GAAItF,SAAS,CAACsF,MAAM,GAAG,IAAI,CAACJ,oBAAoB,CAAC/F,KAAK,EAAEgD,KAAK,EAAEgD,MAAM,EAAE9D,IAAI,CAAE;IAEzF,IAAI,CAAC5C,UAAU,CAAE,uBAAsB0D,KAAM,EAAC,EAASnC,SAAS,CAAC;IAEjE,IAAImC,KAAK,KAAK,OAAO,EAAE;MACrB,IAAI,CAAC9C,SAAS,GAAGiG,MAAM;IACzB;IAEA,IAAI,CAACD,UAAU,CAACC,MAAM,CAAC;IAEvB,IAAI,CAAC7G,UAAU,CAAE,6BAA4B0D,KAAM,EAAC,EAASnC,SAAS,CAAC;IAEvE,OAAO,IAAI;EACb;;EAEA;EACAyE,IAAIA,CAAA,EAAG;IACL,OAAOqB,IAAI,CAACC,GAAG,CAAC,CAAC;EACnB;AACF;AAAC/H,OAAA,CAAAG,WAAA,GAAAA,WAAA;AAAA,IAAA6H,QAAA,GAAAhI,OAAA,CAAArB,OAAA,GAEcwB,WAAW"
}