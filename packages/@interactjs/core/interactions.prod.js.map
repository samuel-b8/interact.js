{
	"version": 3,
	"names": [
		"_browserProd",
		"_interopRequireDefault",
		"require",
		"_domObjectsProd",
		"_domUtilsProd",
		"pointerUtils",
		"e",
		"r",
		"__esModule",
		"default",
		"t",
		"_getRequireWildcardCache",
		"has",
		"get",
		"n",
		"__proto__",
		"a",
		"Object",
		"defineProperty",
		"getOwnPropertyDescriptor",
		"u",
		"prototype",
		"hasOwnProperty",
		"call",
		"i",
		"set",
		"_interopRequireWildcard",
		"_interactablePreventDefault",
		"_Interaction",
		"_interactionFinder",
		"WeakMap",
		"obj",
		"methodNames",
		"doOnInteractions",
		"method",
		"scope",
		"event",
		"interactions",
		"list",
		"pointerType",
		"getPointerType",
		"eventTarget",
		"curEventTarget",
		"getEventTargets",
		"matches",
		"test",
		"type",
		"prevTouchTime",
		"now",
		"changedTouch",
		"changedTouches",
		"pointer",
		"searchDetails",
		"pointerId",
		"getPointerId",
		"eventType",
		"interaction",
		"getInteraction",
		"push",
		"invalidPointer",
		"browser",
		"supportsPointerEvent",
		"length",
		"pointerIsDown",
		"timeStamp",
		"signalArg",
		"finder",
		"search",
		"fire",
		"new",
		"onDocSignal",
		"doc",
		"options",
		"eventMethodName",
		"docEvents",
		"events",
		"eventMethod",
		"isIOS",
		"passive",
		"delegatedEvents",
		"delegateListener",
		"delegateUseCapture",
		"eventOptions",
		"listener",
		"id",
		"install",
		"listeners",
		"pEventTypes",
		"releasePointersOnRemovedEls",
		"_interacting",
		"pointers",
		"documents",
		"some",
		"nodeContains",
		"downTarget",
		"removePointer",
		"domObjects",
		"PointerEvent",
		"down",
		"pointerDown",
		"move",
		"pointerMove",
		"up",
		"pointerUp",
		"cancel",
		"documentBlur",
		"Interaction",
		"InteractionBase",
		"pointerMoveTolerance",
		"value",
		"_now",
		"scopeFire",
		"name",
		"arg",
		"usePlugin",
		"interactablePreventDefault",
		"interactable",
		"stop",
		"destroy",
		"splice",
		"exports"
	],
	"sources": [
		"interactions.ts"
	],
	"sourcesContent": [
		"import browser from '@interactjs/utils/browser'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { nodeContains } from '@interactjs/utils/domUtils'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Listener } from '@interactjs/core/types'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './interactablePreventDefault'\nimport interactablePreventDefault from './interactablePreventDefault'\nimport InteractionBase from './Interaction'\n/* eslint-enable import/no-duplicates */\nimport type { SearchDetails } from './interactionFinder'\nimport finder from './interactionFinder'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    Interaction: typeof InteractionBase\n    interactions: {\n      new: <T extends ActionName>(options: any) => InteractionBase<T>\n      list: Array<InteractionBase<ActionName>>\n      listeners: { [type: string]: Listener }\n      docEvents: Array<{ type: string; listener: Listener }>\n      pointerMoveTolerance: number\n    }\n    prevTouchTime: number\n  }\n\n  interface SignalArgs {\n    'interactions:find': {\n      interaction: InteractionBase\n      searchDetails: SearchDetails\n    }\n  }\n}\n\nconst methodNames = [\n  'pointerDown',\n  'pointerMove',\n  'pointerUp',\n  'updatePointer',\n  'removePointer',\n  'windowBlur',\n]\n\nfunction install(scope: Scope) {\n  const listeners = {} as any\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope)\n  }\n\n  const pEventTypes = browser.pEventTypes\n  let docEvents: typeof scope.interactions.docEvents\n\n  if (domObjects.PointerEvent) {\n    docEvents = [\n      { type: pEventTypes.down, listener: releasePointersOnRemovedEls },\n      { type: pEventTypes.down, listener: listeners.pointerDown },\n      { type: pEventTypes.move, listener: listeners.pointerMove },\n      { type: pEventTypes.up, listener: listeners.pointerUp },\n      { type: pEventTypes.cancel, listener: listeners.pointerUp },\n    ]\n  } else {\n    docEvents = [\n      { type: 'mousedown', listener: listeners.pointerDown },\n      { type: 'mousemove', listener: listeners.pointerMove },\n      { type: 'mouseup', listener: listeners.pointerUp },\n\n      { type: 'touchstart', listener: releasePointersOnRemovedEls },\n      { type: 'touchstart', listener: listeners.pointerDown },\n      { type: 'touchmove', listener: listeners.pointerMove },\n      { type: 'touchend', listener: listeners.pointerUp },\n      { type: 'touchcancel', listener: listeners.pointerUp },\n    ]\n  }\n\n  docEvents.push({\n    type: 'blur',\n    listener(event) {\n      for (const interaction of scope.interactions.list) {\n        interaction.documentBlur(event)\n      }\n    },\n  })\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0\n\n  scope.Interaction = class<T extends ActionName> extends InteractionBase<T> {\n    get pointerMoveTolerance() {\n      return scope.interactions.pointerMoveTolerance\n    }\n\n    set pointerMoveTolerance(value) {\n      scope.interactions.pointerMoveTolerance = value\n    }\n\n    _now() {\n      return scope.now()\n    }\n  }\n\n  scope.interactions = {\n    // all active and idle interactions\n    list: [],\n    new<T extends ActionName>(options: { pointerType?: string; scopeFire?: Scope['fire'] }) {\n      options.scopeFire = (name, arg) => scope.fire(name, arg)\n\n      const interaction = new scope.Interaction<T>(options as Required<typeof options>)\n\n      scope.interactions.list.push(interaction)\n      return interaction\n    },\n    listeners,\n    docEvents,\n    pointerMoveTolerance: 1,\n  }\n\n  function releasePointersOnRemovedEls() {\n    // for all inactive touch interactions with pointers down\n    for (const interaction of scope.interactions.list) {\n      if (!interaction.pointerIsDown || interaction.pointerType !== 'touch' || interaction._interacting) {\n        continue\n      }\n\n      // if a pointer is down on an element that is no longer in the DOM tree\n      for (const pointer of interaction.pointers) {\n        if (!scope.documents.some(({ doc }) => nodeContains(doc, pointer.downTarget))) {\n          // remove the pointer from the interaction\n          interaction.removePointer(pointer.pointer, pointer.event)\n        }\n      }\n    }\n  }\n\n  scope.usePlugin(interactablePreventDefault)\n}\n\nfunction doOnInteractions(method: string, scope: Scope) {\n  return function (event: Event) {\n    const interactions = scope.interactions.list\n\n    const pointerType = pointerUtils.getPointerType(event)\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event)\n    const matches: any[] = [] // [ [pointer, interaction], ...]\n\n    if (/^touch/.test(event.type)) {\n      scope.prevTouchTime = scope.now()\n\n      // @ts-expect-error\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch\n        const pointerId = pointerUtils.getPointerId(pointer)\n        const searchDetails: SearchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        }\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    } else {\n      let invalidPointer = false\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer =\n          invalidPointer ||\n          scope.now() - scope.prevTouchTime < 500 ||\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          event.timeStamp === 0\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event as PointerEvent,\n          pointerId: pointerUtils.getPointerId(event as PointerEvent),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        }\n\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget)\n    }\n  }\n}\n\nfunction getInteraction(searchDetails: SearchDetails) {\n  const { pointerType, scope } = searchDetails\n\n  const foundInteraction = finder.search(searchDetails)\n  const signalArg = { interaction: foundInteraction, searchDetails }\n\n  scope.fire('interactions:find', signalArg)\n\n  return signalArg.interaction || scope.interactions.new({ pointerType })\n}\n\nfunction onDocSignal<T extends 'scope:add-document' | 'scope:remove-document'>(\n  { doc, scope, options }: SignalArgs[T],\n  eventMethodName: 'add' | 'remove',\n) {\n  const {\n    interactions: { docEvents },\n    events,\n  } = scope\n  const eventMethod = events[eventMethodName]\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false }\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener)\n    eventMethod(doc, eventType, events.delegateUseCapture, true)\n  }\n\n  const eventOptions = options && options.events\n\n  for (const { type, listener } of docEvents) {\n    eventMethod(doc, type, listener, eventOptions)\n  }\n}\n\nconst interactions: Plugin = {\n  id: 'core/interactions',\n  install,\n  listeners: {\n    'scope:add-document': (arg) => onDocSignal(arg, 'add'),\n    'scope:remove-document': (arg) => onDocSignal(arg, 'remove'),\n    'interactable:unset': ({ interactable }, scope) => {\n      // Stop and destroy related interactions when an Interactable is unset\n      for (let i = scope.interactions.list.length - 1; i >= 0; i--) {\n        const interaction = scope.interactions.list[i]\n\n        if (interaction.interactable !== interactable) {\n          continue\n        }\n\n        interaction.stop()\n        scope.fire('interactions:destroy', { interaction })\n        interaction.destroy()\n\n        if (scope.interactions.list.length > 2) {\n          scope.interactions.list.splice(i, 1)\n        }\n      }\n    },\n  },\n  onDocSignal,\n  doOnInteractions,\n  methodNames,\n}\n\nexport default interactions\n"
	],
	"mappings": "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"
}