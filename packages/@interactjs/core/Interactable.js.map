{
	"version": 3,
	"names": [
		"arr",
		"_interopRequireWildcard",
		"require",
		"_browser",
		"_interopRequireDefault",
		"_clone",
		"_domUtils",
		"_extend",
		"_is",
		"_isNonNativeEvent",
		"_normalizeListeners",
		"_window",
		"_Eventable",
		"obj",
		"__esModule",
		"default",
		"_getRequireWildcardCache",
		"e",
		"WeakMap",
		"r",
		"t",
		"has",
		"get",
		"n",
		"__proto__",
		"a",
		"Object",
		"defineProperty",
		"getOwnPropertyDescriptor",
		"u",
		"prototype",
		"hasOwnProperty",
		"call",
		"i",
		"set",
		"OnOffMethod",
		"Interactable",
		"_defaults",
		"base",
		"perAction",
		"actions",
		"target",
		"options",
		"_actions",
		"events",
		"Eventable",
		"_context",
		"_win",
		"_doc",
		"_scopeEvents",
		"constructor",
		"defaultContext",
		"scopeEvents",
		"context",
		"getWindow",
		"trySelector",
		"document",
		"setOnEvents",
		"actionName",
		"phases",
		"is",
		"func",
		"onstart",
		"on",
		"onmove",
		"onend",
		"oninertiastart",
		"updatePerActionListeners",
		"prev",
		"cur",
		"_this$_actions$map$ac",
		"actionFilter",
		"map",
		"filterEventType",
		"filter",
		"type",
		"isNonNativeEvent",
		"array",
		"object",
		"_onOff",
		"Off",
		"undefined",
		"On",
		"setPerAction",
		"defaults",
		"optionName_",
		"optionName",
		"actionOptions",
		"optionValue",
		"listeners",
		"from",
		"plainObject",
		"extend",
		"clone",
		"enabled",
		"bool",
		"getRect",
		"element",
		"string",
		"querySelector",
		"getElementRect",
		"rectChecker",
		"checker",
		"rect",
		"apply",
		"width",
		"right",
		"left",
		"height",
		"bottom",
		"top",
		"_backCompatOption",
		"newValue",
		"action",
		"origin",
		"deltaSource",
		"getAllElements",
		"Array",
		"querySelectorAll",
		"inContext",
		"ownerDocument",
		"nodeContains",
		"testIgnoreAllow",
		"targetNode",
		"eventTarget",
		"testIgnore",
		"ignoreFrom",
		"testAllow",
		"allowFrom",
		"matchesUpTo",
		"fire",
		"iEvent",
		"method",
		"typeArg",
		"listenerArg",
		"normalizeListeners",
		"browser",
		"wheelEvent",
		"listener",
		"types",
		"off",
		"actionName_",
		"methodDict",
		"methodName",
		"setting",
		"unset",
		"delegatedEvents",
		"delegated",
		"length",
		"selector",
		"splice",
		"l",
		"removeDelegate",
		"remove",
		"exports"
	],
	"sources": [
		"Interactable.ts"
	],
	"sourcesContent": [
		"/* eslint-disable no-dupe-class-members */\nimport * as arr from '@interactjs/utils/arr'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport { getElementRect, matchesUpTo, nodeContains, trySelector } from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport isNonNativeEvent from '@interactjs/utils/isNonNativeEvent'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport { getWindow } from '@interactjs/utils/window'\n\nimport type { Scope } from '@interactjs/core/scope'\nimport type {\n  ActionMap,\n  ActionMethod,\n  ActionName,\n  Actions,\n  Context,\n  Element,\n  EventTypes,\n  Listeners,\n  ListenersArg,\n  OrBoolean,\n  Target,\n} from '@interactjs/core/types'\n\nimport { Eventable } from './Eventable'\nimport type { ActionDefaults, Defaults, OptionsArg, PerActionDefaults, Options } from './options'\n\ntype IgnoreValue = string | Element | boolean\ntype DeltaSource = 'page' | 'client'\n\nconst enum OnOffMethod {\n  On,\n  Off,\n}\n\n/**\n * ```ts\n * const interactable = interact('.cards')\n *   .draggable({\n *     listeners: { move: event => console.log(event.type, event.pageX, event.pageY) }\n *   })\n *   .resizable({\n *     listeners: { move: event => console.log(event.rect) },\n *     modifiers: [interact.modifiers.restrictEdges({ outer: 'parent' })]\n *   })\n * ```\n */\nexport class Interactable implements Partial<Eventable> {\n  /** @internal */ get _defaults(): Defaults {\n    return {\n      base: {},\n      perAction: {},\n      actions: {} as ActionDefaults,\n    }\n  }\n\n  readonly target: Target\n  /** @internal */ readonly options!: Required<Options>\n  /** @internal */ readonly _actions: Actions\n  /** @internal */ readonly events = new Eventable()\n  /** @internal */ readonly _context: Context\n  /** @internal */ readonly _win: Window\n  /** @internal */ readonly _doc: Document\n  /** @internal */ readonly _scopeEvents: Scope['events']\n\n  constructor(\n    target: Target,\n    options: any,\n    defaultContext: Document | Element,\n    scopeEvents: Scope['events'],\n  ) {\n    this._actions = options.actions\n    this.target = target\n    this._context = options.context || defaultContext\n    this._win = getWindow(trySelector(target) ? this._context : target)\n    this._doc = this._win.document\n    this._scopeEvents = scopeEvents\n\n    this.set(options)\n  }\n\n  setOnEvents(actionName: ActionName, phases: NonNullable<any>) {\n    if (is.func(phases.onstart)) {\n      this.on(`${actionName}start`, phases.onstart)\n    }\n    if (is.func(phases.onmove)) {\n      this.on(`${actionName}move`, phases.onmove)\n    }\n    if (is.func(phases.onend)) {\n      this.on(`${actionName}end`, phases.onend)\n    }\n    if (is.func(phases.oninertiastart)) {\n      this.on(`${actionName}inertiastart`, phases.oninertiastart)\n    }\n\n    return this\n  }\n\n  updatePerActionListeners(actionName: ActionName, prev: Listeners | undefined, cur: Listeners | undefined) {\n    const actionFilter = (this._actions.map[actionName] as { filterEventType?: (type: string) => boolean })\n      ?.filterEventType\n    const filter = (type: string) =>\n      (actionFilter == null || actionFilter(type)) && isNonNativeEvent(type, this._actions)\n\n    if (is.array(prev) || is.object(prev)) {\n      this._onOff(OnOffMethod.Off, actionName, prev, undefined, filter)\n    }\n\n    if (is.array(cur) || is.object(cur)) {\n      this._onOff(OnOffMethod.On, actionName, cur, undefined, filter)\n    }\n  }\n\n  setPerAction(actionName: ActionName, options: OrBoolean<Options>) {\n    const defaults = this._defaults\n\n    // for all the default per-action options\n    for (const optionName_ in options) {\n      const optionName = optionName_ as keyof PerActionDefaults\n      const actionOptions = this.options[actionName]\n      const optionValue: any = options[optionName]\n\n      // remove old event listeners and add new ones\n      if (optionName === 'listeners') {\n        this.updatePerActionListeners(actionName, actionOptions.listeners, optionValue as Listeners)\n      }\n\n      // if the option value is an array\n      if (is.array(optionValue)) {\n        ;(actionOptions[optionName] as any) = arr.from(optionValue)\n      }\n      // if the option value is an object\n      else if (is.plainObject(optionValue)) {\n        // copy the object\n        ;(actionOptions[optionName] as any) = extend(\n          actionOptions[optionName] || ({} as any),\n          clone(optionValue),\n        )\n\n        // set anabled field to true if it exists in the defaults\n        if (\n          is.object(defaults.perAction[optionName]) &&\n          'enabled' in (defaults.perAction[optionName] as any)\n        ) {\n          ;(actionOptions[optionName] as any).enabled = optionValue.enabled !== false\n        }\n      }\n      // if the option value is a boolean and the default is an object\n      else if (is.bool(optionValue) && is.object(defaults.perAction[optionName])) {\n        ;(actionOptions[optionName] as any).enabled = optionValue\n      }\n      // if it's anything else, do a plain assignment\n      else {\n        ;(actionOptions[optionName] as any) = optionValue\n      }\n    }\n  }\n\n  /**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {Rect} The object's bounding rectangle.\n   */\n  getRect(element: Element) {\n    element = element || (is.element(this.target) ? this.target : null)\n\n    if (is.string(this.target)) {\n      element = element || this._context.querySelector(this.target)\n    }\n\n    return getElementRect(element)\n  }\n\n  /**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */\n  rectChecker(): (element: Element) => any | null\n  rectChecker(checker: (element: Element) => any): this\n  rectChecker(checker?: (element: Element) => any) {\n    if (is.func(checker)) {\n      this.getRect = (element) => {\n        const rect = extend({}, checker.apply(this, element))\n\n        if (!(('width' in rect) as unknown)) {\n          rect.width = rect.right - rect.left\n          rect.height = rect.bottom - rect.top\n        }\n\n        return rect\n      }\n\n      return this\n    }\n\n    if (checker === null) {\n      delete (this as Partial<typeof this>).getRect\n\n      return this\n    }\n\n    return this.getRect\n  }\n\n  /** @internal */\n  _backCompatOption(optionName: keyof Options, newValue: any) {\n    if (trySelector(newValue) || is.object(newValue)) {\n      ;(this.options[optionName] as any) = newValue\n\n      for (const action in this._actions.map) {\n        ;(this.options[action as keyof ActionMap] as any)[optionName] = newValue\n      }\n\n      return this\n    }\n\n    return this.options[optionName]\n  }\n\n  /**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */\n  origin(newValue: any) {\n    return this._backCompatOption('origin', newValue)\n  }\n\n  /**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */\n  deltaSource(): DeltaSource\n  deltaSource(newValue: DeltaSource): this\n  deltaSource(newValue?: DeltaSource) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue\n\n      return this\n    }\n\n    return this.options.deltaSource\n  }\n\n  /** @internal */\n  getAllElements(): Element[] {\n    const { target } = this\n\n    if (is.string(target)) {\n      return Array.from(this._context.querySelectorAll(target))\n    }\n\n    if (is.func(target) && (target as any).getAllElements) {\n      return (target as any).getAllElements()\n    }\n\n    return is.element(target) ? [target] : []\n  }\n\n  /**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */\n  context() {\n    return this._context\n  }\n\n  inContext(element: Document | Node) {\n    return this._context === element.ownerDocument || nodeContains(this._context, element)\n  }\n\n  /** @internal */\n  testIgnoreAllow(\n    this: Interactable,\n    options: { ignoreFrom?: IgnoreValue; allowFrom?: IgnoreValue },\n    targetNode: Node,\n    eventTarget: Node,\n  ) {\n    return (\n      !this.testIgnore(options.ignoreFrom, targetNode, eventTarget) &&\n      this.testAllow(options.allowFrom, targetNode, eventTarget)\n    )\n  }\n\n  /** @internal */\n  testAllow(this: Interactable, allowFrom: IgnoreValue | undefined, targetNode: Node, element: Node) {\n    if (!allowFrom) {\n      return true\n    }\n\n    if (!is.element(element)) {\n      return false\n    }\n\n    if (is.string(allowFrom)) {\n      return matchesUpTo(element, allowFrom, targetNode)\n    } else if (is.element(allowFrom)) {\n      return nodeContains(allowFrom, element)\n    }\n\n    return false\n  }\n\n  /** @internal */\n  testIgnore(this: Interactable, ignoreFrom: IgnoreValue | undefined, targetNode: Node, element: Node) {\n    if (!ignoreFrom || !is.element(element)) {\n      return false\n    }\n\n    if (is.string(ignoreFrom)) {\n      return matchesUpTo(element, ignoreFrom, targetNode)\n    } else if (is.element(ignoreFrom)) {\n      return nodeContains(ignoreFrom, element)\n    }\n\n    return false\n  }\n\n  /**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */\n  fire<E extends { type: string }>(iEvent: E) {\n    this.events.fire(iEvent)\n\n    return this\n  }\n\n  /** @internal */\n  _onOff(\n    method: OnOffMethod,\n    typeArg: EventTypes,\n    listenerArg?: ListenersArg | null,\n    options?: any,\n    filter?: (type: string) => boolean,\n  ) {\n    if (is.object(typeArg) && !is.array(typeArg)) {\n      options = listenerArg\n      listenerArg = null\n    }\n\n    const listeners = normalizeListeners(typeArg, listenerArg, filter)\n\n    for (let type in listeners) {\n      if (type === 'wheel') {\n        type = browser.wheelEvent\n      }\n\n      for (const listener of listeners[type]) {\n        // if it is an action event type\n        if (isNonNativeEvent(type, this._actions)) {\n          this.events[method === OnOffMethod.On ? 'on' : 'off'](type, listener)\n        }\n        // delegated event\n        else if (is.string(this.target)) {\n          this._scopeEvents[method === OnOffMethod.On ? 'addDelegate' : 'removeDelegate'](\n            this.target,\n            this._context,\n            type,\n            listener,\n            options,\n          )\n        }\n        // remove listener from this Interactable's element\n        else {\n          this._scopeEvents[method === OnOffMethod.On ? 'add' : 'remove'](\n            this.target,\n            type,\n            listener,\n            options,\n          )\n        }\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */\n  on(types: EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff(OnOffMethod.On, types, listener, options)\n  }\n\n  /**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */\n  off(types: string | string[] | EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff(OnOffMethod.Off, types, listener, options)\n  }\n\n  /**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */\n  set(options: OptionsArg) {\n    const defaults = this._defaults\n\n    if (!is.object(options)) {\n      options = {}\n    }\n\n    ;(this.options as Required<Options>) = clone(defaults.base) as Required<Options>\n\n    for (const actionName_ in this._actions.methodDict) {\n      const actionName = actionName_ as ActionName\n      const methodName = this._actions.methodDict[actionName]\n\n      this.options[actionName] = {}\n      this.setPerAction(actionName, extend(extend({}, defaults.perAction), defaults.actions[actionName]))\n      ;(this[methodName] as ActionMethod<unknown>)(options[actionName])\n    }\n\n    for (const setting in options) {\n      if (setting === 'getRect') {\n        this.rectChecker(options.getRect)\n        continue\n      }\n\n      if (is.func((this as any)[setting])) {\n        ;(this as any)[setting](options[setting as keyof typeof options])\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   */\n  unset() {\n    if (is.string(this.target)) {\n      // remove delegated events\n      for (const type in this._scopeEvents.delegatedEvents) {\n        const delegated = this._scopeEvents.delegatedEvents[type]\n\n        for (let i = delegated.length - 1; i >= 0; i--) {\n          const { selector, context, listeners } = delegated[i]\n\n          if (selector === this.target && context === this._context) {\n            delegated.splice(i, 1)\n          }\n\n          for (let l = listeners.length - 1; l >= 0; l--) {\n            this._scopeEvents.removeDelegate(\n              this.target,\n              this._context,\n              type,\n              listeners[l][0],\n              listeners[l][1],\n            )\n          }\n        }\n      }\n    } else {\n      this._scopeEvents.remove(this.target, 'all')\n    }\n  }\n}\n"
	],
	"mappings": "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"
}