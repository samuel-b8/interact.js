{
	"version": 3,
	"names": [
		"arr",
		"copyAction",
		"pointerUtils",
		"tlbrToXywh",
		"install",
		"scope",
		"Interactable",
		"actions",
		"phases",
		"reflow",
		"prototype",
		"action",
		"doReflow",
		"interactable",
		"elements",
		"getAllElements",
		"Promise",
		"window",
		"promises",
		"element",
		"rect",
		"getRect",
		"runningInteraction",
		"find",
		"interactions",
		"list",
		"interaction",
		"interacting",
		"prepared",
		"name",
		"reflowPromise",
		"move",
		"_reflowPromise",
		"resolve",
		"_reflowResolve",
		"xywh",
		"coords",
		"page",
		"x",
		"y",
		"client",
		"timeStamp",
		"now",
		"event",
		"coordsToEvent",
		"startReflow",
		"push",
		"all",
		"then",
		"new",
		"pointerType",
		"signalArg",
		"pointer",
		"eventTarget",
		"phase",
		"prevEvent",
		"updatePointer",
		"setZeroCoords",
		"delta",
		"_doPhase",
		"undefined",
		"start",
		"_interacting",
		"end",
		"stop",
		"removePointer",
		"id",
		"listeners",
		"interactions:stop",
		"remove"
	],
	"sources": [
		"plugin.ts"
	],
	"sourcesContent": [
		"import type { Interactable } from '@interactjs/core/Interactable'\nimport type { DoAnyPhaseArg, Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, ActionProps, Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport { copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport { tlbrToXywh } from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-reflow': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-reflow': DoAnyPhaseArg\n    'interactions:after-action-reflow': DoAnyPhaseArg\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    /**\n     * ```js\n     * const interactable = interact(target)\n     * const drag = { name: drag, axis: 'x' }\n     * const resize = { name: resize, edges: { left: true, bottom: true }\n     *\n     * interactable.reflow(drag)\n     * interactable.reflow(resize)\n     * ```\n     *\n     * Start an action sequence to re-apply modifiers, check drops, etc.\n     *\n     * @param { Object } action The action to begin\n     * @param { string } action.name The name of the action\n     * @returns { Promise } A promise that resolves to the `Interactable` when actions on all targets have ended\n     */\n    reflow<T extends ActionName>(action: ActionProps<T>): ReturnType<typeof doReflow>\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    _reflowPromise: Promise<void>\n    _reflowResolve: (...args: unknown[]) => void\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    reflow?: true\n  }\n}\n\nfunction install(scope: Scope) {\n  const { Interactable } = scope\n\n  scope.actions.phases.reflow = true\n\n  Interactable.prototype.reflow = function (action: ActionProps) {\n    return doReflow(this, action, scope)\n  }\n}\n\nfunction doReflow<T extends ActionName>(\n  interactable: Interactable,\n  action: ActionProps<T>,\n  scope: Scope,\n): Promise<Interactable> {\n  const elements = interactable.getAllElements()\n\n  // tslint:disable-next-line variable-name\n  const Promise = (scope.window as any).Promise\n  const promises: Array<Promise<null>> | null = Promise ? [] : null\n\n  for (const element of elements) {\n    const rect = interactable.getRect(element as HTMLElement | SVGElement)\n\n    if (!rect) {\n      break\n    }\n\n    const runningInteraction = arr.find(scope.interactions.list, (interaction: Interaction) => {\n      return (\n        interaction.interacting() &&\n        interaction.interactable === interactable &&\n        interaction.element === element &&\n        interaction.prepared.name === action.name\n      )\n    })\n    let reflowPromise: Promise<null>\n\n    if (runningInteraction) {\n      runningInteraction.move()\n\n      if (promises) {\n        reflowPromise =\n          runningInteraction._reflowPromise ||\n          new Promise((resolve: any) => {\n            runningInteraction._reflowResolve = resolve\n          })\n      }\n    } else {\n      const xywh = tlbrToXywh(rect)\n      const coords = {\n        page: { x: xywh.x, y: xywh.y },\n        client: { x: xywh.x, y: xywh.y },\n        timeStamp: scope.now(),\n      }\n\n      const event = pointerUtils.coordsToEvent(coords)\n      reflowPromise = startReflow<T>(scope, interactable, element, action, event)\n    }\n\n    if (promises) {\n      promises.push(reflowPromise)\n    }\n  }\n\n  return promises && Promise.all(promises).then(() => interactable)\n}\n\nfunction startReflow<T extends ActionName>(\n  scope: Scope,\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  event: any,\n) {\n  const interaction = scope.interactions.new({ pointerType: 'reflow' })\n  const signalArg = {\n    interaction,\n    event,\n    pointer: event,\n    eventTarget: element,\n    phase: 'reflow',\n  } as const\n\n  interaction.interactable = interactable\n  interaction.element = element\n  interaction.prevEvent = event\n  interaction.updatePointer(event, event, element, true)\n  pointerUtils.setZeroCoords(interaction.coords.delta)\n\n  copyAction(interaction.prepared, action)\n  interaction._doPhase(signalArg)\n\n  const { Promise } = scope.window as unknown as { Promise: PromiseConstructor }\n  const reflowPromise = Promise\n    ? new Promise<undefined>((resolve) => {\n        interaction._reflowResolve = resolve\n      })\n    : undefined\n\n  interaction._reflowPromise = reflowPromise\n  interaction.start(action, interactable, element)\n\n  if (interaction._interacting) {\n    interaction.move(signalArg)\n    interaction.end(event)\n  } else {\n    interaction.stop()\n    interaction._reflowResolve()\n  }\n\n  interaction.removePointer(event, event)\n\n  return reflowPromise\n}\n\nconst reflow: Plugin = {\n  id: 'reflow',\n  install,\n  listeners: {\n    // remove completed reflow interactions\n    'interactions:stop': ({ interaction }, scope) => {\n      if (interaction.pointerType === 'reflow') {\n        if (interaction._reflowResolve) {\n          interaction._reflowResolve()\n        }\n\n        arr.remove(scope.interactions.list, interaction)\n      }\n    },\n  },\n}\n\nexport default reflow\n"
	],
	"mappings": "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"
}