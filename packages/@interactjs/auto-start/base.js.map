{
	"version": 3,
	"names": [
		"domUtils",
		"extend",
		"is",
		"copyAction",
		"InteractableMethods",
		"install",
		"scope",
		"interactStatic",
		"interact",
		"defaults",
		"usePlugin",
		"base",
		"actionChecker",
		"styleCursor",
		"perAction",
		"manualStart",
		"max",
		"Infinity",
		"maxPerElement",
		"allowFrom",
		"ignoreFrom",
		"mouseButtons",
		"maxInteractions",
		"newValue",
		"autoStart",
		"withinInteractionLimit",
		"cursorElement",
		"prepareOnDown",
		"interaction",
		"pointer",
		"event",
		"eventTarget",
		"interacting",
		"actionInfo",
		"getActionInfo",
		"prepare",
		"prepareOnMove",
		"pointerType",
		"pointerIsDown",
		"startOnMove",
		"arg",
		"pointerWasMoved",
		"prepared",
		"name",
		"fire",
		"interactable",
		"actionName",
		"options",
		"element",
		"stop",
		"start",
		"setInteractionCursor",
		"clearCursorOnStop",
		"setCursor",
		"validateAction",
		"action",
		"testIgnoreAllow",
		"enabled",
		"validateMatches",
		"matches",
		"matchElements",
		"i",
		"len",
		"length",
		"match",
		"matchElement",
		"matchAction",
		"getAction",
		"pushMatches",
		"push",
		"interactables",
		"forEachMatch",
		"parentNode",
		"rect",
		"getRect",
		"maxActions",
		"autoStartMax",
		"activeInteractions",
		"interactableCount",
		"elementCount",
		"interactions",
		"list",
		"otherAction",
		"number",
		"cursor",
		"prevCursorElement",
		"style",
		"ownerDocument",
		"documentElement",
		"cursorChecker",
		"func",
		"_interacting",
		"actions",
		"map",
		"getCursor",
		"id",
		"before",
		"listeners",
		"interactions:move"
	],
	"sources": [
		"base.ts"
	],
	"sourcesContent": [
		"import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type {\n  CursorChecker,\n  PointerType,\n  PointerEventType,\n  Element,\n  ActionName,\n  ActionProps,\n} from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport { copyAction } from '@interactjs/utils/misc'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './InteractableMethods'\nimport InteractableMethods from './InteractableMethods'\n/* eslint-enable import/no-duplicates */\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    /**\n     * Returns or sets the maximum number of concurrent interactions allowed.  By\n     * default only 1 interaction is allowed at a time (for backwards\n     * compatibility). To allow multiple interactions on the same Interactables and\n     * elements, you need to enable it in the draggable, resizable and gesturable\n     * `'max'` and `'maxPerElement'` options.\n     *\n     * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n     */\n    maxInteractions: (newValue: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoStart: AutoStart\n  }\n\n  interface SignalArgs {\n    'autoStart:before-start': Omit<SignalArgs['interactions:move'], 'interaction'> & {\n      interaction: Interaction<ActionName>\n    }\n    'autoStart:prepared': { interaction: Interaction }\n    'auto-start:check': CheckSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface BaseDefaults {\n    actionChecker?: any\n    cursorChecker?: any\n    styleCursor?: any\n  }\n\n  interface PerActionDefaults {\n    manualStart?: boolean\n    max?: number\n    maxPerElement?: number\n    allowFrom?: string | Element\n    ignoreFrom?: string | Element\n    cursorChecker?: CursorChecker\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    // TODO: docst\n    mouseButtons?: 0 | 1 | 2 | 4 | 8 | 16\n  }\n}\n\ninterface CheckSignalArg {\n  interactable: Interactable\n  interaction: Interaction\n  element: Element\n  action: ActionProps<ActionName>\n  buttons: number\n}\n\nexport interface AutoStart {\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: number\n  withinInteractionLimit: typeof withinInteractionLimit\n  cursorElement: Element\n}\n\nfunction install(scope: Scope) {\n  const { interactStatic: interact, defaults } = scope\n\n  scope.usePlugin(InteractableMethods)\n\n  defaults.base.actionChecker = null\n  defaults.base.styleCursor = true\n\n  extend(defaults.perAction, {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n    allowFrom: null,\n    ignoreFrom: null,\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n  })\n\n  interact.maxInteractions = (newValue: number) => maxInteractions(newValue, scope)\n\n  scope.autoStart = {\n    // Allow this many interactions to happen simultaneously\n    maxInteractions: Infinity,\n    withinInteractionLimit,\n    cursorElement: null,\n  }\n}\n\nfunction prepareOnDown(\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  if (interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction prepareOnMove(\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:move'],\n  scope: Scope,\n) {\n  if (interaction.pointerType !== 'mouse' || interaction.pointerIsDown || interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget as Element, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction startOnMove(arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction } = arg\n\n  if (\n    !interaction.pointerIsDown ||\n    interaction.interacting() ||\n    !interaction.pointerWasMoved ||\n    !interaction.prepared.name\n  ) {\n    return\n  }\n\n  scope.fire('autoStart:before-start', arg)\n\n  const { interactable } = interaction\n  const actionName = (interaction as Interaction<ActionName>).prepared.name\n\n  if (actionName && interactable) {\n    // check manualStart and interaction limit\n    if (\n      interactable.options[actionName].manualStart ||\n      !withinInteractionLimit(interactable, interaction.element, interaction.prepared, scope)\n    ) {\n      interaction.stop()\n    } else {\n      interaction.start(interaction.prepared, interactable, interaction.element)\n      setInteractionCursor(interaction, scope)\n    }\n  }\n}\n\nfunction clearCursorOnStop({ interaction }: { interaction: Interaction }, scope: Scope) {\n  const { interactable } = interaction\n\n  if (interactable && interactable.options.styleCursor) {\n    setCursor(interaction.element, '', scope)\n  }\n}\n\n// Check if the current interactable supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction<T extends ActionName>(\n  action: ActionProps<T>,\n  interactable: Interactable,\n  element: Element,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  if (\n    interactable.testIgnoreAllow(interactable.options[action.name], element, eventTarget) &&\n    interactable.options[action.name].enabled &&\n    withinInteractionLimit(interactable, element, action, scope)\n  ) {\n    return action\n  }\n\n  return null\n}\n\nfunction validateMatches(\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  matches: Interactable[],\n  matchElements: Element[],\n  eventTarget: Node,\n  scope: Scope,\n) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i]\n    const matchElement = matchElements[i]\n    const matchAction = match.getAction(pointer, event, interaction, matchElement)\n\n    if (!matchAction) {\n      continue\n    }\n\n    const action = validateAction<ActionName>(matchAction, match, matchElement, eventTarget, scope)\n\n    if (action) {\n      return {\n        action,\n        interactable: match,\n        element: matchElement,\n      }\n    }\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction getActionInfo(\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  let matches: Interactable[] = []\n  let matchElements: Element[] = []\n\n  let element = eventTarget as Element\n\n  function pushMatches(interactable: Interactable) {\n    matches.push(interactable)\n    matchElements.push(element)\n  }\n\n  while (is.element(element)) {\n    matches = []\n    matchElements = []\n\n    scope.interactables.forEachMatch(element, pushMatches)\n\n    const actionInfo = validateMatches(\n      interaction,\n      pointer,\n      event,\n      matches,\n      matchElements,\n      eventTarget,\n      scope,\n    )\n\n    if (actionInfo.action && !actionInfo.interactable.options[actionInfo.action.name].manualStart) {\n      return actionInfo\n    }\n\n    element = domUtils.parentNode(element) as Element\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction prepare(\n  interaction: Interaction,\n  {\n    action,\n    interactable,\n    element,\n  }: {\n    action: ActionProps<any>\n    interactable: Interactable\n    element: Element\n  },\n  scope: Scope,\n) {\n  action = action || { name: null }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  copyAction(interaction.prepared, action)\n\n  interaction.rect = interactable && action.name ? interactable.getRect(element) : null\n\n  setInteractionCursor(interaction, scope)\n\n  scope.fire('autoStart:prepared', { interaction })\n}\n\nfunction withinInteractionLimit<T extends ActionName>(\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  scope: Scope,\n) {\n  const options = interactable.options\n  const maxActions = options[action.name].max\n  const maxPerElement = options[action.name].maxPerElement\n  const autoStartMax = scope.autoStart.maxInteractions\n  let activeInteractions = 0\n  let interactableCount = 0\n  let elementCount = 0\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStartMax)) {\n    return false\n  }\n\n  for (const interaction of scope.interactions.list) {\n    const otherAction = interaction.prepared.name\n\n    if (!interaction.interacting()) {\n      continue\n    }\n\n    activeInteractions++\n\n    if (activeInteractions >= autoStartMax) {\n      return false\n    }\n\n    if (interaction.interactable !== interactable) {\n      continue\n    }\n\n    interactableCount += otherAction === action.name ? 1 : 0\n\n    if (interactableCount >= maxActions) {\n      return false\n    }\n\n    if (interaction.element === element) {\n      elementCount++\n\n      if (otherAction === action.name && elementCount >= maxPerElement) {\n        return false\n      }\n    }\n  }\n\n  return autoStartMax > 0\n}\n\nfunction maxInteractions(newValue: any, scope: Scope) {\n  if (is.number(newValue)) {\n    scope.autoStart.maxInteractions = newValue\n\n    return this\n  }\n\n  return scope.autoStart.maxInteractions\n}\n\nfunction setCursor(element: Element, cursor: string, scope: Scope) {\n  const { cursorElement: prevCursorElement } = scope.autoStart\n\n  if (prevCursorElement && prevCursorElement !== element) {\n    prevCursorElement.style.cursor = ''\n  }\n\n  element.ownerDocument.documentElement.style.cursor = cursor\n  element.style.cursor = cursor\n  scope.autoStart.cursorElement = cursor ? element : null\n}\n\nfunction setInteractionCursor<T extends ActionName>(interaction: Interaction<T>, scope: Scope) {\n  const { interactable, element, prepared } = interaction\n\n  if (!(interaction.pointerType === 'mouse' && interactable && interactable.options.styleCursor)) {\n    // clear previous target element cursor\n    if (scope.autoStart.cursorElement) {\n      setCursor(scope.autoStart.cursorElement, '', scope)\n    }\n\n    return\n  }\n\n  let cursor = ''\n\n  if (prepared.name) {\n    const cursorChecker = interactable.options[prepared.name].cursorChecker\n\n    if (is.func(cursorChecker)) {\n      cursor = cursorChecker(prepared, interactable, element, interaction._interacting)\n    } else {\n      cursor = scope.actions.map[prepared.name].getCursor(prepared)\n    }\n  }\n\n  setCursor(interaction.element, cursor || '', scope)\n}\n\nconst autoStart: Plugin = {\n  id: 'auto-start/base',\n  before: ['actions'],\n  install,\n  listeners: {\n    'interactions:down': prepareOnDown,\n    'interactions:move': (arg, scope) => {\n      prepareOnMove(arg, scope)\n      startOnMove(arg, scope)\n    },\n    'interactions:stop': clearCursorOnStop,\n  },\n  maxInteractions,\n  withinInteractionLimit,\n  validateAction,\n}\n\nexport default autoStart\n"
	],
	"mappings": "AAWA,OAAO,KAAKA,QAAQ,MAAM,sBAA4B;AACtD,OAAOC,MAAM,MAAM,oBAA0B;AAC7C,OAAOC,EAAE,MAAM,gBAAsB;AACrC,SAASC,UAAU,QAAQ,kBAAwB;;AAEnD;AACA,OAAO,uBAAuB;AAC9B,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD;;AAoEA,SAASC,OAAOA,CAACC,KAAY,EAAE;EAC7B,MAAM;IAAEC,cAAc,EAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGH,KAAK;EAEpDA,KAAK,CAACI,SAAS,CAACN,mBAAmB,CAAC;EAEpCK,QAAQ,CAACE,IAAI,CAACC,aAAa,GAAG,IAAI;EAClCH,QAAQ,CAACE,IAAI,CAACE,WAAW,GAAG,IAAI;EAEhCZ,MAAM,CAACQ,QAAQ,CAACK,SAAS,EAAE;IACzBC,WAAW,EAAE,KAAK;IAClBC,GAAG,EAAEC,QAAQ;IACbC,aAAa,EAAE,CAAC;IAChBC,SAAS,EAAE,IAAI;IACfC,UAAU,EAAE,IAAI;IAEhB;IACA;IACAC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEFb,QAAQ,CAACc,eAAe,GAAIC,QAAgB,IAAKD,eAAe,CAACC,QAAQ,EAAEjB,KAAK,CAAC;EAEjFA,KAAK,CAACkB,SAAS,GAAG;IAChB;IACAF,eAAe,EAAEL,QAAQ;IACzBQ,sBAAsB;IACtBC,aAAa,EAAE;EACjB,CAAC;AACH;AAEA,SAASC,aAAaA,CACpB;EAAEC,WAAW;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAA6C,CAAC,EAC7EzB,KAAY,EACZ;EACA,IAAIsB,WAAW,CAACI,WAAW,CAAC,CAAC,EAAE;EAE/B,MAAMC,UAAU,GAAGC,aAAa,CAACN,WAAW,EAAEC,OAAO,EAAEC,KAAK,EAAEC,WAAW,EAAEzB,KAAK,CAAC;EACjF6B,OAAO,CAACP,WAAW,EAAEK,UAAU,EAAE3B,KAAK,CAAC;AACzC;AAEA,SAAS8B,aAAaA,CACpB;EAAER,WAAW;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAA6C,CAAC,EAC7EzB,KAAY,EACZ;EACA,IAAIsB,WAAW,CAACS,WAAW,KAAK,OAAO,IAAIT,WAAW,CAACU,aAAa,IAAIV,WAAW,CAACI,WAAW,CAAC,CAAC,EAAE;EAEnG,MAAMC,UAAU,GAAGC,aAAa,CAACN,WAAW,EAAEC,OAAO,EAAEC,KAAK,EAAEC,WAAW,EAAazB,KAAK,CAAC;EAC5F6B,OAAO,CAACP,WAAW,EAAEK,UAAU,EAAE3B,KAAK,CAAC;AACzC;AAEA,SAASiC,WAAWA,CAACC,GAAoC,EAAElC,KAAY,EAAE;EACvE,MAAM;IAAEsB;EAAY,CAAC,GAAGY,GAAG;EAE3B,IACE,CAACZ,WAAW,CAACU,aAAa,IAC1BV,WAAW,CAACI,WAAW,CAAC,CAAC,IACzB,CAACJ,WAAW,CAACa,eAAe,IAC5B,CAACb,WAAW,CAACc,QAAQ,CAACC,IAAI,EAC1B;IACA;EACF;EAEArC,KAAK,CAACsC,IAAI,CAAC,wBAAwB,EAAEJ,GAAG,CAAC;EAEzC,MAAM;IAAEK;EAAa,CAAC,GAAGjB,WAAW;EACpC,MAAMkB,UAAU,GAAIlB,WAAW,CAA6Bc,QAAQ,CAACC,IAAI;EAEzE,IAAIG,UAAU,IAAID,YAAY,EAAE;IAC9B;IACA,IACEA,YAAY,CAACE,OAAO,CAACD,UAAU,CAAC,CAAC/B,WAAW,IAC5C,CAACU,sBAAsB,CAACoB,YAAY,EAAEjB,WAAW,CAACoB,OAAO,EAAEpB,WAAW,CAACc,QAAQ,EAAEpC,KAAK,CAAC,EACvF;MACAsB,WAAW,CAACqB,IAAI,CAAC,CAAC;IACpB,CAAC,MAAM;MACLrB,WAAW,CAACsB,KAAK,CAACtB,WAAW,CAACc,QAAQ,EAAEG,YAAY,EAAEjB,WAAW,CAACoB,OAAO,CAAC;MAC1EG,oBAAoB,CAACvB,WAAW,EAAEtB,KAAK,CAAC;IAC1C;EACF;AACF;AAEA,SAAS8C,iBAAiBA,CAAC;EAAExB;AAA0C,CAAC,EAAEtB,KAAY,EAAE;EACtF,MAAM;IAAEuC;EAAa,CAAC,GAAGjB,WAAW;EAEpC,IAAIiB,YAAY,IAAIA,YAAY,CAACE,OAAO,CAAClC,WAAW,EAAE;IACpDwC,SAAS,CAACzB,WAAW,CAACoB,OAAO,EAAE,EAAE,EAAE1C,KAAK,CAAC;EAC3C;AACF;;AAEA;AACA;AACA,SAASgD,cAAcA,CACrBC,MAAsB,EACtBV,YAA0B,EAC1BG,OAAgB,EAChBjB,WAAiB,EACjBzB,KAAY,EACZ;EACA,IACEuC,YAAY,CAACW,eAAe,CAACX,YAAY,CAACE,OAAO,CAACQ,MAAM,CAACZ,IAAI,CAAC,EAAEK,OAAO,EAAEjB,WAAW,CAAC,IACrFc,YAAY,CAACE,OAAO,CAACQ,MAAM,CAACZ,IAAI,CAAC,CAACc,OAAO,IACzChC,sBAAsB,CAACoB,YAAY,EAAEG,OAAO,EAAEO,MAAM,EAAEjD,KAAK,CAAC,EAC5D;IACA,OAAOiD,MAAM;EACf;EAEA,OAAO,IAAI;AACb;AAEA,SAASG,eAAeA,CACtB9B,WAAwB,EACxBC,OAAoB,EACpBC,KAAuB,EACvB6B,OAAuB,EACvBC,aAAwB,EACxB7B,WAAiB,EACjBzB,KAAY,EACZ;EACA,KAAK,IAAIuD,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGH,OAAO,CAACI,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;IAClD,MAAMG,KAAK,GAAGL,OAAO,CAACE,CAAC,CAAC;IACxB,MAAMI,YAAY,GAAGL,aAAa,CAACC,CAAC,CAAC;IACrC,MAAMK,WAAW,GAAGF,KAAK,CAACG,SAAS,CAACtC,OAAO,EAAEC,KAAK,EAAEF,WAAW,EAAEqC,YAAY,CAAC;IAE9E,IAAI,CAACC,WAAW,EAAE;MAChB;IACF;IAEA,MAAMX,MAAM,GAAGD,cAAc,CAAaY,WAAW,EAAEF,KAAK,EAAEC,YAAY,EAAElC,WAAW,EAAEzB,KAAK,CAAC;IAE/F,IAAIiD,MAAM,EAAE;MACV,OAAO;QACLA,MAAM;QACNV,YAAY,EAAEmB,KAAK;QACnBhB,OAAO,EAAEiB;MACX,CAAC;IACH;EACF;EAEA,OAAO;IAAEV,MAAM,EAAE,IAAI;IAAEV,YAAY,EAAE,IAAI;IAAEG,OAAO,EAAE;EAAK,CAAC;AAC5D;AAEA,SAASd,aAAaA,CACpBN,WAAwB,EACxBC,OAAoB,EACpBC,KAAuB,EACvBC,WAAiB,EACjBzB,KAAY,EACZ;EACA,IAAIqD,OAAuB,GAAG,EAAE;EAChC,IAAIC,aAAwB,GAAG,EAAE;EAEjC,IAAIZ,OAAO,GAAGjB,WAAsB;EAEpC,SAASqC,WAAWA,CAACvB,YAA0B,EAAE;IAC/Cc,OAAO,CAACU,IAAI,CAACxB,YAAY,CAAC;IAC1Be,aAAa,CAACS,IAAI,CAACrB,OAAO,CAAC;EAC7B;EAEA,OAAO9C,EAAE,CAAC8C,OAAO,CAACA,OAAO,CAAC,EAAE;IAC1BW,OAAO,GAAG,EAAE;IACZC,aAAa,GAAG,EAAE;IAElBtD,KAAK,CAACgE,aAAa,CAACC,YAAY,CAACvB,OAAO,EAAEoB,WAAW,CAAC;IAEtD,MAAMnC,UAAU,GAAGyB,eAAe,CAChC9B,WAAW,EACXC,OAAO,EACPC,KAAK,EACL6B,OAAO,EACPC,aAAa,EACb7B,WAAW,EACXzB,KACF,CAAC;IAED,IAAI2B,UAAU,CAACsB,MAAM,IAAI,CAACtB,UAAU,CAACY,YAAY,CAACE,OAAO,CAACd,UAAU,CAACsB,MAAM,CAACZ,IAAI,CAAC,CAAC5B,WAAW,EAAE;MAC7F,OAAOkB,UAAU;IACnB;IAEAe,OAAO,GAAGhD,QAAQ,CAACwE,UAAU,CAACxB,OAAO,CAAY;EACnD;EAEA,OAAO;IAAEO,MAAM,EAAE,IAAI;IAAEV,YAAY,EAAE,IAAI;IAAEG,OAAO,EAAE;EAAK,CAAC;AAC5D;AAEA,SAASb,OAAOA,CACdP,WAAwB,EACxB;EACE2B,MAAM;EACNV,YAAY;EACZG;AAKF,CAAC,EACD1C,KAAY,EACZ;EACAiD,MAAM,GAAGA,MAAM,IAAI;IAAEZ,IAAI,EAAE;EAAK,CAAC;EAEjCf,WAAW,CAACiB,YAAY,GAAGA,YAAY;EACvCjB,WAAW,CAACoB,OAAO,GAAGA,OAAO;EAC7B7C,UAAU,CAACyB,WAAW,CAACc,QAAQ,EAAEa,MAAM,CAAC;EAExC3B,WAAW,CAAC6C,IAAI,GAAG5B,YAAY,IAAIU,MAAM,CAACZ,IAAI,GAAGE,YAAY,CAAC6B,OAAO,CAAC1B,OAAO,CAAC,GAAG,IAAI;EAErFG,oBAAoB,CAACvB,WAAW,EAAEtB,KAAK,CAAC;EAExCA,KAAK,CAACsC,IAAI,CAAC,oBAAoB,EAAE;IAAEhB;EAAY,CAAC,CAAC;AACnD;AAEA,SAASH,sBAAsBA,CAC7BoB,YAA0B,EAC1BG,OAAgB,EAChBO,MAAsB,EACtBjD,KAAY,EACZ;EACA,MAAMyC,OAAO,GAAGF,YAAY,CAACE,OAAO;EACpC,MAAM4B,UAAU,GAAG5B,OAAO,CAACQ,MAAM,CAACZ,IAAI,CAAC,CAAC3B,GAAG;EAC3C,MAAME,aAAa,GAAG6B,OAAO,CAACQ,MAAM,CAACZ,IAAI,CAAC,CAACzB,aAAa;EACxD,MAAM0D,YAAY,GAAGtE,KAAK,CAACkB,SAAS,CAACF,eAAe;EACpD,IAAIuD,kBAAkB,GAAG,CAAC;EAC1B,IAAIC,iBAAiB,GAAG,CAAC;EACzB,IAAIC,YAAY,GAAG,CAAC;;EAEpB;EACA,IAAI,EAAEJ,UAAU,IAAIzD,aAAa,IAAI0D,YAAY,CAAC,EAAE;IAClD,OAAO,KAAK;EACd;EAEA,KAAK,MAAMhD,WAAW,IAAItB,KAAK,CAAC0E,YAAY,CAACC,IAAI,EAAE;IACjD,MAAMC,WAAW,GAAGtD,WAAW,CAACc,QAAQ,CAACC,IAAI;IAE7C,IAAI,CAACf,WAAW,CAACI,WAAW,CAAC,CAAC,EAAE;MAC9B;IACF;IAEA6C,kBAAkB,EAAE;IAEpB,IAAIA,kBAAkB,IAAID,YAAY,EAAE;MACtC,OAAO,KAAK;IACd;IAEA,IAAIhD,WAAW,CAACiB,YAAY,KAAKA,YAAY,EAAE;MAC7C;IACF;IAEAiC,iBAAiB,IAAII,WAAW,KAAK3B,MAAM,CAACZ,IAAI,GAAG,CAAC,GAAG,CAAC;IAExD,IAAImC,iBAAiB,IAAIH,UAAU,EAAE;MACnC,OAAO,KAAK;IACd;IAEA,IAAI/C,WAAW,CAACoB,OAAO,KAAKA,OAAO,EAAE;MACnC+B,YAAY,EAAE;MAEd,IAAIG,WAAW,KAAK3B,MAAM,CAACZ,IAAI,IAAIoC,YAAY,IAAI7D,aAAa,EAAE;QAChE,OAAO,KAAK;MACd;IACF;EACF;EAEA,OAAO0D,YAAY,GAAG,CAAC;AACzB;AAEA,SAAStD,eAAeA,CAACC,QAAa,EAAEjB,KAAY,EAAE;EACpD,IAAIJ,EAAE,CAACiF,MAAM,CAAC5D,QAAQ,CAAC,EAAE;IACvBjB,KAAK,CAACkB,SAAS,CAACF,eAAe,GAAGC,QAAQ;IAE1C,OAAO,IAAI;EACb;EAEA,OAAOjB,KAAK,CAACkB,SAAS,CAACF,eAAe;AACxC;AAEA,SAAS+B,SAASA,CAACL,OAAgB,EAAEoC,MAAc,EAAE9E,KAAY,EAAE;EACjE,MAAM;IAAEoB,aAAa,EAAE2D;EAAkB,CAAC,GAAG/E,KAAK,CAACkB,SAAS;EAE5D,IAAI6D,iBAAiB,IAAIA,iBAAiB,KAAKrC,OAAO,EAAE;IACtDqC,iBAAiB,CAACC,KAAK,CAACF,MAAM,GAAG,EAAE;EACrC;EAEApC,OAAO,CAACuC,aAAa,CAACC,eAAe,CAACF,KAAK,CAACF,MAAM,GAAGA,MAAM;EAC3DpC,OAAO,CAACsC,KAAK,CAACF,MAAM,GAAGA,MAAM;EAC7B9E,KAAK,CAACkB,SAAS,CAACE,aAAa,GAAG0D,MAAM,GAAGpC,OAAO,GAAG,IAAI;AACzD;AAEA,SAASG,oBAAoBA,CAAuBvB,WAA2B,EAAEtB,KAAY,EAAE;EAC7F,MAAM;IAAEuC,YAAY;IAAEG,OAAO;IAAEN;EAAS,CAAC,GAAGd,WAAW;EAEvD,IAAI,EAAEA,WAAW,CAACS,WAAW,KAAK,OAAO,IAAIQ,YAAY,IAAIA,YAAY,CAACE,OAAO,CAAClC,WAAW,CAAC,EAAE;IAC9F;IACA,IAAIP,KAAK,CAACkB,SAAS,CAACE,aAAa,EAAE;MACjC2B,SAAS,CAAC/C,KAAK,CAACkB,SAAS,CAACE,aAAa,EAAE,EAAE,EAAEpB,KAAK,CAAC;IACrD;IAEA;EACF;EAEA,IAAI8E,MAAM,GAAG,EAAE;EAEf,IAAI1C,QAAQ,CAACC,IAAI,EAAE;IACjB,MAAM8C,aAAa,GAAG5C,YAAY,CAACE,OAAO,CAACL,QAAQ,CAACC,IAAI,CAAC,CAAC8C,aAAa;IAEvE,IAAIvF,EAAE,CAACwF,IAAI,CAACD,aAAa,CAAC,EAAE;MAC1BL,MAAM,GAAGK,aAAa,CAAC/C,QAAQ,EAAEG,YAAY,EAAEG,OAAO,EAAEpB,WAAW,CAAC+D,YAAY,CAAC;IACnF,CAAC,MAAM;MACLP,MAAM,GAAG9E,KAAK,CAACsF,OAAO,CAACC,GAAG,CAACnD,QAAQ,CAACC,IAAI,CAAC,CAACmD,SAAS,CAACpD,QAAQ,CAAC;IAC/D;EACF;EAEAW,SAAS,CAACzB,WAAW,CAACoB,OAAO,EAAEoC,MAAM,IAAI,EAAE,EAAE9E,KAAK,CAAC;AACrD;AAEA,MAAMkB,SAAiB,GAAG;EACxBuE,EAAE,EAAE,iBAAiB;EACrBC,MAAM,EAAE,CAAC,SAAS,CAAC;EACnB3F,OAAO;EACP4F,SAAS,EAAE;IACT,mBAAmB,EAAEtE,aAAa;IAClC,mBAAmB,EAAEuE,CAAC1D,GAAG,EAAElC,KAAK,KAAK;MACnC8B,aAAa,CAACI,GAAG,EAAElC,KAAK,CAAC;MACzBiC,WAAW,CAACC,GAAG,EAAElC,KAAK,CAAC;IACzB,CAAC;IACD,mBAAmB,EAAE8C;EACvB,CAAC;EACD9B,eAAe;EACfG,sBAAsB;EACtB6B;AACF,CAAC;AAED,eAAe9B,SAAS"
}