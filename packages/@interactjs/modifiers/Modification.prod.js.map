{
	"version": 3,
	"names": [
		"clone",
		"extend",
		"rectUtils",
		"Modification",
		"states",
		"startOffset",
		"left",
		"right",
		"top",
		"bottom",
		"startDelta",
		"result",
		"endResult",
		"startEdges",
		"edges",
		"interaction",
		"constructor",
		"this",
		"createResult",
		"start",
		"phase",
		"pageCoords",
		"modifierList",
		"actionOptions",
		"interactable",
		"options",
		"prepared",
		"name",
		"actionModifiers",
		"modifiers",
		"length",
		"map",
		"type",
		"enabled",
		"methods",
		"_methods",
		"filter",
		"m",
		"getModifierList",
		"prepareStates",
		"getRectOffset",
		"rect",
		"x",
		"y",
		"arg",
		"fillArg",
		"preEnd",
		"startAll",
		"setAll",
		"element",
		"state",
		"skipModifiers",
		"unmodifiedRect",
		"unmodifiedEdges",
		"coords",
		"slice",
		"newResult",
		"_state$methods",
		"lastModifierCoords",
		"returnValue",
		"set",
		"shouldDo",
		"addEdges",
		"eventProps",
		"push",
		"delta",
		"rectDelta",
		"prevCoords",
		"prevRect",
		"rectChanged",
		"changed",
		"applyToInteraction",
		"curCoords",
		"cur",
		"startCoords",
		"curDelta",
		"coordsSet",
		"page",
		"client",
		"width",
		"height",
		"setAndApply",
		"modifiedCoords",
		"interacting",
		"adjustment",
		"beforeEnd",
		"event",
		"doPreend",
		"endPosition",
		"move",
		"stop",
		"modifierArg",
		"index",
		"restoreInteractionCoords",
		"modification",
		"coordsAndDeltas",
		"requireEndOnly",
		"endOnly",
		"setStart",
		"copyFrom",
		"other",
		"s",
		"destroy",
		"prop"
	],
	"sources": [
		"Modification.ts"
	],
	"sourcesContent": [
		"import type { EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoAnyPhaseArg } from '@interactjs/core/Interaction'\nimport type { EdgeOptions, FullRect, Point, Rect } from '@interactjs/core/types'\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { Modifier, ModifierArg, ModifierState } from './types'\n\nexport interface ModificationResult {\n  delta: Point\n  rectDelta: Rect\n  coords: Point\n  rect: FullRect\n  eventProps: any[]\n  changed: boolean\n}\n\ninterface MethodArg {\n  phase: EventPhase\n  pageCoords: Point\n  rect: FullRect\n  coords: Point\n  preEnd?: boolean\n  skipModifiers?: number\n}\n\nexport class Modification {\n  states: ModifierState[] = []\n  startOffset: Rect = { left: 0, right: 0, top: 0, bottom: 0 }\n  startDelta!: Point\n  result!: ModificationResult\n  endResult!: Point\n  startEdges!: EdgeOptions\n  edges: EdgeOptions\n  readonly interaction: Readonly<Interaction>\n\n  constructor(interaction: Interaction) {\n    this.interaction = interaction\n    this.result = createResult()\n    this.edges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n  }\n\n  start({ phase }: { phase: EventPhase }, pageCoords: Point) {\n    const { interaction } = this\n    const modifierList = getModifierList(interaction)\n    this.prepareStates(modifierList)\n\n    this.startEdges = extend({}, interaction.edges)\n    this.edges = extend({}, this.startEdges)\n    this.startOffset = getRectOffset(interaction.rect, pageCoords)\n    this.startDelta = { x: 0, y: 0 }\n\n    const arg = this.fillArg({\n      phase,\n      pageCoords,\n      preEnd: false,\n    })\n\n    this.result = createResult()\n    this.startAll(arg)\n\n    const result = (this.result = this.setAll(arg))\n\n    return result\n  }\n\n  fillArg(arg: Partial<ModifierArg>) {\n    const { interaction } = this\n\n    arg.interaction = interaction\n    arg.interactable = interaction.interactable\n    arg.element = interaction.element\n    arg.rect ||= interaction.rect\n    arg.edges ||= this.startEdges\n    arg.startOffset = this.startOffset\n\n    return arg as ModifierArg\n  }\n\n  startAll(arg: MethodArg & Partial<ModifierArg>) {\n    for (const state of this.states) {\n      if (state.methods.start) {\n        arg.state = state\n        state.methods.start(arg as ModifierArg)\n      }\n    }\n  }\n\n  setAll(arg: MethodArg & Partial<ModifierArg>): ModificationResult {\n    const { phase, preEnd, skipModifiers, rect: unmodifiedRect, edges: unmodifiedEdges } = arg\n\n    arg.coords = extend({}, arg.pageCoords)\n    arg.rect = extend({}, unmodifiedRect)\n    arg.edges = extend({}, unmodifiedEdges)\n\n    const states = skipModifiers ? this.states.slice(skipModifiers) : this.states\n\n    const newResult = createResult(arg.coords, arg.rect)\n\n    for (const state of states) {\n      const { options } = state\n      const lastModifierCoords = extend({}, arg.coords)\n      let returnValue = null\n\n      if (state.methods?.set && this.shouldDo(options, preEnd, phase)) {\n        arg.state = state\n        returnValue = state.methods.set(arg as ModifierArg<never>)\n\n        rectUtils.addEdges(arg.edges, arg.rect, {\n          x: arg.coords.x - lastModifierCoords.x,\n          y: arg.coords.y - lastModifierCoords.y,\n        })\n      }\n\n      newResult.eventProps.push(returnValue)\n    }\n\n    extend(this.edges, arg.edges)\n\n    newResult.delta.x = arg.coords.x - arg.pageCoords.x\n    newResult.delta.y = arg.coords.y - arg.pageCoords.y\n\n    newResult.rectDelta.left = arg.rect.left - unmodifiedRect.left\n    newResult.rectDelta.right = arg.rect.right - unmodifiedRect.right\n    newResult.rectDelta.top = arg.rect.top - unmodifiedRect.top\n    newResult.rectDelta.bottom = arg.rect.bottom - unmodifiedRect.bottom\n\n    const prevCoords = this.result.coords\n    const prevRect = this.result.rect\n\n    if (prevCoords && prevRect) {\n      const rectChanged =\n        newResult.rect.left !== prevRect.left ||\n        newResult.rect.right !== prevRect.right ||\n        newResult.rect.top !== prevRect.top ||\n        newResult.rect.bottom !== prevRect.bottom\n\n      newResult.changed =\n        rectChanged || prevCoords.x !== newResult.coords.x || prevCoords.y !== newResult.coords.y\n    }\n\n    return newResult\n  }\n\n  applyToInteraction(arg: { phase: EventPhase; rect?: Rect }) {\n    const { interaction } = this\n    const { phase } = arg\n    const curCoords = interaction.coords.cur\n    const startCoords = interaction.coords.start\n    const { result, startDelta } = this\n    const curDelta = result.delta\n\n    if (phase === 'start') {\n      extend(this.startDelta, result.delta)\n    }\n\n    for (const [coordsSet, delta] of [\n      [startCoords, startDelta],\n      [curCoords, curDelta],\n    ] as const) {\n      coordsSet.page.x += delta.x\n      coordsSet.page.y += delta.y\n      coordsSet.client.x += delta.x\n      coordsSet.client.y += delta.y\n    }\n\n    const { rectDelta } = this.result\n    const rect = arg.rect || interaction.rect\n\n    rect.left += rectDelta.left\n    rect.right += rectDelta.right\n    rect.top += rectDelta.top\n    rect.bottom += rectDelta.bottom\n\n    rect.width = rect.right - rect.left\n    rect.height = rect.bottom - rect.top\n  }\n\n  setAndApply(\n    arg: Partial<DoAnyPhaseArg> & {\n      phase: EventPhase\n      preEnd?: boolean\n      skipModifiers?: number\n      modifiedCoords?: Point\n    },\n  ): void | false {\n    const { interaction } = this\n    const { phase, preEnd, skipModifiers } = arg\n\n    const result = this.setAll(\n      this.fillArg({\n        preEnd,\n        phase,\n        pageCoords: arg.modifiedCoords || interaction.coords.cur.page,\n      }),\n    )\n\n    this.result = result\n\n    // don't fire an action move if a modifier would keep the event in the same\n    // cordinates as before\n    if (\n      !result.changed &&\n      (!skipModifiers || skipModifiers < this.states.length) &&\n      interaction.interacting()\n    ) {\n      return false\n    }\n\n    if (arg.modifiedCoords) {\n      const { page } = interaction.coords.cur\n      const adjustment = {\n        x: arg.modifiedCoords.x - page.x,\n        y: arg.modifiedCoords.y - page.y,\n      }\n\n      result.coords.x += adjustment.x\n      result.coords.y += adjustment.y\n      result.delta.x += adjustment.x\n      result.delta.y += adjustment.y\n    }\n\n    this.applyToInteraction(arg)\n  }\n\n  beforeEnd(arg: Omit<DoAnyPhaseArg, 'iEvent'> & { state?: ModifierState }): void | false {\n    const { interaction, event } = arg\n    const states = this.states\n\n    if (!states || !states.length) {\n      return\n    }\n\n    let doPreend = false\n\n    for (const state of states) {\n      arg.state = state\n      const { options, methods } = state\n\n      const endPosition = methods.beforeEnd && methods.beforeEnd(arg as unknown as ModifierArg)\n\n      if (endPosition) {\n        this.endResult = endPosition\n        return false\n      }\n\n      doPreend = doPreend || (!doPreend && this.shouldDo(options, true, arg.phase, true))\n    }\n\n    if (doPreend) {\n      // trigger a final modified move before ending\n      interaction.move({ event, preEnd: true })\n    }\n  }\n\n  stop(arg: { interaction: Interaction }) {\n    const { interaction } = arg\n\n    if (!this.states || !this.states.length) {\n      return\n    }\n\n    const modifierArg: Partial<ModifierArg> = extend(\n      {\n        states: this.states,\n        interactable: interaction.interactable,\n        element: interaction.element,\n        rect: null,\n      },\n      arg,\n    )\n\n    this.fillArg(modifierArg)\n\n    for (const state of this.states) {\n      modifierArg.state = state\n\n      if (state.methods.stop) {\n        state.methods.stop(modifierArg as ModifierArg)\n      }\n    }\n\n    this.states = null\n    this.endResult = null\n  }\n\n  prepareStates(modifierList: Modifier[]) {\n    this.states = []\n\n    for (let index = 0; index < modifierList.length; index++) {\n      const { options, methods, name } = modifierList[index]\n\n      this.states.push({\n        options,\n        methods,\n        index,\n        name,\n      })\n    }\n\n    return this.states\n  }\n\n  restoreInteractionCoords({ interaction: { coords, rect, modification } }: { interaction: Interaction }) {\n    if (!modification.result) return\n\n    const { startDelta } = modification\n    const { delta: curDelta, rectDelta } = modification.result\n\n    const coordsAndDeltas = [\n      [coords.start, startDelta],\n      [coords.cur, curDelta],\n    ]\n\n    for (const [coordsSet, delta] of coordsAndDeltas as any) {\n      coordsSet.page.x -= delta.x\n      coordsSet.page.y -= delta.y\n      coordsSet.client.x -= delta.x\n      coordsSet.client.y -= delta.y\n    }\n\n    rect.left -= rectDelta.left\n    rect.right -= rectDelta.right\n    rect.top -= rectDelta.top\n    rect.bottom -= rectDelta.bottom\n  }\n\n  shouldDo(options, preEnd?: boolean, phase?: string, requireEndOnly?: boolean) {\n    if (\n      // ignore disabled modifiers\n      !options ||\n      options.enabled === false ||\n      // check if we require endOnly option to fire move before end\n      (requireEndOnly && !options.endOnly) ||\n      // don't apply endOnly modifiers when not ending\n      (options.endOnly && !preEnd) ||\n      // check if modifier should run be applied on start\n      (phase === 'start' && !options.setStart)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  copyFrom(other: Modification) {\n    this.startOffset = other.startOffset\n    this.startDelta = other.startDelta\n    this.startEdges = other.startEdges\n    this.edges = other.edges\n    this.states = other.states.map((s) => clone(s) as ModifierState)\n    this.result = createResult(extend({}, other.result.coords), extend({}, other.result.rect))\n  }\n\n  destroy() {\n    for (const prop in this) {\n      this[prop] = null\n    }\n  }\n}\n\nfunction createResult(coords?: Point, rect?: FullRect): ModificationResult {\n  return {\n    rect,\n    coords,\n    delta: { x: 0, y: 0 },\n    rectDelta: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n    },\n    eventProps: [],\n    changed: true,\n  }\n}\n\nfunction getModifierList(interaction) {\n  const actionOptions = interaction.interactable.options[interaction.prepared.name]\n  const actionModifiers = actionOptions.modifiers\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map((type) => {\n      const options = actionOptions[type]\n\n      return (\n        options &&\n        options.enabled && {\n          options,\n          methods: options._methods,\n        }\n      )\n    })\n    .filter((m) => !!m)\n}\n\nexport function getRectOffset(rect, coords) {\n  return rect\n    ? {\n        left: coords.x - rect.left,\n        top: coords.y - rect.top,\n        right: rect.right - coords.x,\n        bottom: rect.bottom - coords.y,\n      }\n    : {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n      }\n}\n"
	],
	"mappings": "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"
}