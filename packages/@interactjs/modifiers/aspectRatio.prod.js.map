{
	"version": 3,
	"names": [
		"obj",
		"_extendProd",
		"require",
		"__esModule",
		"default",
		"_rectProd",
		"_base",
		"_Modification",
		"aspectRatio",
		"exports",
		"start",
		"arg",
		"state",
		"rect",
		"edges",
		"pageCoords",
		"coords",
		"ratio",
		"enabled",
		"options",
		"equalDelta",
		"modifiers",
		"width",
		"height",
		"startCoords",
		"extend",
		"startRect",
		"linkedEdges",
		"top",
		"left",
		"bottom",
		"right",
		"xIsPrimaryAxis",
		"sign",
		"edgeSign",
		"x",
		"y",
		"length",
		"subModification",
		"Modification",
		"interaction",
		"copyFrom",
		"modification",
		"prepareStates",
		"startAll",
		"set",
		"initialCoords",
		"aspectMethod",
		"setEqualDelta",
		"setRatio",
		"correctedRect",
		"addEdges",
		"result",
		"setAll",
		"prevCoords",
		"prevRect",
		"delta",
		"changed",
		"Math",
		"abs",
		"eventProps",
		"defaults",
		"newHeight",
		"newWidth",
		"makeModifier"
	],
	"sources": [
		"aspectRatio.ts"
	],
	"sourcesContent": [
		"/**\n * @module modifiers/aspectRatio\n *\n * @description\n * This modifier forces elements to be resized with a specified dx/dy ratio.\n *\n * ```js\n * interact(target).resizable({\n *   modifiers: [\n *     interact.modifiers.snapSize({\n *       targets: [ interact.snappers.grid({ x: 20, y: 20 }) ],\n *     }),\n *     interact.aspectRatio({ ratio: 'preserve' }),\n *   ],\n * });\n * ```\n */\n\nimport type { Point, Rect, EdgeOptions } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport { addEdges } from '@interactjs/utils/rect'\n\nimport { makeModifier } from './base'\nimport { Modification } from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\nexport interface AspectRatioOptions {\n  ratio?: number | 'preserve'\n  equalDelta?: boolean\n  modifiers?: Modifier[]\n  enabled?: boolean\n}\n\nexport type AspectRatioState = ModifierState<\n  AspectRatioOptions,\n  {\n    startCoords: Point\n    startRect: Rect\n    linkedEdges: EdgeOptions\n    ratio: number\n    equalDelta: boolean\n    xIsPrimaryAxis: boolean\n    edgeSign: {\n      x: number\n      y: number\n    }\n    subModification: Modification\n  }\n>\n\nconst aspectRatio: ModifierModule<AspectRatioOptions, AspectRatioState> = {\n  start(arg) {\n    const { state, rect, edges, pageCoords: coords } = arg\n    let { ratio, enabled } = state.options\n    const { equalDelta, modifiers } = state.options\n\n    if (ratio === 'preserve') {\n      ratio = rect.width / rect.height\n    }\n\n    state.startCoords = extend({}, coords)\n    state.startRect = extend({}, rect)\n    state.ratio = ratio\n    state.equalDelta = equalDelta\n\n    const linkedEdges = (state.linkedEdges = {\n      top: edges.top || (edges.left && !edges.bottom),\n      left: edges.left || (edges.top && !edges.right),\n      bottom: edges.bottom || (edges.right && !edges.top),\n      right: edges.right || (edges.bottom && !edges.left),\n    })\n\n    state.xIsPrimaryAxis = !!(edges.left || edges.right)\n\n    if (state.equalDelta) {\n      const sign = (linkedEdges.left ? 1 : -1) * (linkedEdges.top ? 1 : -1)\n      state.edgeSign = {\n        x: sign,\n        y: sign,\n      }\n    } else {\n      state.edgeSign = {\n        x: linkedEdges.left ? -1 : 1,\n        y: linkedEdges.top ? -1 : 1,\n      }\n    }\n\n    if (enabled !== false) {\n      extend(edges, linkedEdges)\n    }\n\n    if (!modifiers?.length) return\n\n    const subModification = new Modification(arg.interaction)\n\n    subModification.copyFrom(arg.interaction.modification)\n    subModification.prepareStates(modifiers)\n\n    state.subModification = subModification\n    subModification.startAll({ ...arg })\n  },\n\n  set(arg) {\n    const { state, rect, coords } = arg\n    const { linkedEdges } = state\n    const initialCoords = extend({}, coords)\n    const aspectMethod = state.equalDelta ? setEqualDelta : setRatio\n\n    extend(arg.edges, linkedEdges)\n    aspectMethod(state, state.xIsPrimaryAxis, coords, rect)\n\n    if (!state.subModification) {\n      return null\n    }\n\n    const correctedRect = extend({}, rect)\n\n    addEdges(linkedEdges, correctedRect, {\n      x: coords.x - initialCoords.x,\n      y: coords.y - initialCoords.y,\n    })\n\n    const result = state.subModification.setAll({\n      ...arg,\n      rect: correctedRect,\n      edges: linkedEdges,\n      pageCoords: coords,\n      prevCoords: coords,\n      prevRect: correctedRect,\n    })\n\n    const { delta } = result\n\n    if (result.changed) {\n      const xIsCriticalAxis = Math.abs(delta.x) > Math.abs(delta.y)\n\n      // do aspect modification again with critical edge axis as primary\n      aspectMethod(state, xIsCriticalAxis, result.coords, result.rect)\n      extend(coords, result.coords)\n    }\n\n    return result.eventProps\n  },\n\n  defaults: {\n    ratio: 'preserve',\n    equalDelta: false,\n    modifiers: [],\n    enabled: false,\n  },\n}\n\nfunction setEqualDelta({ startCoords, edgeSign }: AspectRatioState, xIsPrimaryAxis: boolean, coords: Point) {\n  if (xIsPrimaryAxis) {\n    coords.y = startCoords.y + (coords.x - startCoords.x) * edgeSign.y\n  } else {\n    coords.x = startCoords.x + (coords.y - startCoords.y) * edgeSign.x\n  }\n}\n\nfunction setRatio(\n  { startRect, startCoords, ratio, edgeSign }: AspectRatioState,\n  xIsPrimaryAxis: boolean,\n  coords: Point,\n  rect: Rect,\n) {\n  if (xIsPrimaryAxis) {\n    const newHeight = rect.width / ratio\n\n    coords.y = startCoords.y + (newHeight - startRect.height) * edgeSign.y\n  } else {\n    const newWidth = rect.height * ratio\n\n    coords.x = startCoords.x + (newWidth - startRect.width) * edgeSign.x\n  }\n}\n\nexport default makeModifier(aspectRatio, 'aspectRatio')\nexport { aspectRatio }\n"
	],
	"mappings": "kGAmBA,IAI6CA,EAJ7CC,GAI6CD,EAJ7CE,QAAA,6BAI6CF,EAAAG,WAAAH,EAAA,CAAAI,QAAAJ,GAH7CK,EAAAH,QAAA,yBAEAI,EAAAJ,QAAA,UACAK,EAAAL,QAAA,kBA2BA,MAAMM,EAAiEC,QAAAD,YAAG,CACxEE,MAAMC,GACJ,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,MAAEA,EAAOC,WAAYC,GAAWL,EACnD,IAAIM,MAAEA,EAAKC,QAAEA,GAAYN,EAAMO,QAC/B,MAAMC,WAAEA,EAAUC,UAAEA,GAAcT,EAAMO,QAE1B,aAAVF,IACFA,EAAQJ,EAAKS,MAAQT,EAAKU,QAG5BX,EAAMY,aAAc,EAAAC,WAAO,CAAC,EAAGT,GAC/BJ,EAAMc,WAAY,EAAAD,WAAO,CAAC,EAAGZ,GAC7BD,EAAMK,MAAQA,EACdL,EAAMQ,WAAaA,EAEnB,MAAMO,EAAef,EAAMe,YAAc,CACvCC,IAAKd,EAAMc,KAAQd,EAAMe,OAASf,EAAMgB,OACxCD,KAAMf,EAAMe,MAASf,EAAMc,MAAQd,EAAMiB,MACzCD,OAAQhB,EAAMgB,QAAWhB,EAAMiB,QAAUjB,EAAMc,IAC/CG,MAAOjB,EAAMiB,OAAUjB,EAAMgB,SAAWhB,EAAMe,MAKhD,GAFAjB,EAAMoB,kBAAoBlB,EAAMe,OAAQf,EAAMiB,OAE1CnB,EAAMQ,WAAY,CACpB,MAAMa,GAAQN,EAAYE,KAAO,GAAK,IAAMF,EAAYC,IAAM,GAAK,GACnEhB,EAAMsB,SAAW,CACfC,EAAGF,EACHG,EAAGH,EAEP,MACErB,EAAMsB,SAAW,CACfC,EAAGR,EAAYE,MAAQ,EAAI,EAC3BO,EAAGT,EAAYC,KAAO,EAAI,GAQ9B,IAJgB,IAAZV,IACF,EAAAO,WAAOX,EAAOa,GAGF,MAATN,MAAWgB,OAAQ,OAExB,MAAMC,EAAkB,IAAIC,eAAa5B,EAAI6B,aAE7CF,EAAgBG,SAAS9B,EAAI6B,YAAYE,cACzCJ,EAAgBK,cAActB,GAE9BT,EAAM0B,gBAAkBA,EACxBA,EAAgBM,SAAS,IAAKjC,GAChC,EAEAkC,IAAIlC,GACF,MAAMC,MAAEA,EAAKC,KAAEA,EAAIG,OAAEA,GAAWL,GAC1BgB,YAAEA,GAAgBf,EAClBkC,GAAgB,EAAArB,WAAO,CAAC,EAAGT,GAC3B+B,EAAenC,EAAMQ,WAAa4B,EAAgBC,EAKxD,IAHA,EAAAxB,WAAOd,EAAIG,MAAOa,GAClBoB,EAAanC,EAAOA,EAAMoB,eAAgBhB,EAAQH,IAE7CD,EAAM0B,gBACT,OAAO,KAGT,MAAMY,GAAgB,EAAAzB,WAAO,CAAC,EAAGZ,IAEjC,EAAAsC,YAASxB,EAAauB,EAAe,CACnCf,EAAGnB,EAAOmB,EAAIW,EAAcX,EAC5BC,EAAGpB,EAAOoB,EAAIU,EAAcV,IAG9B,MAAMgB,EAASxC,EAAM0B,gBAAgBe,OAAO,IACvC1C,EACHE,KAAMqC,EACNpC,MAAOa,EACPZ,WAAYC,EACZsC,WAAYtC,EACZuC,SAAUL,KAGNM,MAAEA,GAAUJ,EAUlB,OARIA,EAAOK,UAITV,EAAanC,EAHW8C,KAAKC,IAAIH,EAAMrB,GAAKuB,KAAKC,IAAIH,EAAMpB,GAGtBgB,EAAOpC,OAAQoC,EAAOvC,OAC3D,EAAAY,WAAOT,EAAQoC,EAAOpC,SAGjBoC,EAAOQ,UAChB,EAEAC,SAAU,CACR5C,MAAO,WACPG,YAAY,EACZC,UAAW,GACXH,SAAS,IAIb,SAAS8B,GAAcxB,YAAEA,EAAWU,SAAEA,GAA8BF,EAAyBhB,GACvFgB,EACFhB,EAAOoB,EAAIZ,EAAYY,GAAKpB,EAAOmB,EAAIX,EAAYW,GAAKD,EAASE,EAEjEpB,EAAOmB,EAAIX,EAAYW,GAAKnB,EAAOoB,EAAIZ,EAAYY,GAAKF,EAASC,CAErE,CAEA,SAASc,GACPvB,UAAEA,EAASF,YAAEA,EAAWP,MAAEA,EAAKiB,SAAEA,GACjCF,EACAhB,EACAH,GAEA,GAAImB,EAAgB,CAClB,MAAM8B,EAAYjD,EAAKS,MAAQL,EAE/BD,EAAOoB,EAAIZ,EAAYY,GAAK0B,EAAYpC,EAAUH,QAAUW,EAASE,CACvE,KAAO,CACL,MAAM2B,EAAWlD,EAAKU,OAASN,EAE/BD,EAAOmB,EAAIX,EAAYW,GAAK4B,EAAWrC,EAAUJ,OAASY,EAASC,CACrE,CACF,CAAC1B,QAAAL,SAEc,EAAA4D,gBAAaxD,EAAa"
}