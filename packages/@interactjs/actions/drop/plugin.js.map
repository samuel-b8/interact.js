{
	"version": 3,
	"names": [
		"domUtils",
		"_interopRequireWildcard",
		"require",
		"_extend",
		"_interopRequireDefault",
		"_getOriginXY",
		"_is",
		"_normalizeListeners",
		"pointerUtils",
		"_plugin",
		"_DropEvent",
		"obj",
		"__esModule",
		"default",
		"_getRequireWildcardCache",
		"e",
		"WeakMap",
		"r",
		"t",
		"has",
		"get",
		"n",
		"__proto__",
		"a",
		"Object",
		"defineProperty",
		"getOwnPropertyDescriptor",
		"u",
		"prototype",
		"hasOwnProperty",
		"call",
		"i",
		"set",
		"install",
		"scope",
		"actions",
		"interactStatic",
		"interact",
		"Interactable",
		"defaults",
		"usePlugin",
		"drag",
		"dropzone",
		"options",
		"dropzoneMethod",
		"dropCheck",
		"dragEvent",
		"event",
		"draggable",
		"draggableElement",
		"dropElement",
		"rect",
		"dropCheckMethod",
		"dynamicDrop",
		"newValue",
		"is",
		"bool",
		"extend",
		"phaselessTypes",
		"dragenter",
		"dragleave",
		"dropactivate",
		"dropdeactivate",
		"dropmove",
		"drop",
		"methodDict",
		"collectDropzones",
		"interactables",
		"drops",
		"list",
		"enabled",
		"accept",
		"element",
		"string",
		"matchesSelector",
		"func",
		"dropzoneElement",
		"getAllElements",
		"push",
		"getRect",
		"fireActivationEvents",
		"activeDrops",
		"slice",
		"target",
		"fire",
		"propagationStopped",
		"immediatePropagationStopped",
		"getActiveDrops",
		"dragElement",
		"activeDrop",
		"getDrop",
		"dropState",
		"interactable",
		"pointerEvent",
		"validDrops",
		"isValid",
		"dropIndex",
		"indexOfDeepestElement",
		"getDropEvents",
		"interaction",
		"_pointerEvent",
		"dropEvents",
		"enter",
		"leave",
		"activate",
		"deactivate",
		"move",
		"type",
		"DropEvent",
		"rejected",
		"cur",
		"prev",
		"dragLeave",
		"prevDropzone",
		"dragEnter",
		"relatedTarget",
		"fireDropEvents",
		"events",
		"onEventCreated",
		"iEvent",
		"dropResult",
		"object",
		"listeners",
		"normalized",
		"normalizeListeners",
		"corrected",
		"keys",
		"reduce",
		"acc",
		"correctedType",
		"test",
		"prevListeners",
		"off",
		"on",
		"ondrop",
		"ondropactivate",
		"ondropdeactivate",
		"ondragenter",
		"ondragleave",
		"ondropmove",
		"overlap",
		"number",
		"Math",
		"max",
		"min",
		"checker",
		"dropped",
		"dropOverlap",
		"origin",
		"getOriginXY",
		"page",
		"getPageXY",
		"x",
		"y",
		"horizontal",
		"left",
		"right",
		"vertical",
		"top",
		"bottom",
		"dragRect",
		"cx",
		"width",
		"cy",
		"height",
		"overlapArea",
		"overlapRatio",
		"id",
		"interactions:before-action-start",
		"prepared",
		"name",
		"interactions:after-action-start",
		"interactions:after-action-move",
		"interactions:action-end",
		"arg",
		"interactions:stop",
		"filterEventType",
		"search",
		"_default",
		"exports"
	],
	"sources": [
		"plugin.ts"
	],
	"sourcesContent": [
		"import type { Interactable } from '@interactjs/core/Interactable'\nimport type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element, PointerEventType, Rect, ListenersArg } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '../drag/plugin'\n\nimport type { DragEvent } from '../drag/plugin'\nimport drag from '../drag/plugin'\n/* eslint-enable import/no-duplicates */\n\nimport { DropEvent } from './DropEvent'\n\nexport type DropFunctionChecker = (\n  dragEvent: any, // related drag operation\n  event: any, // touch or mouse EventEmitter\n  dropped: boolean, // default checker result\n  dropzone: Interactable, // dropzone interactable\n  dropElement: Element, // drop zone element\n  draggable: Interactable, // draggable's Interactable\n  draggableElement: Element, // dragged element\n) => boolean\n\nexport interface DropzoneOptions extends PerActionDefaults {\n  accept?:\n    | string\n    | Element\n    | (({ dropzone, draggableElement }: { dropzone: Interactable; draggableElement: Element }) => boolean)\n  // How the overlap is checked on the drop zone\n  overlap?: 'pointer' | 'center' | number\n  checker?: DropFunctionChecker\n\n  ondropactivate?: ListenersArg\n  ondropdeactivate?: ListenersArg\n  ondragenter?: ListenersArg\n  ondragleave?: ListenersArg\n  ondropmove?: ListenersArg\n  ondrop?: ListenersArg\n}\n\nexport interface DropzoneMethod {\n  (this: Interactable, options: DropzoneOptions | boolean): Interactable\n  (): DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    /**\n     *\n     * ```js\n     * interact('.drop').dropzone({\n     *   accept: '.can-drop' || document.getElementById('single-drop'),\n     *   overlap: 'pointer' || 'center' || zeroToOne\n     * }\n     * ```\n     *\n     * Returns or sets whether draggables can be dropped onto this target to\n     * trigger drop events\n     *\n     * Dropzones can receive the following events:\n     *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n     *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n     *  - `dragmove` when a draggable that has entered the dropzone is moved\n     *  - `drop` when a draggable is dropped into this dropzone\n     *\n     * Use the `accept` option to allow only elements that match the given CSS\n     * selector or element. The value can be:\n     *\n     *  - **an Element** - only that element can be dropped into this dropzone.\n     *  - **a string**, - the element being dragged must match it as a CSS selector.\n     *  - **`null`** - accept options is cleared - it accepts any element.\n     *\n     * Use the `overlap` option to set how drops are checked for. The allowed\n     * values are:\n     *\n     *   - `'pointer'`, the pointer must be over the dropzone (default)\n     *   - `'center'`, the draggable element's center must be over the dropzone\n     *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n     *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n     *   over the dropzone\n     *\n     * Use the `checker` option to specify a function to check if a dragged element\n     * is over this Interactable.\n     *\n     * @param options - The new options to be set\n     */\n    dropzone(options: DropzoneOptions | boolean): Interactable\n    /** @returns The current setting */\n    dropzone(): DropzoneOptions\n\n    /**\n     * ```js\n     * interact(target)\n     * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n     *                       event,             // TouchEvent/PointerEvent/MouseEvent\n     *                       dropped,           // bool result of the default checker\n     *                       dropzone,          // dropzone Interactable\n     *                       dropElement,       // dropzone elemnt\n     *                       draggable,         // draggable Interactable\n     *                       draggableElement) {// draggable element\n     *\n     *   return dropped && event.target.hasAttribute('allow-drop')\n     * }\n     * ```\n     */\n    dropCheck(\n      dragEvent: InteractEvent,\n      event: PointerEventType,\n      draggable: Interactable,\n      draggableElement: Element,\n      dropElemen: Element,\n      rect: any,\n    ): boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: DropState\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    /** @internal */\n    prevDropzone?: Interactable\n    dropzone?: Interactable\n    dragEnter?: Element\n    dragLeave?: Element\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drop: DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n\n  interface SignalArgs {\n    'actions/drop:start': DropSignalArg\n    'actions/drop:move': DropSignalArg\n    'actions/drop:end': DropSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drop?: typeof drop\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  interface InteractStatic {\n    /**\n     * Returns or sets whether the dimensions of dropzone elements are calculated\n     * on every dragmove or only on dragstart for the default dropChecker\n     *\n     * @param {boolean} [newValue] True to check on each move. False to check only\n     * before start\n     * @return {boolean | interact} The current setting or interact\n     */\n    dynamicDrop: (newValue?: boolean) => boolean | this\n  }\n}\n\ninterface DropSignalArg {\n  interaction: Interaction<'drag'>\n  dragEvent: DragEvent\n}\n\nexport interface ActiveDrop {\n  dropzone: Interactable\n  element: Element\n  rect: Rect\n}\n\nexport interface DropState {\n  cur: {\n    // the dropzone a drag target might be dropped into\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  prev: {\n    // the dropzone that was recently dragged away from\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  // wheather the potential drop was rejected from a listener\n  rejected: boolean\n  // the drop events related to the current drag event\n  events: FiredDropEvents\n  activeDrops: ActiveDrop[]\n}\n\nfunction install(scope: Scope) {\n  const { actions, interactStatic: interact, Interactable, defaults } = scope\n\n  scope.usePlugin(drag)\n\n  Interactable.prototype.dropzone = function (this: Interactable, options) {\n    return dropzoneMethod(this, options)\n  } as Interactable['dropzone']\n\n  Interactable.prototype.dropCheck = function (\n    this: Interactable,\n    dragEvent,\n    event,\n    draggable,\n    draggableElement,\n    dropElement,\n    rect,\n  ) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop!\n  }\n\n  extend(actions.phaselessTypes, {\n    dragenter: true,\n    dragleave: true,\n    dropactivate: true,\n    dropdeactivate: true,\n    dropmove: true,\n    drop: true,\n  })\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDropzones({ interactables }: Scope, draggableElement: Element) {\n  const drops: ActiveDrop[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) {\n      continue\n    }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if (\n      (is.element(accept) && accept !== draggableElement) ||\n      (is.string(accept) && !domUtils.matchesSelector(draggableElement, accept)) ||\n      (is.func(accept) && !accept({ dropzone, draggableElement }))\n    ) {\n      continue\n    }\n\n    for (const dropzoneElement of dropzone.getAllElements()) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n          rect: dropzone.getRect(dropzoneElement),\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents(activeDrops: ActiveDrop[], event: DropEvent) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops.slice()) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops(scope: Scope, dragElement: Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDropzones(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop(\n  { dropState, interactable: draggable, element: dragElement }: Interaction,\n  dragEvent,\n  pointerEvent,\n) {\n  const validDrops: Element[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    const isValid = dropzone.dropCheck(\n      dragEvent,\n      pointerEvent,\n      draggable!,\n      dragElement!,\n      dropzoneElement,\n      rect,\n    )\n    validDrops.push(isValid ? dropzoneElement : null)\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = domUtils.indexOfDeepestElement(validDrops)\n\n  return dropState!.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents(interaction: Interaction, _pointerEvent, dragEvent: DragEvent) {\n  const dropState = interaction.dropState!\n  const dropEvents: Record<string, DropEvent | null> = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target = null as never\n    dropEvents.activate.dropzone = null as never\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target = null as never\n    dropEvents.deactivate.dropzone = null as never\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave = dropEvents.leave.target = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\ntype FiredDropEvents = Partial<\n  Record<'leave' | 'enter' | 'move' | 'drop' | 'activate' | 'deactivate', DropEvent>\n>\n\nfunction fireDropEvents(interaction: Interaction, events: FiredDropEvents) {\n  const dropState = interaction.dropState!\n  const { activeDrops, cur, prev } = dropState\n\n  if (events.leave) {\n    prev.dropzone.fire(events.leave)\n  }\n  if (events.enter) {\n    cur.dropzone.fire(events.enter)\n  }\n  if (events.move) {\n    cur.dropzone.fire(events.move)\n  }\n  if (events.drop) {\n    cur.dropzone.fire(events.drop)\n  }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated({ interaction, iEvent, event }: DoPhaseArg<'drag', EventPhase>, scope: Scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return\n  }\n\n  const dropState = interaction.dropState!\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element!)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected =\n    dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod(interactable: Interactable): DropzoneOptions\nfunction dropzoneMethod(interactable: Interactable, options: DropzoneOptions | boolean): Interactable\nfunction dropzoneMethod(interactable: Interactable, options?: DropzoneOptions | boolean) {\n  if (is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      const prevListeners = interactable.options.drop.listeners\n      prevListeners && interactable.off(prevListeners)\n\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (is.func(options.ondrop)) {\n      interactable.on('drop', options.ondrop)\n    }\n    if (is.func(options.ondropactivate)) {\n      interactable.on('dropactivate', options.ondropactivate)\n    }\n    if (is.func(options.ondropdeactivate)) {\n      interactable.on('dropdeactivate', options.ondropdeactivate)\n    }\n    if (is.func(options.ondragenter)) {\n      interactable.on('dragenter', options.ondragenter)\n    }\n    if (is.func(options.ondragleave)) {\n      interactable.on('dragleave', options.ondragleave)\n    }\n    if (is.func(options.ondropmove)) {\n      interactable.on('dropmove', options.ondropmove)\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    } else if (is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod(\n  interactable: Interactable,\n  dragEvent: InteractEvent,\n  event: PointerEventType,\n  draggable: Interactable,\n  draggableElement: Element,\n  dropElement: Element,\n  rect: any,\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return interactable.options.drop.checker\n      ? interactable.options.drop.checker(\n          dragEvent,\n          event,\n          dropped,\n          interactable,\n          dropElement,\n          draggable,\n          draggableElement,\n        )\n      : false\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = getOriginXY(draggable, draggableElement, 'drag')\n    const page = pointerUtils.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = page.x > rect.left && page.x < rect.right\n    const vertical = page.y > rect.top && page.y < rect.bottom\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width / 2\n    const cy = dragRect.top + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && is.number(dropOverlap)) {\n    const overlapArea =\n      Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n      Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(\n      dragEvent,\n      event,\n      dropped,\n      interactable,\n      dropElement,\n      draggable,\n      draggableElement,\n    )\n  }\n\n  return dropped\n}\n\nconst drop: Plugin = {\n  id: 'actions/drop',\n  install,\n  listeners: {\n    'interactions:before-action-start': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      interaction.dropState = {\n        cur: {\n          dropzone: null,\n          element: null,\n        },\n        prev: {\n          dropzone: null,\n          element: null,\n        },\n        rejected: null,\n        events: null,\n        activeDrops: [],\n      }\n    },\n\n    'interactions:after-action-start': (\n      { interaction, event, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const dropState = interaction.dropState!\n\n      // reset active dropzones\n      dropState.activeDrops = []\n      dropState.events = {}\n      dropState.activeDrops = getActiveDrops(scope, interaction.element!)\n      dropState.events = getDropEvents(interaction, event, dragEvent)\n\n      if (dropState.events.activate) {\n        fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n        scope.fire('actions/drop:start', { interaction, dragEvent })\n      }\n    },\n\n    'interactions:action-move': onEventCreated,\n\n    'interactions:after-action-move': (\n      { interaction, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const dropState = interaction.dropState!\n      fireDropEvents(interaction, dropState.events)\n\n      scope.fire('actions/drop:move', { interaction, dragEvent })\n      dropState.events = {}\n    },\n\n    'interactions:action-end': (arg: DoPhaseArg<'drag', EventPhase>, scope) => {\n      if (arg.interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { interaction, iEvent: dragEvent } = arg\n\n      onEventCreated(arg, scope)\n      fireDropEvents(interaction, interaction.dropState!.events)\n      scope.fire('actions/drop:end', { interaction, dragEvent })\n    },\n\n    'interactions:stop': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      if (dropState) {\n        dropState.activeDrops = null as never\n        dropState.events = null as never\n        dropState.cur.dropzone = null as never\n        dropState.cur.element = null as never\n        dropState.prev.dropzone = null as never\n        dropState.prev.element = null as never\n        dropState.rejected = false\n      }\n    },\n  },\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n\n  filterEventType: (type: string) => type.search('drag') === 0 || type.search('drop') === 0,\n\n  defaults: {\n    enabled: false,\n    accept: null as never,\n    overlap: 'pointer',\n  } as DropzoneOptions,\n}\n\nexport default drop\n"
	],
	"mappings": "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"
}