Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var t,e=(t=require("../../utils/is.prod.js"))&&t.__esModule?t:{default:t};function o({interaction:t}){if("drag"!==t.prepared.name)return;const e=t.prepared.axis;"x"===e?(t.coords.cur.page.y=t.coords.start.page.y,t.coords.cur.client.y=t.coords.start.client.y,t.coords.velocity.client.y=0,t.coords.velocity.page.y=0):"y"===e&&(t.coords.cur.page.x=t.coords.start.page.x,t.coords.cur.client.x=t.coords.start.client.x,t.coords.velocity.client.x=0,t.coords.velocity.page.x=0)}function r({iEvent:t,interaction:e}){if("drag"!==e.prepared.name)return;const o=e.prepared.axis;if("x"===o||"y"===o){const r="x"===o?"y":"x";t.page[r]=e.coords.start.page[r],t.client[r]=e.coords.start.client[r],t.delta[r]=0}}const s={id:"actions/drag",install(t){const{actions:e,Interactable:o,defaults:r}=t;o.prototype.draggable=s.draggable,e.map.drag=s,e.methodDict.drag="draggable",r.actions.drag=s.defaults},listeners:{"interactions:before-action-move":o,"interactions:action-resume":o,"interactions:action-move":r,"auto-start:check"(t){const{interaction:e,interactable:o,buttons:r}=t,s=o.options.drag;if(s&&s.enabled&&(!e.pointerIsDown||!/mouse|pointer/.test(e.pointerType)||0!=(r&o.options.drag.mouseButtons)))return t.action={name:"drag",axis:"start"===s.lockAxis?s.startAxis:s.lockAxis},!1}},draggable(t){return e.default.object(t)?(this.options.drag.enabled=!1!==t.enabled,this.setPerAction("drag",t),this.setOnEvents("drag",t),/^(xy|x|y|start)$/.test(t.lockAxis)&&(this.options.drag.lockAxis=t.lockAxis),/^(xy|x|y)$/.test(t.startAxis)&&(this.options.drag.startAxis=t.startAxis),this):e.default.bool(t)?(this.options.drag.enabled=t,this):this.options.drag},beforeMove:o,move:r,defaults:{startAxis:"xy",lockAxis:"xy"},getCursor(){return"move"},filterEventType:t=>0===t.search("drag")};exports.default=s;
//# sourceMappingURL=plugin.prod.js.map