{
	"version": 3,
	"names": [
		"is",
		"beforeMove",
		"interaction",
		"prepared",
		"name",
		"axis",
		"coords",
		"cur",
		"page",
		"y",
		"start",
		"client",
		"velocity",
		"x",
		"move",
		"iEvent",
		"opposite",
		"delta",
		"drag",
		"id",
		"install",
		"scope",
		"actions",
		"Interactable",
		"defaults",
		"prototype",
		"draggable",
		"map",
		"methodDict",
		"listeners",
		"arg",
		"interactable",
		"buttons",
		"dragOptions",
		"options",
		"enabled",
		"pointerIsDown",
		"test",
		"pointerType",
		"mouseButtons",
		"action",
		"lockAxis",
		"startAxis",
		"object",
		"this",
		"setPerAction",
		"setOnEvents",
		"bool",
		"getCursor",
		"filterEventType",
		"type",
		"search"
	],
	"sources": [
		"plugin.ts"
	],
	"sourcesContent": [
		"import type { Interactable } from '@interactjs/core/Interactable'\nimport type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ListenersArg, OrBoolean } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    draggable(options: Partial<OrBoolean<DraggableOptions>> | boolean): this\n    draggable(): DraggableOptions\n    /**\n     * ```js\n     * interact(element).draggable({\n     *     onstart: function (event) {},\n     *     onmove : function (event) {},\n     *     onend  : function (event) {},\n     *\n     *     // the axis in which the first movement must be\n     *     // for the drag sequence to start\n     *     // 'xy' by default - any direction\n     *     startAxis: 'x' || 'y' || 'xy',\n     *\n     *     // 'xy' by default - don't restrict to one axis (move in any direction)\n     *     // 'x' or 'y' to restrict movement to either axis\n     *     // 'start' to restrict movement to the axis the drag started in\n     *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n     *\n     *     // max number of drags that can happen concurrently\n     *     // with elements of this Interactable. Infinity by default\n     *     max: Infinity,\n     *\n     *     // max number of drags that can target the same element+Interactable\n     *     // 1 by default\n     *     maxPerElement: 2\n     * })\n     *\n     * var isDraggable = interact('element').draggable(); // true\n     * ```\n     *\n     * Get or set whether drag actions can be performed on the target\n     *\n     * @param options - true/false or An object with event\n     * listeners to be fired on drag events (object makes the Interactable\n     * draggable)\n     */\n    draggable(options?: Partial<OrBoolean<DraggableOptions>> | boolean): this | DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drag: DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drag?: typeof drag\n  }\n}\n\nexport type DragEvent = InteractEvent<'drag'>\n\nexport interface DraggableOptions extends PerActionDefaults {\n  startAxis?: 'x' | 'y' | 'xy'\n  lockAxis?: 'x' | 'y' | 'xy' | 'start'\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nfunction install(scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  Interactable.prototype.draggable = drag.draggable\n\n  actions.map.drag = drag\n  actions.methodDict.drag = 'draggable'\n\n  defaults.actions.drag = drag.defaults\n}\n\nfunction beforeMove({ interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y = interaction.coords.start.page.y\n    interaction.coords.cur.client.y = interaction.coords.start.client.y\n\n    interaction.coords.velocity.client.y = 0\n    interaction.coords.velocity.page.y = 0\n  } else if (axis === 'y') {\n    interaction.coords.cur.page.x = interaction.coords.start.page.x\n    interaction.coords.cur.client.x = interaction.coords.start.client.x\n\n    interaction.coords.velocity.client.x = 0\n    interaction.coords.velocity.page.x = 0\n  }\n}\n\nfunction move({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x'\n\n    iEvent.page[opposite] = interaction.coords.start.page[opposite]\n    iEvent.client[opposite] = interaction.coords.start.client[opposite]\n    iEvent.delta[opposite] = 0\n  }\n}\n\nconst draggable: Interactable['draggable'] = function draggable(\n  this: Interactable,\n  options?: DraggableOptions | boolean,\n): any {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled !== false\n    this.setPerAction('drag', options)\n    this.setOnEvents('drag', options)\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis\n    }\n\n    return this\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options\n\n    return this\n  }\n\n  return this.options.drag as DraggableOptions\n}\n\nconst drag: Plugin = {\n  id: 'actions/drag',\n  install,\n  listeners: {\n    'interactions:before-action-move': beforeMove,\n    'interactions:action-resume': beforeMove,\n\n    // dragmove\n    'interactions:action-move': move,\n    'auto-start:check': (arg) => {\n      const { interaction, interactable, buttons } = arg\n      const dragOptions = interactable.options.drag\n\n      if (\n        !(dragOptions && dragOptions.enabled) ||\n        // check mouseButton setting if the pointer is down\n        (interaction.pointerIsDown &&\n          /mouse|pointer/.test(interaction.pointerType) &&\n          (buttons & interactable.options.drag.mouseButtons) === 0)\n      ) {\n        return undefined\n      }\n\n      arg.action = {\n        name: 'drag',\n        axis: dragOptions.lockAxis === 'start' ? dragOptions.startAxis : dragOptions.lockAxis,\n      }\n\n      return false\n    },\n  },\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis: 'xy',\n    lockAxis: 'xy',\n  } as DraggableOptions,\n\n  getCursor() {\n    return 'move'\n  },\n\n  filterEventType: (type: string) => type.search('drag') === 0,\n}\n\nexport default drag\n"
	],
	"mappings": "OAKOA,MAAQ,yBA+Ef,SAASC,GAAWC,YAAEA,IACpB,GAAkC,SAA9BA,EAAYC,SAASC,KAAiB,OAE1C,MAAMC,EAAOH,EAAYC,SAASE,KAErB,MAATA,GACFH,EAAYI,OAAOC,IAAIC,KAAKC,EAAIP,EAAYI,OAAOI,MAAMF,KAAKC,EAC9DP,EAAYI,OAAOC,IAAII,OAAOF,EAAIP,EAAYI,OAAOI,MAAMC,OAAOF,EAElEP,EAAYI,OAAOM,SAASD,OAAOF,EAAI,EACvCP,EAAYI,OAAOM,SAASJ,KAAKC,EAAI,GACnB,MAATJ,IACTH,EAAYI,OAAOC,IAAIC,KAAKK,EAAIX,EAAYI,OAAOI,MAAMF,KAAKK,EAC9DX,EAAYI,OAAOC,IAAII,OAAOE,EAAIX,EAAYI,OAAOI,MAAMC,OAAOE,EAElEX,EAAYI,OAAOM,SAASD,OAAOE,EAAI,EACvCX,EAAYI,OAAOM,SAASJ,KAAKK,EAAI,EAEzC,CAEA,SAASC,GAAKC,OAAEA,EAAMb,YAAEA,IACtB,GAAkC,SAA9BA,EAAYC,SAASC,KAAiB,OAE1C,MAAMC,EAAOH,EAAYC,SAASE,KAElC,GAAa,MAATA,GAAyB,MAATA,EAAc,CAChC,MAAMW,EAAoB,MAATX,EAAe,IAAM,IAEtCU,EAAOP,KAAKQ,GAAYd,EAAYI,OAAOI,MAAMF,KAAKQ,GACtDD,EAAOJ,OAAOK,GAAYd,EAAYI,OAAOI,MAAMC,OAAOK,GAC1DD,EAAOE,MAAMD,GAAY,CAC3B,CACF,CAEA,MA4BME,EAAe,CACnBC,GAAI,eACJC,QA3EeC,GACf,MAAMC,QAAEA,EAAOC,aAAEA,EAAYC,SAAEA,GAAaH,EAE5CE,EAAaE,UAAUC,UAAYR,EAAKQ,UAExCJ,EAAQK,IAAIT,KAAOA,EACnBI,EAAQM,WAAWV,KAAO,YAE1BM,EAASF,QAAQJ,KAAOA,EAAKM,QAC/B,EAmEEK,UAAW,CACT,kCAAmC5B,EACnC,6BAA8BA,EAG9B,2BAA4Ba,EAC5B,kBAoBA,CApBqBgB,GACnB,MAAM5B,YAAEA,EAAW6B,aAAEA,EAAYC,QAAEA,GAAYF,EACzCG,EAAcF,EAAaG,QAAQhB,KAEzC,GACIe,GAAeA,EAAYE,WAE5BjC,EAAYkC,gBACX,gBAAgBC,KAAKnC,EAAYoC,cACsB,IAAtDN,EAAUD,EAAaG,QAAQhB,KAAKqB,eAUzC,OALAT,EAAIU,OAAS,CACXpC,KAAM,OACNC,KAA+B,UAAzB4B,EAAYQ,SAAuBR,EAAYS,UAAYT,EAAYQ,WAGxE,CAAK,GAGhBf,UAzDAQ,GAEA,OAAIlC,EAAG2C,OAAOT,IACZU,KAAKV,QAAQhB,KAAKiB,SAA8B,IAApBD,EAAQC,QACpCS,KAAKC,aAAa,OAAQX,GAC1BU,KAAKE,YAAY,OAAQZ,GAErB,mBAAmBG,KAAKH,EAAQO,YAClCG,KAAKV,QAAQhB,KAAKuB,SAAWP,EAAQO,UAEnC,aAAaJ,KAAKH,EAAQQ,aAC5BE,KAAKV,QAAQhB,KAAKwB,UAAYR,EAAQQ,WAGjCE,MAGL5C,EAAG+C,KAAKb,IACVU,KAAKV,QAAQhB,KAAKiB,QAAUD,EAErBU,MAGFA,KAAKV,QAAQhB,IACtB,EAkCEjB,aACAa,OACAU,SAAU,CACRkB,UAAW,KACXD,SAAU,MAGZO,SAEA,GADE,MAAO,MACT,EAEAC,gBAAkBC,GAAyC,IAAxBA,EAAKC,OAAO,wBAGlCjC"
}