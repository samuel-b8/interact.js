{
	"version": 3,
	"names": [
		"dom",
		"_interopRequireWildcard",
		"require",
		"_extend",
		"_interopRequireDefault",
		"_is",
		"obj",
		"__esModule",
		"default",
		"_getRequireWildcardCache",
		"e",
		"WeakMap",
		"r",
		"t",
		"has",
		"get",
		"n",
		"__proto__",
		"a",
		"Object",
		"defineProperty",
		"getOwnPropertyDescriptor",
		"u",
		"prototype",
		"hasOwnProperty",
		"call",
		"i",
		"set",
		"install",
		"scope",
		"actions",
		"browser",
		"Interactable",
		"defaults",
		"resize",
		"cursors",
		"initCursors",
		"defaultMargin",
		"supportsTouch",
		"supportsPointerEvent",
		"resizable",
		"options",
		"map",
		"methodDict",
		"resizeChecker",
		"arg",
		"interaction",
		"interactable",
		"element",
		"rect",
		"buttons",
		"undefined",
		"page",
		"extend",
		"coords",
		"cur",
		"resizeOptions",
		"enabled",
		"pointerIsDown",
		"test",
		"pointerType",
		"mouseButtons",
		"is",
		"object",
		"edges",
		"resizeEdges",
		"left",
		"right",
		"top",
		"bottom",
		"edge",
		"checkResizeEdge",
		"_latestPointer",
		"eventTarget",
		"margin",
		"action",
		"name",
		"axis",
		"x",
		"y",
		"axes",
		"setPerAction",
		"setOnEvents",
		"string",
		"bool",
		"preserveAspectRatio",
		"square",
		"value",
		"interactableElement",
		"width",
		"number",
		"height",
		"Math",
		"min",
		"abs",
		"matchesUpTo",
		"isIe9",
		"xy",
		"topleft",
		"bottomright",
		"topright",
		"bottomleft",
		"start",
		"iEvent",
		"prepared",
		"resizeEvent",
		"_rects",
		"corrected",
		"previous",
		"delta",
		"deltaRect",
		"move",
		"invert",
		"invertible",
		"current",
		"startRect",
		"swap",
		"max",
		"end",
		"updateEventAxes",
		"resizeAxes",
		"id",
		"before",
		"listeners",
		"interactions:new",
		"NaN",
		"getCursor",
		"result",
		"cursorKey",
		"filterEventType",
		"type",
		"search",
		"_default",
		"exports"
	],
	"sources": [
		"plugin.ts"
	],
	"sourcesContent": [
		"import type { Interactable } from '@interactjs/core/Interactable'\nimport type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type {\n  ActionName,\n  ActionProps,\n  EdgeOptions,\n  FullRect,\n  ListenersArg,\n  OrBoolean,\n  Point,\n  Rect,\n} from '@interactjs/core/types'\nimport * as dom from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nexport type EdgeName = 'top' | 'left' | 'bottom' | 'right'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    resizable(): ResizableOptions\n    resizable(options: Partial<OrBoolean<ResizableOptions>> | boolean): this\n    /**\n     * ```js\n     * interact(element).resizable({\n     *   onstart: function (event) {},\n     *   onmove : function (event) {},\n     *   onend  : function (event) {},\n     *\n     *   edges: {\n     *     top   : true,       // Use pointer coords to check for resize.\n     *     left  : false,      // Disable resizing from left edge.\n     *     bottom: '.resize-s',// Resize if pointer target matches selector\n     *     right : handleEl    // Resize if pointer target is the given Element\n     *   },\n     *\n     *   // Width and height can be adjusted independently. When `true`, width and\n     *   // height are adjusted at a 1:1 ratio.\n     *   square: false,\n     *\n     *   // Width and height can be adjusted independently. When `true`, width and\n     *   // height maintain the aspect ratio they had when resizing started.\n     *   preserveAspectRatio: false,\n     *\n     *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n     *   // 'negate' will allow the rect to have negative width/height\n     *   // 'reposition' will keep the width/height positive by swapping\n     *   // the top and bottom edges and/or swapping the left and right edges\n     *   invert: 'none' || 'negate' || 'reposition'\n     *\n     *   // limit multiple resizes.\n     *   // See the explanation in the {@link Interactable.draggable} example\n     *   max: Infinity,\n     *   maxPerElement: 1,\n     * })\n     *\n     * var isResizeable = interact(element).resizable()\n     * ```\n     *\n     * Gets or sets whether resize actions can be performed on the target\n     *\n     * @param options - true/false or An object with event\n     * listeners to be fired on resize events (object makes the Interactable\n     * resizable)\n     * @returns A boolean indicating if this can be the\n     * target of resize elements, or this Interactable\n     */\n    resizable(options?: Partial<OrBoolean<ResizableOptions>> | boolean): this | ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction<T extends ActionName | null = ActionName> {\n    resizeAxes: 'x' | 'y' | 'xy'\n    styleCursor(newValue: boolean): this\n    styleCursor(): boolean\n    resizeStartAspectRatio: number\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    resize: ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    resize?: typeof resize\n  }\n}\n\nexport interface ResizableOptions extends PerActionDefaults {\n  square?: boolean\n  preserveAspectRatio?: boolean\n  edges?: EdgeOptions | null\n  axis?: 'x' | 'y' | 'xy' // deprecated\n  invert?: 'none' | 'negate' | 'reposition'\n  margin?: number\n  squareResize?: boolean\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nexport interface ResizeEvent<P extends EventPhase = EventPhase> extends InteractEvent<'resize', P> {\n  deltaRect?: FullRect\n  edges?: ActionProps['edges']\n}\n\nfunction install(scope: Scope) {\n  const {\n    actions,\n    browser,\n    Interactable, // tslint:disable-line no-shadowed-variable\n    defaults,\n  } = scope\n\n  // Less Precision with touch input\n\n  resize.cursors = initCursors(browser)\n  resize.defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10\n\n  Interactable.prototype.resizable = function (this: Interactable, options: ResizableOptions | boolean) {\n    return resizable(this, options, scope)\n  } as Interactable['resizable']\n\n  actions.map.resize = resize\n  actions.methodDict.resize = 'resizable'\n\n  defaults.actions.resize = resize.defaults\n}\n\nfunction resizeChecker(arg) {\n  const { interaction, interactable, element, rect, buttons } = arg\n\n  if (!rect) {\n    return undefined\n  }\n\n  const page = extend({}, interaction.coords.cur.page)\n  const resizeOptions = interactable.options.resize\n\n  if (\n    !(resizeOptions && resizeOptions.enabled) ||\n    // check mouseButton setting if the pointer is down\n    (interaction.pointerIsDown &&\n      /mouse|pointer/.test(interaction.pointerType) &&\n      (buttons & resizeOptions.mouseButtons) === 0)\n  ) {\n    return undefined\n  }\n\n  // if using resize.edges\n  if (is.object(resizeOptions.edges)) {\n    const resizeEdges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n\n    for (const edge in resizeEdges) {\n      resizeEdges[edge] = checkResizeEdge(\n        edge,\n        resizeOptions.edges[edge],\n        page,\n        interaction._latestPointer.eventTarget,\n        element,\n        rect,\n        resizeOptions.margin || resize.defaultMargin,\n      )\n    }\n\n    resizeEdges.left = resizeEdges.left && !resizeEdges.right\n    resizeEdges.top = resizeEdges.top && !resizeEdges.bottom\n\n    if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n      arg.action = {\n        name: 'resize',\n        edges: resizeEdges,\n      }\n    }\n  } else {\n    const right = resizeOptions.axis !== 'y' && page.x > rect.right - resize.defaultMargin\n    const bottom = resizeOptions.axis !== 'x' && page.y > rect.bottom - resize.defaultMargin\n\n    if (right || bottom) {\n      arg.action = {\n        name: 'resize',\n        axes: (right ? 'x' : '') + (bottom ? 'y' : ''),\n      }\n    }\n  }\n\n  return arg.action ? false : undefined\n}\n\nfunction resizable(interactable: Interactable, options: OrBoolean<ResizableOptions> | boolean, scope: Scope) {\n  if (is.object(options)) {\n    interactable.options.resize.enabled = options.enabled !== false\n    interactable.setPerAction('resize', options)\n    interactable.setOnEvents('resize', options)\n\n    if (is.string(options.axis) && /^x$|^y$|^xy$/.test(options.axis)) {\n      interactable.options.resize.axis = options.axis\n    } else if (options.axis === null) {\n      interactable.options.resize.axis = scope.defaults.actions.resize.axis\n    }\n\n    if (is.bool(options.preserveAspectRatio)) {\n      interactable.options.resize.preserveAspectRatio = options.preserveAspectRatio\n    } else if (is.bool(options.square)) {\n      interactable.options.resize.square = options.square\n    }\n\n    return interactable\n  }\n  if (is.bool(options)) {\n    interactable.options.resize.enabled = options\n\n    return interactable\n  }\n  return interactable.options.resize\n}\n\nfunction checkResizeEdge(\n  name: string,\n  value: any,\n  page: Point,\n  element: Node,\n  interactableElement: Element,\n  rect: Rect,\n  margin: number,\n) {\n  // false, '', undefined, null\n  if (!value) {\n    return false\n  }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width = is.number(rect.width) ? rect.width : rect.right - rect.left\n    const height = is.number(rect.height) ? rect.height : rect.bottom - rect.top\n\n    // don't use margin greater than half the relevent dimension\n    margin = Math.min(margin, Math.abs((name === 'left' || name === 'right' ? width : height) / 2))\n\n    if (width < 0) {\n      if (name === 'left') {\n        name = 'right'\n      } else if (name === 'right') {\n        name = 'left'\n      }\n    }\n    if (height < 0) {\n      if (name === 'top') {\n        name = 'bottom'\n      } else if (name === 'bottom') {\n        name = 'top'\n      }\n    }\n\n    if (name === 'left') {\n      const edge = width >= 0 ? rect.left : rect.right\n      return page.x < edge + margin\n    }\n    if (name === 'top') {\n      const edge = height >= 0 ? rect.top : rect.bottom\n      return page.y < edge + margin\n    }\n\n    if (name === 'right') {\n      return page.x > (width >= 0 ? rect.right : rect.left) - margin\n    }\n    if (name === 'bottom') {\n      return page.y > (height >= 0 ? rect.bottom : rect.top) - margin\n    }\n  }\n\n  // the remaining checks require an element\n  if (!is.element(element)) {\n    return false\n  }\n\n  return is.element(value)\n    ? // the value is an element to use as a resize handle\n      value === element\n    : // otherwise check if element matches value as selector\n      dom.matchesUpTo(element, value, interactableElement)\n}\n\n/* eslint-disable multiline-ternary */\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nfunction initCursors(browser: typeof import('@interactjs/utils/browser').default) {\n  return browser.isIe9\n    ? {\n        x: 'e-resize',\n        y: 's-resize',\n        xy: 'se-resize',\n\n        top: 'n-resize',\n        left: 'w-resize',\n        bottom: 's-resize',\n        right: 'e-resize',\n        topleft: 'se-resize',\n        bottomright: 'se-resize',\n        topright: 'ne-resize',\n        bottomleft: 'ne-resize',\n      }\n    : {\n        x: 'ew-resize',\n        y: 'ns-resize',\n        xy: 'nwse-resize',\n\n        top: 'ns-resize',\n        left: 'ew-resize',\n        bottom: 'ns-resize',\n        right: 'ew-resize',\n        topleft: 'nwse-resize',\n        bottomright: 'nwse-resize',\n        topright: 'nesw-resize',\n        bottomleft: 'nesw-resize',\n      }\n}\n/* eslint-enable multiline-ternary */\n\nfunction start({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\n    return\n  }\n\n  const resizeEvent = iEvent as ResizeEvent\n  const rect = interaction.rect\n\n  interaction._rects = {\n    start: extend({}, rect),\n    corrected: extend({}, rect),\n    previous: extend({}, rect),\n    delta: {\n      left: 0,\n      right: 0,\n      width: 0,\n      top: 0,\n      bottom: 0,\n      height: 0,\n    },\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction move({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n  const resizeOptions = interaction.interactable.options.resize\n  const invert = resizeOptions.invert\n  const invertible = invert === 'reposition' || invert === 'negate'\n\n  const current = interaction.rect\n  const { start: startRect, corrected, delta: deltaRect, previous } = interaction._rects\n\n  extend(previous, corrected)\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    extend(corrected, current)\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      if (corrected.top > corrected.bottom) {\n        const swap = corrected.top\n\n        corrected.top = corrected.bottom\n        corrected.bottom = swap\n      }\n      if (corrected.left > corrected.right) {\n        const swap = corrected.left\n\n        corrected.left = corrected.right\n        corrected.right = swap\n      }\n    }\n  } else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    corrected.top = Math.min(current.top, startRect.bottom)\n    corrected.bottom = Math.max(current.bottom, startRect.top)\n    corrected.left = Math.min(current.left, startRect.right)\n    corrected.right = Math.max(current.right, startRect.left)\n  }\n\n  corrected.width = corrected.right - corrected.left\n  corrected.height = corrected.bottom - corrected.top\n\n  for (const edge in corrected) {\n    deltaRect[edge] = corrected[edge] - previous[edge]\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = corrected\n  resizeEvent.deltaRect = deltaRect\n}\n\nfunction end({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction updateEventAxes({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any, any>\n  interaction: Interaction\n}) {\n  if (interaction.prepared.name !== 'resize' || !interaction.resizeAxes) return\n\n  const options = interaction.interactable.options\n  const resizeEvent = iEvent as ResizeEvent\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = resizeEvent.delta.y\n    } else {\n      resizeEvent.delta.y = resizeEvent.delta.x\n    }\n    resizeEvent.axes = 'xy'\n  } else {\n    resizeEvent.axes = interaction.resizeAxes\n\n    if (interaction.resizeAxes === 'x') {\n      resizeEvent.delta.y = 0\n    } else if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = 0\n    }\n  }\n}\n\nconst resize: Plugin = {\n  id: 'actions/resize',\n  before: ['actions/drag'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.resizeAxes = 'xy'\n    },\n\n    'interactions:action-start': (arg) => {\n      start(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-move': (arg) => {\n      move(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-end': end,\n    'auto-start:check': resizeChecker,\n  },\n\n  defaults: {\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  } as ResizableOptions,\n\n  cursors: null as ReturnType<typeof initCursors>,\n\n  getCursor({ edges, axis, name }: ActionProps) {\n    const cursors = resize.cursors\n    let result: string = null\n\n    if (axis) {\n      result = cursors[name + axis]\n    } else if (edges) {\n      let cursorKey = ''\n\n      for (const edge of ['top', 'bottom', 'left', 'right']) {\n        if (edges[edge]) {\n          cursorKey += edge\n        }\n      }\n\n      result = cursors[cursorKey]\n    }\n\n    return result\n  },\n\n  filterEventType: (type: string) => type.search('resize') === 0,\n\n  defaultMargin: null as number,\n}\n\nexport default resize\n"
	],
	"mappings": "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"
}