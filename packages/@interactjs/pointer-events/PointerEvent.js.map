{
	"version": 3,
	"names": [
		"_BaseEvent",
		"require",
		"pointerUtils",
		"_interopRequireWildcard",
		"_getRequireWildcardCache",
		"e",
		"WeakMap",
		"r",
		"t",
		"__esModule",
		"default",
		"has",
		"get",
		"n",
		"__proto__",
		"a",
		"Object",
		"defineProperty",
		"getOwnPropertyDescriptor",
		"u",
		"prototype",
		"hasOwnProperty",
		"call",
		"i",
		"set",
		"PointerEvent",
		"BaseEvent",
		"constructor",
		"type",
		"pointer",
		"event",
		"eventTarget",
		"interaction",
		"timeStamp",
		"pointerExtend",
		"originalEvent",
		"pointerId",
		"getPointerId",
		"pointerType",
		"getPointerType",
		"target",
		"currentTarget",
		"pointerIndex",
		"getPointerIndex",
		"dt",
		"pointers",
		"downTime",
		"interval",
		"tapTime",
		"double",
		"prevTap",
		"_subtractOrigin",
		"x",
		"originX",
		"y",
		"originY",
		"pageX",
		"pageY",
		"clientX",
		"clientY",
		"_addOrigin",
		"preventDefault",
		"exports"
	],
	"sources": [
		"PointerEvent.ts"
	],
	"sourcesContent": [
		"import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { PointerEventType, PointerType, Point } from '@interactjs/core/types'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nexport class PointerEvent<T extends string = any> extends BaseEvent<never> {\n  declare type: T\n  declare originalEvent: PointerEventType\n  declare pointerId: number\n  declare pointerType: string\n  declare double: boolean\n  declare pageX: number\n  declare pageY: number\n  declare clientX: number\n  declare clientY: number\n  declare dt: number\n  declare eventable: any;\n  [key: string]: any\n\n  constructor(\n    type: T,\n    pointer: PointerType | PointerEvent<any>,\n    event: PointerEventType,\n    eventTarget: Node,\n    interaction: Interaction<never>,\n    timeStamp: number,\n  ) {\n    super(interaction)\n    pointerUtils.pointerExtend(this, event)\n\n    if (event !== pointer) {\n      pointerUtils.pointerExtend(this, pointer)\n    }\n\n    this.timeStamp = timeStamp\n    this.originalEvent = event\n    this.type = type\n    this.pointerId = pointerUtils.getPointerId(pointer)\n    this.pointerType = pointerUtils.getPointerType(pointer)\n    this.target = eventTarget\n    this.currentTarget = null\n\n    if (type === 'tap') {\n      const pointerIndex = interaction.getPointerIndex(pointer)\n      this.dt = this.timeStamp - interaction.pointers[pointerIndex].downTime\n\n      const interval = this.timeStamp - interaction.tapTime\n\n      this.double =\n        !!interaction.prevTap &&\n        interaction.prevTap.type !== 'doubletap' &&\n        interaction.prevTap.target === this.target &&\n        interval < 500\n    } else if (type === 'doubletap') {\n      this.dt = (pointer as PointerEvent<'tap'>).timeStamp - interaction.tapTime\n      this.double = true\n    }\n  }\n\n  _subtractOrigin({ x: originX, y: originY }: Point) {\n    this.pageX -= originX\n    this.pageY -= originY\n    this.clientX -= originX\n    this.clientY -= originY\n\n    return this\n  }\n\n  _addOrigin({ x: originX, y: originY }: Point) {\n    this.pageX += originX\n    this.pageY += originY\n    this.clientX += originX\n    this.clientY += originY\n\n    return this\n  }\n\n  /**\n   * Prevent the default behaviour of the original Event\n   */\n  preventDefault() {\n    this.originalEvent.preventDefault()\n  }\n}\n"
	],
	"mappings": "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"
}